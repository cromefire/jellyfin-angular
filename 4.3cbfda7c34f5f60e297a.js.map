{"version":3,"sources":["./src/app/shell/shell.module.ts","./node_modules/@angular/material/esm2015/tooltip.js.pre-build-optimizer.js","./node_modules/@angular/material/esm2015/progress-bar.js.pre-build-optimizer.js","./node_modules/@angular/material/progress-bar/typings/index.ngfactory.js.pre-build-optimizer.js","./node_modules/@angular/material/progress-bar/typings/index.d.ts.MatProgressBar.html","./node_modules/rxjs/_esm2015/internal/operators/sampleTime.js.pre-build-optimizer.js","./node_modules/ngx-infinite-scroll/modules/ngx-infinite-scroll.js.pre-build-optimizer.js","./src/app/common/slider/slider.component.ts","./src/app/common/slider/slider.component.ngfactory.js.pre-build-optimizer.js","./src/app/common/slider/slider.component.scss.shim.ngstyle.js.pre-build-optimizer.js","./src/app/common/slider/slider.component.html","./src/app/library/home/home.component.ts","./src/app/library/home/home.component.ngfactory.js.pre-build-optimizer.js","./src/app/library/home/home.component.scss.shim.ngstyle.js.pre-build-optimizer.js","./src/app/library/home/home.component.html","./node_modules/@angular/material/esm2015/grid-list.js.pre-build-optimizer.js","./node_modules/@angular/material/grid-list/typings/index.ngfactory.js.pre-build-optimizer.js","./node_modules/@angular/material/grid-list/typings/index.d.ts.MatGridList.html","./node_modules/@angular/material/grid-list/typings/index.d.ts.MatGridTile.html","./src/app/utils/emums.ts","./src/app/library/movies/movies.component.ts","./src/app/library/movies/movies.component.ngfactory.js.pre-build-optimizer.js","./src/app/library/movies/movies.component.scss.shim.ngstyle.js.pre-build-optimizer.js","./src/app/library/movies/movies.component.html","./node_modules/@angular/material/tooltip/typings/index.ngfactory.js.pre-build-optimizer.js","./node_modules/@angular/material/tooltip/typings/index.d.ts.TooltipComponent.html","./src/app/shell/shell-routing.module.ts","./src/app/shell/shell.module.ngfactory.js.pre-build-optimizer.js"],"names":["ShellModule","SCROLL_THROTTLE_MS","TOOLTIP_PANEL_CLASS","getMatTooltipInvalidPositionError","position","Error","MAT_TOOLTIP_SCROLL_STRATEGY","MAT_TOOLTIP_SCROLL_STRATEGY_FACTORY","overlay","scrollStrategies","reposition","scrollThrottle","MAT_TOOLTIP_DEFAULT_OPTIONS","providedIn","factory","showDelay","hideDelay","touchendHideDelay","_overlay","_elementRef","_scrollDispatcher","_viewContainerRef","_ngZone","platform","_ariaDescriber","_focusMonitor","scrollStrategy","_dir","_defaultOptions","hammerLoader","this","_position","_disabled","_message","_manualListeners","Map","_destroyed","Subject","_scrollStrategy","element","nativeElement","hasGestures","window","Hammer","IOS","ANDROID","set","show","hide","forEach","listener","event","addEventListener","monitor","pipe","takeUntil","subscribe","origin","run","value","_overlayRef","_updatePosition","_tooltipInstance","updatePosition","removeDescription","trim","_isTooltipVisible","_updateTooltipMessage","runOutsideAngular","Promise","resolve","then","describe","message","_tooltipClass","_setTooltipClass","elementStyle","nodeName","webkitUserSelect","userSelect","msUserSelect","draggable","webkitUserDrag","dispose","removeEventListener","clear","next","complete","stopMonitoring","delay","disabled","_showTimeoutId","_hideTimeoutId","overlayRef","_createOverlay","_detach","_portal","attach","instance","afterHidden","isVisible","e","keyCode","preventDefault","stopPropagation","scrollableAncestors","getAncestorScrollContainers","strategy","flexibleConnectedTo","withTransformOriginOn","withFlexibleDimensions","withViewportMargin","withScrollableContainers","positionChanges","change","scrollableViewProperties","isOverlayClipped","create","direction","positionStrategy","panelClass","detachments","hasAttached","detach","getConfig","_getOrigin","_getOverlayPosition","withPositions","Object","assign","main","fallback","isLtr","originPosition","originX","originY","x","y","_invertPosition","overlayPosition","overlayX","overlayY","_markForCheck","onMicrotaskEmpty","asObservable","take","tooltipClass","_changeDetectorRef","_breakpointObserver","_visibility","_closeOnInteraction","_onHide","_isHandset","observe","Handset","clearTimeout","setTimeout","toState","markForCheck","MatTooltipModule","MatProgressBarBase","_MatProgressBarMixinBase","MAT_PROGRESS_BAR_LOCATION","_document","_location","location","getPathname","pathname","search","progressbarId","_animationMode","super","_isNoopAnimation","_value","_bufferValue","animationEnd","_animationEndSubscription","Subscription","EMPTY","mode","path","split","_rectangleFillValue","v","clamp","_emitAnimationEnd","transform","bufferValue","_primaryValueBar","fromEvent","filter","target","unsubscribe","min","max","Math","MatProgressBarModule","RenderType_MatProgressBar","encapsulation","styles","data","View_MatProgressBar_0","_l","SampleTimeOperator","period","scheduler","subscriber","source","Subscriber","destination","hasValue","add","schedule","dispatchNotification","lastValue","state","notifyNext","resolveContainerElement","selector","scrollWindow","defaultElement","fromRoot","hasWindow","document","documentElement","container","customRoot","querySelector","findElement","inputPropChanged","prop","firstChange","VerticalProps","clientHeight","offsetHeight","scrollHeight","pageYOffset","offsetTop","scrollTop","top","HorizontalProps","AxisResolver","vertical","propsMap","isElementWindow","windowElement","some","obj","prototype","toString","call","includes","getDocumentElement","isContainerWindow","calculatePoints","resolver","height","isWindow","axis","offsetHeightKey","clientHeightKey","extractHeightPropKeys","getElementHeight","extractHeightForElement","scrolled","getElementPageYOffset","nativeElementHeight","totalToScroll","elem","topKey","getBoundingClientRect","getElementOffsetTop","calculatePointsForWindow","scrollTopKey","scrollHeightKey","calculatePointsForElement","isNaN","docElem","pageYOffsetKey","offsetTopKey","ownerDocument","defaultView","shouldFireScrollEvent","distance","scrollingDown","remaining","containerBreakpoint","scrolledUntilNow","down","up","ScrollState","lastScrollPosition","lastTotalToScroll","triggered","updateScrollPosition","updateTotalToScroll","scroll","isScrollingDown","InfiniteScrollActions","DOWN","UP","toInfiniteScrollAction","response","scrollDown","stats","currentScrollPosition","type","payload","zone","scrolledUp","infiniteScrollDistance","infiniteScrollUpDistance","infiniteScrollThrottle","infiniteScrollDisabled","infiniteScrollContainer","immediateCheck","horizontal","alwaysCallback","setup","containerChanged","disabledChanged","distanceChanged","shouldSetup","currentValue","destroyScroller","disposeScroller","config","scrollContainer","createResolverWithContainer","createResolver","scrollState","upDistance","downDistance","options","obs","throttle","lift","sampleTime","attachScrollEvent","mergeMap","of","map","positionStats","fire","isScrollingDownwards","getScrollStats","toInfiniteScrollParams","tap","updateScroll","isTriggeredCurrentTotal","shouldTriggerEvents","isTriggeredScroll","updateTriggeredFlag","createScroller","disable","handleOnScroll","emit","InfiniteScrollModule","SliderComponent","changeDetector","slider","detectChanges","console","log","parentRect","getClientRects","child","Array","from","children","reverse","right","left","scrollIntoView","behavior","block","length","RenderType_SliderComponent","View_SliderComponent_0","ad","more","apiService","authService","router","myMedia","continueWatching","latestMovies","loaded","all","loadViews","loadStarted","loadLatest","createUrlTree","get","userId","resp","item","Items","tile","subtitle","Name","CollectionType","ImageTags","Primary","image","assembleUrl","Id","tag","quality","maxWidth","maxHeight","push","toPromise","query","Limit","Recursive","ImageTypeLimit","EnableImageTypes","EnableTotalRecordCount","MediaTypes","title","cut","sliceTitle","year","Date","PremiereDate","getFullYear","originalTitle","progress","UserData","PlayedPercentage","BackdropImageTags","keys","imageType","EnableImageType","PemiereDate","space","slice","lastIndexOf","RenderType_HomeComponent","View_HomeComponent_4","$event","View_HomeComponent_5","View_HomeComponent_3","_v","onClick","button","ctrlKey","metaKey","shiftKey","routerLink","View_HomeComponent_2","View_HomeComponent_7","View_HomeComponent_8","View_HomeComponent_6","en","_handleKeydown","_handleTouchend","View_HomeComponent_10","View_HomeComponent_11","View_HomeComponent_9","View_HomeComponent_1","View_HomeComponent_12","View_HomeComponent_0","View_HomeComponent_Host_0","_ck","HomeComponentNgFactory","MAT_GRID_LIST","_element","_gridList","_rowspan","_colspan","round","property","TileCoordinator","columnIndex","rowIndex","lastRowMax","tracker","rowCount","numColumns","tiles","fill","positions","_trackTile","gapStartIndex","_findMatchingGap","colspan","_markTilePosition","TilePosition","tileCols","gapEndIndex","_nextRow","indexOf","_findGapEndIndex","i","start","rowspan","row","col","cssCalcAllowedValue","TileStyler","_rows","gutterSize","cols","_gutterSize","normalizeUnits","_cols","_direction","sizePercent","gutterFraction","baseSize","offset","calc","span","colIndex","percentWidthPerTile","gutterWidthFractionPerTile","setColStyles","setRowStyles","percentWidth","gutterWidth","baseTileWidth","getBaseTileSize","_setStyle","getTilePosition","getTileSize","tileHeight","FixedTileStyler","fixedRowHeight","init","test","getTileSpan","getGutterSpan","list","_setListStyle","_tiles","RatioTileStyler","_parseRatio","baseTileHeight","rowHeightRatio","ratioParts","parseFloat","FitTileStyler","exp","match","MAT_FIT_MODE","_gutter","_rowHeight","newValue","_setTileStyler","_checkCols","_checkRowHeight","_layoutTiles","rowHeight","_tileStyler","reset","_tileCoordinator","update","index","pos","setStyle","getComputedHeight","style","MatGridListModule","RenderType_MatGridList","View_MatGridList_0","RenderType_MatGridTile","View_MatGridTile_0","Order","SortAttributes","sortAttr","SORT_NAME","sortOrder","ASCENDING","imageTypes","SortBy","SortOrder","IncludeItemTypes","Fields","join","StartIndex","movies","getFirstImageLocation","base","RenderType_MoviesComponent","View_MoviesComponent_2","View_MoviesComponent_1","View_MoviesComponent_0","loadMore","View_MoviesComponent_Host_0","MoviesComponentNgFactory","RenderType_TooltipComponent","name","definitions","opacity","undefined","expr","animation","steps","timings","View_TooltipComponent_0","_co","_animationStart","_animationDone","View_TooltipComponent_Host_0","_handleBodyInteraction","TooltipComponentNgFactory","ShellRoutingModule","ShellModuleNgFactory","component"],"mappings":"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","file":"4.3cbfda7c34f5f60e297a.js","sourcesContent":["import { CommonModule } from \"@angular/common\";\nimport { NgModule } from \"@angular/core\";\nimport {\n    MatButtonModule,\n    MatCardModule,\n    MatGridListModule,\n    MatIconModule,\n    MatProgressBarModule,\n    MatProgressSpinnerModule,\n    MatRippleModule,\n    MatTooltipModule\n} from \"@angular/material\";\nimport { InfiniteScrollModule } from \"ngx-infinite-scroll\";\nimport { SliderComponent } from \"../common/slider/slider.component\";\n\nimport { HomeComponent } from \"../library/home/home.component\";\nimport { MoviesComponent } from \"../library/movies/movies.component\";\nimport { ShellRoutingModule } from \"./shell-routing.module\";\n\n@NgModule({\n    declarations: [HomeComponent, SliderComponent, MoviesComponent],\n    imports: [\n        CommonModule,\n        ShellRoutingModule,\n        MatCardModule,\n        MatButtonModule,\n        MatRippleModule,\n        MatProgressSpinnerModule,\n        InfiniteScrollModule,\n        MatTooltipModule,\n        MatProgressBarModule,\n        MatIconModule,\n        MatGridListModule\n    ],\n    bootstrap: []\n})\nexport class ShellModule {}\n","/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nimport { animate, keyframes, state, style, transition, trigger } from '@angular/animations';\nimport { AriaDescriber, FocusMonitor, A11yModule } from '@angular/cdk/a11y';\nimport { Directionality } from '@angular/cdk/bidi';\nimport { coerceBooleanProperty } from '@angular/cdk/coercion';\nimport { ESCAPE, hasModifierKey } from '@angular/cdk/keycodes';\nimport { BreakpointObserver, Breakpoints } from '@angular/cdk/layout';\nimport { Overlay, OverlayModule } from '@angular/cdk/overlay';\nimport { Platform } from '@angular/cdk/platform';\nimport { ComponentPortal } from '@angular/cdk/portal';\nimport { ScrollDispatcher } from '@angular/cdk/scrolling';\nimport { ChangeDetectionStrategy, ChangeDetectorRef, Component, Directive, ElementRef, Inject, InjectionToken, Input, NgZone, Optional, ViewContainerRef, ViewEncapsulation, NgModule } from '@angular/core';\nimport { HAMMER_LOADER, HAMMER_GESTURE_CONFIG } from '@angular/platform-browser';\nimport { Subject } from 'rxjs';\nimport { take, takeUntil } from 'rxjs/operators';\nimport { CommonModule } from '@angular/common';\nimport { GestureConfig, MatCommonModule } from '@angular/material/core';\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n/**\n * Animations used by MatTooltip.\n * \\@docs-private\n * @type {?}\n */\nconst matTooltipAnimations = {\n    /**\n     * Animation that transitions a tooltip in and out.\n     */\n    tooltipState: trigger('state', [\n        state('initial, void, hidden', style({ opacity: 0, transform: 'scale(0)' })),\n        state('visible', style({ transform: 'scale(1)' })),\n        transition('* => visible', animate('200ms cubic-bezier(0, 0, 0.2, 1)', keyframes([\n            style({ opacity: 0, transform: 'scale(0)', offset: 0 }),\n            style({ opacity: 0.5, transform: 'scale(0.99)', offset: 0.5 }),\n            style({ opacity: 1, transform: 'scale(1)', offset: 1 })\n        ]))),\n        transition('* => hidden', animate('100ms cubic-bezier(0, 0, 0.2, 1)', style({ opacity: 0 }))),\n    ])\n};\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n/**\n * Time in ms to throttle repositioning after scroll events.\n * @type {?}\n */\nconst SCROLL_THROTTLE_MS = 20;\n/**\n * CSS class that will be attached to the overlay panel.\n * @type {?}\n */\nconst TOOLTIP_PANEL_CLASS = 'mat-tooltip-panel';\n/**\n * Creates an error to be thrown if the user supplied an invalid tooltip position.\n * \\@docs-private\n * @param {?} position\n * @return {?}\n */\nfunction getMatTooltipInvalidPositionError(position) {\n    return Error(`Tooltip position \"${position}\" is invalid.`);\n}\n/**\n * Injection token that determines the scroll handling while a tooltip is visible.\n * @type {?}\n */\nconst MAT_TOOLTIP_SCROLL_STRATEGY = new InjectionToken('mat-tooltip-scroll-strategy');\n/**\n * \\@docs-private\n * @param {?} overlay\n * @return {?}\n */\nfunction MAT_TOOLTIP_SCROLL_STRATEGY_FACTORY(overlay) {\n    return (/**\n     * @return {?}\n     */\n    () => overlay.scrollStrategies.reposition({ scrollThrottle: SCROLL_THROTTLE_MS }));\n}\n/**\n * \\@docs-private\n * @type {?}\n */\nconst MAT_TOOLTIP_SCROLL_STRATEGY_FACTORY_PROVIDER = {\n    provide: MAT_TOOLTIP_SCROLL_STRATEGY,\n    deps: [Overlay],\n    useFactory: MAT_TOOLTIP_SCROLL_STRATEGY_FACTORY,\n};\n/**\n * Injection token to be used to override the default options for `matTooltip`.\n * @type {?}\n */\nconst MAT_TOOLTIP_DEFAULT_OPTIONS = new InjectionToken('mat-tooltip-default-options', {\n    providedIn: 'root',\n    factory: MAT_TOOLTIP_DEFAULT_OPTIONS_FACTORY\n});\n/**\n * \\@docs-private\n * @return {?}\n */\nfunction MAT_TOOLTIP_DEFAULT_OPTIONS_FACTORY() {\n    return {\n        showDelay: 0,\n        hideDelay: 0,\n        touchendHideDelay: 1500,\n    };\n}\n/**\n * Directive that attaches a material design tooltip to the host element. Animates the showing and\n * hiding of a tooltip provided position (defaults to below the element).\n *\n * https://material.io/design/components/tooltips.html\n */\nclass MatTooltip {\n    /**\n     * @param {?} _overlay\n     * @param {?} _elementRef\n     * @param {?} _scrollDispatcher\n     * @param {?} _viewContainerRef\n     * @param {?} _ngZone\n     * @param {?} platform\n     * @param {?} _ariaDescriber\n     * @param {?} _focusMonitor\n     * @param {?} scrollStrategy\n     * @param {?} _dir\n     * @param {?} _defaultOptions\n     * @param {?=} hammerLoader\n     */\n    constructor(_overlay, _elementRef, _scrollDispatcher, _viewContainerRef, _ngZone, platform, _ariaDescriber, _focusMonitor, scrollStrategy, _dir, _defaultOptions, hammerLoader) {\n        this._overlay = _overlay;\n        this._elementRef = _elementRef;\n        this._scrollDispatcher = _scrollDispatcher;\n        this._viewContainerRef = _viewContainerRef;\n        this._ngZone = _ngZone;\n        this._ariaDescriber = _ariaDescriber;\n        this._focusMonitor = _focusMonitor;\n        this._dir = _dir;\n        this._defaultOptions = _defaultOptions;\n        this._position = 'below';\n        this._disabled = false;\n        /**\n         * The default delay in ms before showing the tooltip after show is called\n         */\n        this.showDelay = this._defaultOptions.showDelay;\n        /**\n         * The default delay in ms before hiding the tooltip after hide is called\n         */\n        this.hideDelay = this._defaultOptions.hideDelay;\n        this._message = '';\n        this._manualListeners = new Map();\n        /**\n         * Emits when the component is destroyed.\n         */\n        this._destroyed = new Subject();\n        this._scrollStrategy = scrollStrategy;\n        /** @type {?} */\n        const element = _elementRef.nativeElement;\n        /** @type {?} */\n        const hasGestures = typeof window === 'undefined' || ((/** @type {?} */ (window))).Hammer || hammerLoader;\n        // The mouse events shouldn't be bound on mobile devices, because they can prevent the\n        // first tap from firing its click event or can cause the tooltip to open for clicks.\n        if (!platform.IOS && !platform.ANDROID) {\n            this._manualListeners\n                .set('mouseenter', (/**\n             * @return {?}\n             */\n            () => this.show()))\n                .set('mouseleave', (/**\n             * @return {?}\n             */\n            () => this.hide()));\n        }\n        else if (!hasGestures) {\n            // If Hammerjs isn't loaded, fall back to showing on `touchstart`, otherwise\n            // there's no way for the user to trigger the tooltip on a touch device.\n            this._manualListeners.set('touchstart', (/**\n             * @return {?}\n             */\n            () => this.show()));\n        }\n        this._manualListeners.forEach((/**\n         * @param {?} listener\n         * @param {?} event\n         * @return {?}\n         */\n        (listener, event) => element.addEventListener(event, listener)));\n        _focusMonitor.monitor(_elementRef).pipe(takeUntil(this._destroyed)).subscribe((/**\n         * @param {?} origin\n         * @return {?}\n         */\n        origin => {\n            // Note that the focus monitor runs outside the Angular zone.\n            if (!origin) {\n                _ngZone.run((/**\n                 * @return {?}\n                 */\n                () => this.hide(0)));\n            }\n            else if (origin === 'keyboard') {\n                _ngZone.run((/**\n                 * @return {?}\n                 */\n                () => this.show()));\n            }\n        }));\n        if (_defaultOptions && _defaultOptions.position) {\n            this.position = _defaultOptions.position;\n        }\n    }\n    /**\n     * Allows the user to define the position of the tooltip relative to the parent element\n     * @return {?}\n     */\n    get position() { return this._position; }\n    /**\n     * @param {?} value\n     * @return {?}\n     */\n    set position(value) {\n        if (value !== this._position) {\n            this._position = value;\n            if (this._overlayRef) {\n                this._updatePosition();\n                if (this._tooltipInstance) {\n                    (/** @type {?} */ (this._tooltipInstance)).show(0);\n                }\n                this._overlayRef.updatePosition();\n            }\n        }\n    }\n    /**\n     * Disables the display of the tooltip.\n     * @return {?}\n     */\n    get disabled() { return this._disabled; }\n    /**\n     * @param {?} value\n     * @return {?}\n     */\n    set disabled(value) {\n        this._disabled = coerceBooleanProperty(value);\n        // If tooltip is disabled, hide immediately.\n        if (this._disabled) {\n            this.hide(0);\n        }\n    }\n    /**\n     * The message to be displayed in the tooltip\n     * @return {?}\n     */\n    get message() { return this._message; }\n    /**\n     * @param {?} value\n     * @return {?}\n     */\n    set message(value) {\n        this._ariaDescriber.removeDescription(this._elementRef.nativeElement, this._message);\n        // If the message is not a string (e.g. number), convert it to a string and trim it.\n        this._message = value != null ? `${value}`.trim() : '';\n        if (!this._message && this._isTooltipVisible()) {\n            this.hide(0);\n        }\n        else {\n            this._updateTooltipMessage();\n            this._ngZone.runOutsideAngular((/**\n             * @return {?}\n             */\n            () => {\n                // The `AriaDescriber` has some functionality that avoids adding a description if it's the\n                // same as the `aria-label` of an element, however we can't know whether the tooltip trigger\n                // has a data-bound `aria-label` or when it'll be set for the first time. We can avoid the\n                // issue by deferring the description by a tick so Angular has time to set the `aria-label`.\n                Promise.resolve().then((/**\n                 * @return {?}\n                 */\n                () => {\n                    this._ariaDescriber.describe(this._elementRef.nativeElement, this.message);\n                }));\n            }));\n        }\n    }\n    /**\n     * Classes to be passed to the tooltip. Supports the same syntax as `ngClass`.\n     * @return {?}\n     */\n    get tooltipClass() { return this._tooltipClass; }\n    /**\n     * @param {?} value\n     * @return {?}\n     */\n    set tooltipClass(value) {\n        this._tooltipClass = value;\n        if (this._tooltipInstance) {\n            this._setTooltipClass(this._tooltipClass);\n        }\n    }\n    /**\n     * Setup styling-specific things\n     * @return {?}\n     */\n    ngOnInit() {\n        /** @type {?} */\n        const element = this._elementRef.nativeElement;\n        /** @type {?} */\n        const elementStyle = (/** @type {?} */ (element.style));\n        if (element.nodeName === 'INPUT' || element.nodeName === 'TEXTAREA') {\n            // When we bind a gesture event on an element (in this case `longpress`), HammerJS\n            // will add some inline styles by default, including `user-select: none`. This is\n            // problematic on iOS and in Safari, because it will prevent users from typing in inputs.\n            // Since `user-select: none` is not needed for the `longpress` event and can cause unexpected\n            // behavior for text fields, we always clear the `user-select` to avoid such issues.\n            elementStyle.webkitUserSelect = elementStyle.userSelect = elementStyle.msUserSelect = '';\n        }\n        // Hammer applies `-webkit-user-drag: none` on all elements by default,\n        // which breaks the native drag&drop. If the consumer explicitly made\n        // the element draggable, clear the `-webkit-user-drag`.\n        if (element.draggable && elementStyle.webkitUserDrag === 'none') {\n            elementStyle.webkitUserDrag = '';\n        }\n    }\n    /**\n     * Dispose the tooltip when destroyed.\n     * @return {?}\n     */\n    ngOnDestroy() {\n        if (this._overlayRef) {\n            this._overlayRef.dispose();\n            this._tooltipInstance = null;\n        }\n        // Clean up the event listeners set in the constructor\n        this._manualListeners.forEach((/**\n         * @param {?} listener\n         * @param {?} event\n         * @return {?}\n         */\n        (listener, event) => {\n            this._elementRef.nativeElement.removeEventListener(event, listener);\n        }));\n        this._manualListeners.clear();\n        this._destroyed.next();\n        this._destroyed.complete();\n        this._ariaDescriber.removeDescription(this._elementRef.nativeElement, this.message);\n        this._focusMonitor.stopMonitoring(this._elementRef);\n    }\n    /**\n     * Shows the tooltip after the delay in ms, defaults to tooltip-delay-show or 0ms if no input\n     * @param {?=} delay\n     * @return {?}\n     */\n    show(delay = this.showDelay) {\n        if (this.disabled || !this.message || (this._isTooltipVisible() &&\n            !(/** @type {?} */ (this._tooltipInstance))._showTimeoutId && !(/** @type {?} */ (this._tooltipInstance))._hideTimeoutId)) {\n            return;\n        }\n        /** @type {?} */\n        const overlayRef = this._createOverlay();\n        this._detach();\n        this._portal = this._portal || new ComponentPortal(TooltipComponent, this._viewContainerRef);\n        this._tooltipInstance = overlayRef.attach(this._portal).instance;\n        this._tooltipInstance.afterHidden()\n            .pipe(takeUntil(this._destroyed))\n            .subscribe((/**\n         * @return {?}\n         */\n        () => this._detach()));\n        this._setTooltipClass(this._tooltipClass);\n        this._updateTooltipMessage();\n        (/** @type {?} */ (this._tooltipInstance)).show(delay);\n    }\n    /**\n     * Hides the tooltip after the delay in ms, defaults to tooltip-delay-hide or 0ms if no input\n     * @param {?=} delay\n     * @return {?}\n     */\n    hide(delay = this.hideDelay) {\n        if (this._tooltipInstance) {\n            this._tooltipInstance.hide(delay);\n        }\n    }\n    /**\n     * Shows/hides the tooltip\n     * @return {?}\n     */\n    toggle() {\n        this._isTooltipVisible() ? this.hide() : this.show();\n    }\n    /**\n     * Returns true if the tooltip is currently visible to the user\n     * @return {?}\n     */\n    _isTooltipVisible() {\n        return !!this._tooltipInstance && this._tooltipInstance.isVisible();\n    }\n    /**\n     * Handles the keydown events on the host element.\n     * @param {?} e\n     * @return {?}\n     */\n    _handleKeydown(e) {\n        if (this._isTooltipVisible() && e.keyCode === ESCAPE && !hasModifierKey(e)) {\n            e.preventDefault();\n            e.stopPropagation();\n            this.hide(0);\n        }\n    }\n    /**\n     * Handles the touchend events on the host element.\n     * @return {?}\n     */\n    _handleTouchend() {\n        this.hide(this._defaultOptions.touchendHideDelay);\n    }\n    /**\n     * Create the overlay config and position strategy\n     * @private\n     * @return {?}\n     */\n    _createOverlay() {\n        if (this._overlayRef) {\n            return this._overlayRef;\n        }\n        /** @type {?} */\n        const scrollableAncestors = this._scrollDispatcher.getAncestorScrollContainers(this._elementRef);\n        // Create connected position strategy that listens for scroll events to reposition.\n        /** @type {?} */\n        const strategy = this._overlay.position()\n            .flexibleConnectedTo(this._elementRef)\n            .withTransformOriginOn('.mat-tooltip')\n            .withFlexibleDimensions(false)\n            .withViewportMargin(8)\n            .withScrollableContainers(scrollableAncestors);\n        strategy.positionChanges.pipe(takeUntil(this._destroyed)).subscribe((/**\n         * @param {?} change\n         * @return {?}\n         */\n        change => {\n            if (this._tooltipInstance) {\n                if (change.scrollableViewProperties.isOverlayClipped && this._tooltipInstance.isVisible()) {\n                    // After position changes occur and the overlay is clipped by\n                    // a parent scrollable then close the tooltip.\n                    this._ngZone.run((/**\n                     * @return {?}\n                     */\n                    () => this.hide(0)));\n                }\n            }\n        }));\n        this._overlayRef = this._overlay.create({\n            direction: this._dir,\n            positionStrategy: strategy,\n            panelClass: TOOLTIP_PANEL_CLASS,\n            scrollStrategy: this._scrollStrategy()\n        });\n        this._updatePosition();\n        this._overlayRef.detachments()\n            .pipe(takeUntil(this._destroyed))\n            .subscribe((/**\n         * @return {?}\n         */\n        () => this._detach()));\n        return this._overlayRef;\n    }\n    /**\n     * Detaches the currently-attached tooltip.\n     * @private\n     * @return {?}\n     */\n    _detach() {\n        if (this._overlayRef && this._overlayRef.hasAttached()) {\n            this._overlayRef.detach();\n        }\n        this._tooltipInstance = null;\n    }\n    /**\n     * Updates the position of the current tooltip.\n     * @private\n     * @return {?}\n     */\n    _updatePosition() {\n        /** @type {?} */\n        const position = (/** @type {?} */ ((/** @type {?} */ (this._overlayRef)).getConfig().positionStrategy));\n        /** @type {?} */\n        const origin = this._getOrigin();\n        /** @type {?} */\n        const overlay = this._getOverlayPosition();\n        position.withPositions([\n            Object.assign({}, origin.main, overlay.main),\n            Object.assign({}, origin.fallback, overlay.fallback)\n        ]);\n    }\n    /**\n     * Returns the origin position and a fallback position based on the user's position preference.\n     * The fallback position is the inverse of the origin (e.g. `'below' -> 'above'`).\n     * @return {?}\n     */\n    _getOrigin() {\n        /** @type {?} */\n        const isLtr = !this._dir || this._dir.value == 'ltr';\n        /** @type {?} */\n        const position = this.position;\n        /** @type {?} */\n        let originPosition;\n        if (position == 'above' || position == 'below') {\n            originPosition = { originX: 'center', originY: position == 'above' ? 'top' : 'bottom' };\n        }\n        else if (position == 'before' ||\n            (position == 'left' && isLtr) ||\n            (position == 'right' && !isLtr)) {\n            originPosition = { originX: 'start', originY: 'center' };\n        }\n        else if (position == 'after' ||\n            (position == 'right' && isLtr) ||\n            (position == 'left' && !isLtr)) {\n            originPosition = { originX: 'end', originY: 'center' };\n        }\n        else {\n            throw getMatTooltipInvalidPositionError(position);\n        }\n        const { x, y } = this._invertPosition(originPosition.originX, originPosition.originY);\n        return {\n            main: originPosition,\n            fallback: { originX: x, originY: y }\n        };\n    }\n    /**\n     * Returns the overlay position and a fallback position based on the user's preference\n     * @return {?}\n     */\n    _getOverlayPosition() {\n        /** @type {?} */\n        const isLtr = !this._dir || this._dir.value == 'ltr';\n        /** @type {?} */\n        const position = this.position;\n        /** @type {?} */\n        let overlayPosition;\n        if (position == 'above') {\n            overlayPosition = { overlayX: 'center', overlayY: 'bottom' };\n        }\n        else if (position == 'below') {\n            overlayPosition = { overlayX: 'center', overlayY: 'top' };\n        }\n        else if (position == 'before' ||\n            (position == 'left' && isLtr) ||\n            (position == 'right' && !isLtr)) {\n            overlayPosition = { overlayX: 'end', overlayY: 'center' };\n        }\n        else if (position == 'after' ||\n            (position == 'right' && isLtr) ||\n            (position == 'left' && !isLtr)) {\n            overlayPosition = { overlayX: 'start', overlayY: 'center' };\n        }\n        else {\n            throw getMatTooltipInvalidPositionError(position);\n        }\n        const { x, y } = this._invertPosition(overlayPosition.overlayX, overlayPosition.overlayY);\n        return {\n            main: overlayPosition,\n            fallback: { overlayX: x, overlayY: y }\n        };\n    }\n    /**\n     * Updates the tooltip message and repositions the overlay according to the new message length\n     * @private\n     * @return {?}\n     */\n    _updateTooltipMessage() {\n        // Must wait for the message to be painted to the tooltip so that the overlay can properly\n        // calculate the correct positioning based on the size of the text.\n        if (this._tooltipInstance) {\n            this._tooltipInstance.message = this.message;\n            this._tooltipInstance._markForCheck();\n            this._ngZone.onMicrotaskEmpty.asObservable().pipe(take(1), takeUntil(this._destroyed)).subscribe((/**\n             * @return {?}\n             */\n            () => {\n                if (this._tooltipInstance) {\n                    (/** @type {?} */ (this._overlayRef)).updatePosition();\n                }\n            }));\n        }\n    }\n    /**\n     * Updates the tooltip class\n     * @private\n     * @param {?} tooltipClass\n     * @return {?}\n     */\n    _setTooltipClass(tooltipClass) {\n        if (this._tooltipInstance) {\n            this._tooltipInstance.tooltipClass = tooltipClass;\n            this._tooltipInstance._markForCheck();\n        }\n    }\n    /**\n     * Inverts an overlay position.\n     * @private\n     * @param {?} x\n     * @param {?} y\n     * @return {?}\n     */\n    _invertPosition(x, y) {\n        if (this.position === 'above' || this.position === 'below') {\n            if (y === 'top') {\n                y = 'bottom';\n            }\n            else if (y === 'bottom') {\n                y = 'top';\n            }\n        }\n        else {\n            if (x === 'end') {\n                x = 'start';\n            }\n            else if (x === 'start') {\n                x = 'end';\n            }\n        }\n        return { x, y };\n    }\n}\nMatTooltip.decorators = [\n    { type: Directive, args: [{\n                selector: '[matTooltip]',\n                exportAs: 'matTooltip',\n                host: {\n                    '(longpress)': 'show()',\n                    '(keydown)': '_handleKeydown($event)',\n                    '(touchend)': '_handleTouchend()',\n                },\n            },] },\n];\n/** @nocollapse */\nMatTooltip.ctorParameters = () => [\n    { type: Overlay },\n    { type: ElementRef },\n    { type: ScrollDispatcher },\n    { type: ViewContainerRef },\n    { type: NgZone },\n    { type: Platform },\n    { type: AriaDescriber },\n    { type: FocusMonitor },\n    { type: undefined, decorators: [{ type: Inject, args: [MAT_TOOLTIP_SCROLL_STRATEGY,] }] },\n    { type: Directionality, decorators: [{ type: Optional }] },\n    { type: undefined, decorators: [{ type: Optional }, { type: Inject, args: [MAT_TOOLTIP_DEFAULT_OPTIONS,] }] },\n    { type: undefined, decorators: [{ type: Optional }, { type: Inject, args: [HAMMER_LOADER,] }] }\n];\nMatTooltip.propDecorators = {\n    position: [{ type: Input, args: ['matTooltipPosition',] }],\n    disabled: [{ type: Input, args: ['matTooltipDisabled',] }],\n    showDelay: [{ type: Input, args: ['matTooltipShowDelay',] }],\n    hideDelay: [{ type: Input, args: ['matTooltipHideDelay',] }],\n    message: [{ type: Input, args: ['matTooltip',] }],\n    tooltipClass: [{ type: Input, args: ['matTooltipClass',] }]\n};\n/**\n * Internal component that wraps the tooltip's content.\n * \\@docs-private\n */\nclass TooltipComponent {\n    /**\n     * @param {?} _changeDetectorRef\n     * @param {?} _breakpointObserver\n     */\n    constructor(_changeDetectorRef, _breakpointObserver) {\n        this._changeDetectorRef = _changeDetectorRef;\n        this._breakpointObserver = _breakpointObserver;\n        /**\n         * Property watched by the animation framework to show or hide the tooltip\n         */\n        this._visibility = 'initial';\n        /**\n         * Whether interactions on the page should close the tooltip\n         */\n        this._closeOnInteraction = false;\n        /**\n         * Subject for notifying that the tooltip has been hidden from the view\n         */\n        this._onHide = new Subject();\n        /**\n         * Stream that emits whether the user has a handset-sized display.\n         */\n        this._isHandset = this._breakpointObserver.observe(Breakpoints.Handset);\n    }\n    /**\n     * Shows the tooltip with an animation originating from the provided origin\n     * @param {?} delay Amount of milliseconds to the delay showing the tooltip.\n     * @return {?}\n     */\n    show(delay) {\n        // Cancel the delayed hide if it is scheduled\n        if (this._hideTimeoutId) {\n            clearTimeout(this._hideTimeoutId);\n            this._hideTimeoutId = null;\n        }\n        // Body interactions should cancel the tooltip if there is a delay in showing.\n        this._closeOnInteraction = true;\n        this._showTimeoutId = setTimeout((/**\n         * @return {?}\n         */\n        () => {\n            this._visibility = 'visible';\n            this._showTimeoutId = null;\n            // Mark for check so if any parent component has set the\n            // ChangeDetectionStrategy to OnPush it will be checked anyways\n            this._markForCheck();\n        }), delay);\n    }\n    /**\n     * Begins the animation to hide the tooltip after the provided delay in ms.\n     * @param {?} delay Amount of milliseconds to delay showing the tooltip.\n     * @return {?}\n     */\n    hide(delay) {\n        // Cancel the delayed show if it is scheduled\n        if (this._showTimeoutId) {\n            clearTimeout(this._showTimeoutId);\n            this._showTimeoutId = null;\n        }\n        this._hideTimeoutId = setTimeout((/**\n         * @return {?}\n         */\n        () => {\n            this._visibility = 'hidden';\n            this._hideTimeoutId = null;\n            // Mark for check so if any parent component has set the\n            // ChangeDetectionStrategy to OnPush it will be checked anyways\n            this._markForCheck();\n        }), delay);\n    }\n    /**\n     * Returns an observable that notifies when the tooltip has been hidden from view.\n     * @return {?}\n     */\n    afterHidden() {\n        return this._onHide.asObservable();\n    }\n    /**\n     * Whether the tooltip is being displayed.\n     * @return {?}\n     */\n    isVisible() {\n        return this._visibility === 'visible';\n    }\n    /**\n     * @return {?}\n     */\n    ngOnDestroy() {\n        this._onHide.complete();\n    }\n    /**\n     * @return {?}\n     */\n    _animationStart() {\n        this._closeOnInteraction = false;\n    }\n    /**\n     * @param {?} event\n     * @return {?}\n     */\n    _animationDone(event) {\n        /** @type {?} */\n        const toState = (/** @type {?} */ (event.toState));\n        if (toState === 'hidden' && !this.isVisible()) {\n            this._onHide.next();\n        }\n        if (toState === 'visible' || toState === 'hidden') {\n            this._closeOnInteraction = true;\n        }\n    }\n    /**\n     * Interactions on the HTML body should close the tooltip immediately as defined in the\n     * material design spec.\n     * https://material.io/design/components/tooltips.html#behavior\n     * @return {?}\n     */\n    _handleBodyInteraction() {\n        if (this._closeOnInteraction) {\n            this.hide(0);\n        }\n    }\n    /**\n     * Marks that the tooltip needs to be checked in the next change detection run.\n     * Mainly used for rendering the initial text before positioning a tooltip, which\n     * can be problematic in components with OnPush change detection.\n     * @return {?}\n     */\n    _markForCheck() {\n        this._changeDetectorRef.markForCheck();\n    }\n}\nTooltipComponent.decorators = [\n    { type: Component, args: [{selector: 'mat-tooltip-component',\n                template: \"<div class=\\\"mat-tooltip\\\" [ngClass]=\\\"tooltipClass\\\" [class.mat-tooltip-handset]=\\\"(_isHandset | async)?.matches\\\" [@state]=\\\"_visibility\\\" (@state.start)=\\\"_animationStart()\\\" (@state.done)=\\\"_animationDone($event)\\\">{{message}}</div>\",\n                styles: [\".mat-tooltip-panel{pointer-events:none!important}.mat-tooltip{color:#fff;border-radius:4px;margin:14px;max-width:250px;padding-left:8px;padding-right:8px;overflow:hidden;text-overflow:ellipsis}@media (-ms-high-contrast:active){.mat-tooltip{outline:solid 1px}}.mat-tooltip-handset{margin:24px;padding-left:16px;padding-right:16px}\"],\n                encapsulation: ViewEncapsulation.None,\n                changeDetection: ChangeDetectionStrategy.OnPush,\n                animations: [matTooltipAnimations.tooltipState],\n                host: {\n                    // Forces the element to have a layout in IE and Edge. This fixes issues where the element\n                    // won't be rendered if the animations are disabled or there is no web animations polyfill.\n                    '[style.zoom]': '_visibility === \"visible\" ? 1 : null',\n                    '(body:click)': 'this._handleBodyInteraction()',\n                    'aria-hidden': 'true',\n                }\n            },] },\n];\n/** @nocollapse */\nTooltipComponent.ctorParameters = () => [\n    { type: ChangeDetectorRef },\n    { type: BreakpointObserver }\n];\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\nclass MatTooltipModule {\n}\nMatTooltipModule.decorators = [\n    { type: NgModule, args: [{\n                imports: [\n                    A11yModule,\n                    CommonModule,\n                    OverlayModule,\n                    MatCommonModule,\n                ],\n                exports: [MatTooltip, TooltipComponent, MatCommonModule],\n                declarations: [MatTooltip, TooltipComponent],\n                entryComponents: [TooltipComponent],\n                providers: [\n                    MAT_TOOLTIP_SCROLL_STRATEGY_FACTORY_PROVIDER,\n                    { provide: HAMMER_GESTURE_CONFIG, useClass: GestureConfig },\n                ]\n            },] },\n];\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n\nexport { MatTooltipModule, getMatTooltipInvalidPositionError, MAT_TOOLTIP_SCROLL_STRATEGY_FACTORY, MAT_TOOLTIP_DEFAULT_OPTIONS_FACTORY, SCROLL_THROTTLE_MS, TOOLTIP_PANEL_CLASS, MAT_TOOLTIP_SCROLL_STRATEGY, MAT_TOOLTIP_SCROLL_STRATEGY_FACTORY_PROVIDER, MAT_TOOLTIP_DEFAULT_OPTIONS, MatTooltip, TooltipComponent, matTooltipAnimations };\n//# sourceMappingURL=tooltip.js.map\n","/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nimport { Component, ChangeDetectionStrategy, ElementRef, Inject, Input, Output, EventEmitter, Optional, NgZone, ViewEncapsulation, ViewChild, InjectionToken, inject, NgModule } from '@angular/core';\nimport { fromEvent, Subscription } from 'rxjs';\nimport { filter } from 'rxjs/operators';\nimport { ANIMATION_MODULE_TYPE } from '@angular/platform-browser/animations';\nimport { mixinColor, MatCommonModule } from '@angular/material/core';\nimport { DOCUMENT, CommonModule } from '@angular/common';\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n// Boilerplate for applying mixins to MatProgressBar.\n/**\n * \\@docs-private\n */\nclass MatProgressBarBase {\n    /**\n     * @param {?} _elementRef\n     */\n    constructor(_elementRef) {\n        this._elementRef = _elementRef;\n    }\n}\n/** @type {?} */\nconst _MatProgressBarMixinBase = mixinColor(MatProgressBarBase, 'primary');\n/**\n * Injection token used to provide the current location to `MatProgressBar`.\n * Used to handle server-side rendering and to stub out during unit tests.\n * \\@docs-private\n * @type {?}\n */\nconst MAT_PROGRESS_BAR_LOCATION = new InjectionToken('mat-progress-bar-location', { providedIn: 'root', factory: MAT_PROGRESS_BAR_LOCATION_FACTORY });\n/**\n * \\@docs-private\n * @return {?}\n */\nfunction MAT_PROGRESS_BAR_LOCATION_FACTORY() {\n    /** @type {?} */\n    const _document = inject(DOCUMENT);\n    /** @type {?} */\n    const _location = _document ? _document.location : null;\n    return {\n        // Note that this needs to be a function, rather than a property, because Angular\n        // will only resolve it once, but we want the current path on each call.\n        getPathname: (/**\n         * @return {?}\n         */\n        () => _location ? (_location.pathname + _location.search) : '')\n    };\n}\n/**\n * Counter used to generate unique IDs for progress bars.\n * @type {?}\n */\nlet progressbarId = 0;\n/**\n * `<mat-progress-bar>` component.\n */\nclass MatProgressBar extends _MatProgressBarMixinBase {\n    /**\n     * @param {?} _elementRef\n     * @param {?} _ngZone\n     * @param {?=} _animationMode\n     * @param {?=} location\n     */\n    constructor(_elementRef, _ngZone, _animationMode, \n    /**\n     * @deprecated `location` parameter to be made required.\n     * @breaking-change 8.0.0\n     */\n    location) {\n        super(_elementRef);\n        this._elementRef = _elementRef;\n        this._ngZone = _ngZone;\n        this._animationMode = _animationMode;\n        /**\n         * Flag that indicates whether NoopAnimations mode is set to true.\n         */\n        this._isNoopAnimation = false;\n        this._value = 0;\n        this._bufferValue = 0;\n        /**\n         * Event emitted when animation of the primary progress bar completes. This event will not\n         * be emitted when animations are disabled, nor will it be emitted for modes with continuous\n         * animations (indeterminate and query).\n         */\n        this.animationEnd = new EventEmitter();\n        /**\n         * Reference to animation end subscription to be unsubscribed on destroy.\n         */\n        this._animationEndSubscription = Subscription.EMPTY;\n        /**\n         * Mode of the progress bar.\n         *\n         * Input must be one of these values: determinate, indeterminate, buffer, query, defaults to\n         * 'determinate'.\n         * Mirrored to mode attribute.\n         */\n        this.mode = 'determinate';\n        /**\n         * ID of the progress bar.\n         */\n        this.progressbarId = `mat-progress-bar-${progressbarId++}`;\n        // We need to prefix the SVG reference with the current path, otherwise they won't work\n        // in Safari if the page has a `<base>` tag. Note that we need quotes inside the `url()`,\n        // because named route URLs can contain parentheses (see #12338). Also we don't use since\n        // we can't tell the difference between whether\n        // the consumer is using the hash location strategy or not, because `Location` normalizes\n        // both `/#/foo/bar` and `/foo/bar` to the same thing.\n        /** @type {?} */\n        const path = location ? location.getPathname().split('#')[0] : '';\n        this._rectangleFillValue = `url('${path}#${this.progressbarId}')`;\n        this._isNoopAnimation = _animationMode === 'NoopAnimations';\n    }\n    /**\n     * Value of the progress bar. Defaults to zero. Mirrored to aria-valuenow.\n     * @return {?}\n     */\n    get value() { return this._value; }\n    /**\n     * @param {?} v\n     * @return {?}\n     */\n    set value(v) {\n        this._value = clamp(v || 0);\n        // When noop animation is set to true, trigger animationEnd directly.\n        if (this._isNoopAnimation) {\n            this._emitAnimationEnd();\n        }\n    }\n    /**\n     * Buffer value of the progress bar. Defaults to zero.\n     * @return {?}\n     */\n    get bufferValue() { return this._bufferValue; }\n    /**\n     * @param {?} v\n     * @return {?}\n     */\n    set bufferValue(v) { this._bufferValue = clamp(v || 0); }\n    /**\n     * Gets the current transform value for the progress bar's primary indicator.\n     * @return {?}\n     */\n    _primaryTransform() {\n        /** @type {?} */\n        const scale = this.value / 100;\n        return { transform: `scaleX(${scale})` };\n    }\n    /**\n     * Gets the current transform value for the progress bar's buffer indicator. Only used if the\n     * progress mode is set to buffer, otherwise returns an undefined, causing no transformation.\n     * @return {?}\n     */\n    _bufferTransform() {\n        if (this.mode === 'buffer') {\n            /** @type {?} */\n            const scale = this.bufferValue / 100;\n            return { transform: `scaleX(${scale})` };\n        }\n        return undefined;\n    }\n    /**\n     * @return {?}\n     */\n    ngAfterViewInit() {\n        if (!this._isNoopAnimation) {\n            // Run outside angular so change detection didn't get triggered on every transition end\n            // instead only on the animation that we care about (primary value bar's transitionend)\n            this._ngZone.runOutsideAngular(((/**\n             * @return {?}\n             */\n            () => {\n                /** @type {?} */\n                const element = this._primaryValueBar.nativeElement;\n                this._animationEndSubscription =\n                    ((/** @type {?} */ (fromEvent(element, 'transitionend'))))\n                        .pipe(filter(((/**\n                     * @param {?} e\n                     * @return {?}\n                     */\n                    (e) => e.target === element))))\n                        .subscribe((/**\n                     * @return {?}\n                     */\n                    () => this._ngZone.run((/**\n                     * @return {?}\n                     */\n                    () => this._emitAnimationEnd()))));\n            })));\n        }\n    }\n    /**\n     * @return {?}\n     */\n    ngOnDestroy() {\n        this._animationEndSubscription.unsubscribe();\n    }\n    /**\n     * Emit an animationEnd event if in determinate or buffer mode.\n     * @private\n     * @return {?}\n     */\n    _emitAnimationEnd() {\n        if (this.mode === 'determinate' || this.mode === 'buffer') {\n            this.animationEnd.next({ value: this.value });\n        }\n    }\n}\nMatProgressBar.decorators = [\n    { type: Component, args: [{selector: 'mat-progress-bar',\n                exportAs: 'matProgressBar',\n                host: {\n                    'role': 'progressbar',\n                    'aria-valuemin': '0',\n                    'aria-valuemax': '100',\n                    '[attr.aria-valuenow]': '(mode === \"indeterminate\" || mode === \"query\") ? null : value',\n                    '[attr.mode]': 'mode',\n                    'class': 'mat-progress-bar',\n                    '[class._mat-animation-noopable]': '_isNoopAnimation',\n                },\n                inputs: ['color'],\n                template: \"<svg width=\\\"100%\\\" height=\\\"4\\\" focusable=\\\"false\\\" class=\\\"mat-progress-bar-background mat-progress-bar-element\\\"><defs><pattern [id]=\\\"progressbarId\\\" x=\\\"4\\\" y=\\\"0\\\" width=\\\"8\\\" height=\\\"4\\\" patternUnits=\\\"userSpaceOnUse\\\"><circle cx=\\\"2\\\" cy=\\\"2\\\" r=\\\"2\\\"/></pattern></defs><rect [attr.fill]=\\\"_rectangleFillValue\\\" width=\\\"100%\\\" height=\\\"100%\\\"/></svg><div class=\\\"mat-progress-bar-buffer mat-progress-bar-element\\\" [ngStyle]=\\\"_bufferTransform()\\\"></div><div class=\\\"mat-progress-bar-primary mat-progress-bar-fill mat-progress-bar-element\\\" [ngStyle]=\\\"_primaryTransform()\\\" #primaryValueBar></div><div class=\\\"mat-progress-bar-secondary mat-progress-bar-fill mat-progress-bar-element\\\"></div>\",\n                styles: [\".mat-progress-bar{display:block;height:4px;overflow:hidden;position:relative;transition:opacity 250ms linear;width:100%}._mat-animation-noopable.mat-progress-bar{transition:none;animation:none}.mat-progress-bar .mat-progress-bar-element,.mat-progress-bar .mat-progress-bar-fill::after{height:100%;position:absolute;width:100%}.mat-progress-bar .mat-progress-bar-background{width:calc(100% + 10px)}@media (-ms-high-contrast:active){.mat-progress-bar .mat-progress-bar-background{display:none}}.mat-progress-bar .mat-progress-bar-buffer{transform-origin:top left;transition:transform 250ms ease}@media (-ms-high-contrast:active){.mat-progress-bar .mat-progress-bar-buffer{border-top:solid 5px;opacity:.5}}.mat-progress-bar .mat-progress-bar-secondary{display:none}.mat-progress-bar .mat-progress-bar-fill{animation:none;transform-origin:top left;transition:transform 250ms ease}@media (-ms-high-contrast:active){.mat-progress-bar .mat-progress-bar-fill{border-top:solid 4px}}.mat-progress-bar .mat-progress-bar-fill::after{animation:none;content:'';display:inline-block;left:0}.mat-progress-bar[dir=rtl],[dir=rtl] .mat-progress-bar{transform:rotateY(180deg)}.mat-progress-bar[mode=query]{transform:rotateZ(180deg)}.mat-progress-bar[mode=query][dir=rtl],[dir=rtl] .mat-progress-bar[mode=query]{transform:rotateZ(180deg) rotateY(180deg)}.mat-progress-bar[mode=indeterminate] .mat-progress-bar-fill,.mat-progress-bar[mode=query] .mat-progress-bar-fill{transition:none}.mat-progress-bar[mode=indeterminate] .mat-progress-bar-primary,.mat-progress-bar[mode=query] .mat-progress-bar-primary{-webkit-backface-visibility:hidden;backface-visibility:hidden;animation:mat-progress-bar-primary-indeterminate-translate 2s infinite linear;left:-145.166611%}.mat-progress-bar[mode=indeterminate] .mat-progress-bar-primary.mat-progress-bar-fill::after,.mat-progress-bar[mode=query] .mat-progress-bar-primary.mat-progress-bar-fill::after{-webkit-backface-visibility:hidden;backface-visibility:hidden;animation:mat-progress-bar-primary-indeterminate-scale 2s infinite linear}.mat-progress-bar[mode=indeterminate] .mat-progress-bar-secondary,.mat-progress-bar[mode=query] .mat-progress-bar-secondary{-webkit-backface-visibility:hidden;backface-visibility:hidden;animation:mat-progress-bar-secondary-indeterminate-translate 2s infinite linear;left:-54.888891%;display:block}.mat-progress-bar[mode=indeterminate] .mat-progress-bar-secondary.mat-progress-bar-fill::after,.mat-progress-bar[mode=query] .mat-progress-bar-secondary.mat-progress-bar-fill::after{-webkit-backface-visibility:hidden;backface-visibility:hidden;animation:mat-progress-bar-secondary-indeterminate-scale 2s infinite linear}.mat-progress-bar[mode=buffer] .mat-progress-bar-background{-webkit-backface-visibility:hidden;backface-visibility:hidden;animation:mat-progress-bar-background-scroll 250ms infinite linear;display:block}.mat-progress-bar._mat-animation-noopable .mat-progress-bar-background,.mat-progress-bar._mat-animation-noopable .mat-progress-bar-buffer,.mat-progress-bar._mat-animation-noopable .mat-progress-bar-fill,.mat-progress-bar._mat-animation-noopable .mat-progress-bar-fill::after,.mat-progress-bar._mat-animation-noopable .mat-progress-bar-primary,.mat-progress-bar._mat-animation-noopable .mat-progress-bar-primary.mat-progress-bar-fill::after,.mat-progress-bar._mat-animation-noopable .mat-progress-bar-secondary,.mat-progress-bar._mat-animation-noopable .mat-progress-bar-secondary.mat-progress-bar-fill::after{animation:none;transition:none}@keyframes mat-progress-bar-primary-indeterminate-translate{0%{transform:translateX(0)}20%{animation-timing-function:cubic-bezier(.5,0,.70173,.49582);transform:translateX(0)}59.15%{animation-timing-function:cubic-bezier(.30244,.38135,.55,.95635);transform:translateX(83.67142%)}100%{transform:translateX(200.61106%)}}@keyframes mat-progress-bar-primary-indeterminate-scale{0%{transform:scaleX(.08)}36.65%{animation-timing-function:cubic-bezier(.33473,.12482,.78584,1);transform:scaleX(.08)}69.15%{animation-timing-function:cubic-bezier(.06,.11,.6,1);transform:scaleX(.66148)}100%{transform:scaleX(.08)}}@keyframes mat-progress-bar-secondary-indeterminate-translate{0%{animation-timing-function:cubic-bezier(.15,0,.51506,.40969);transform:translateX(0)}25%{animation-timing-function:cubic-bezier(.31033,.28406,.8,.73371);transform:translateX(37.65191%)}48.35%{animation-timing-function:cubic-bezier(.4,.62704,.6,.90203);transform:translateX(84.38617%)}100%{transform:translateX(160.27778%)}}@keyframes mat-progress-bar-secondary-indeterminate-scale{0%{animation-timing-function:cubic-bezier(.15,0,.51506,.40969);transform:scaleX(.08)}19.15%{animation-timing-function:cubic-bezier(.31033,.28406,.8,.73371);transform:scaleX(.4571)}44.15%{animation-timing-function:cubic-bezier(.4,.62704,.6,.90203);transform:scaleX(.72796)}100%{transform:scaleX(.08)}}@keyframes mat-progress-bar-background-scroll{to{transform:translateX(-8px)}}\"],\n                changeDetection: ChangeDetectionStrategy.OnPush,\n                encapsulation: ViewEncapsulation.None,\n            },] },\n];\n/** @nocollapse */\nMatProgressBar.ctorParameters = () => [\n    { type: ElementRef },\n    { type: NgZone },\n    { type: String, decorators: [{ type: Optional }, { type: Inject, args: [ANIMATION_MODULE_TYPE,] }] },\n    { type: undefined, decorators: [{ type: Optional }, { type: Inject, args: [MAT_PROGRESS_BAR_LOCATION,] }] }\n];\nMatProgressBar.propDecorators = {\n    value: [{ type: Input }],\n    bufferValue: [{ type: Input }],\n    _primaryValueBar: [{ type: ViewChild, args: ['primaryValueBar', { static: false },] }],\n    animationEnd: [{ type: Output }],\n    mode: [{ type: Input }]\n};\n/**\n * Clamps a value to be between two numbers, by default 0 and 100.\n * @param {?} v\n * @param {?=} min\n * @param {?=} max\n * @return {?}\n */\nfunction clamp(v, min = 0, max = 100) {\n    return Math.max(min, Math.min(max, v));\n}\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\nclass MatProgressBarModule {\n}\nMatProgressBarModule.decorators = [\n    { type: NgModule, args: [{\n                imports: [CommonModule, MatCommonModule],\n                exports: [MatProgressBar, MatCommonModule],\n                declarations: [MatProgressBar],\n            },] },\n];\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n\nexport { MatProgressBarModule, MAT_PROGRESS_BAR_LOCATION_FACTORY, MAT_PROGRESS_BAR_LOCATION, MatProgressBar };\n//# sourceMappingURL=progress-bar.js.map\n","/**\n * @fileoverview This file was generated by the Angular template compiler. Do not edit.\n *\n * @suppress {suspiciousCode,uselessCode,missingProperties,missingOverride,checkTypes}\n * tslint:disable\n */ \nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/material/progress-bar\";\nimport * as i2 from \"@angular/common\";\nimport * as i3 from \"@angular/cdk/bidi\";\nimport * as i4 from \"@angular/material/core\";\nimport * as i5 from \"@angular/platform-browser\";\nimport * as i6 from \"@angular/platform-browser/animations\";\nvar MatProgressBarModuleNgFactory = i0.ɵcmf(i1.MatProgressBarModule, [], function (_l) { return i0.ɵmod([i0.ɵmpd(512, i0.ComponentFactoryResolver, i0.ɵCodegenComponentFactoryResolver, [[8, []], [3, i0.ComponentFactoryResolver], i0.NgModuleRef]), i0.ɵmpd(4608, i2.NgLocalization, i2.NgLocaleLocalization, [i0.LOCALE_ID, [2, i2.ɵangular_packages_common_common_a]]), i0.ɵmpd(1073742336, i2.CommonModule, i2.CommonModule, []), i0.ɵmpd(1073742336, i3.BidiModule, i3.BidiModule, []), i0.ɵmpd(1073742336, i4.MatCommonModule, i4.MatCommonModule, [[2, i4.MATERIAL_SANITY_CHECKS], [2, i5.HAMMER_LOADER]]), i0.ɵmpd(1073742336, i1.MatProgressBarModule, i1.MatProgressBarModule, [])]); });\nexport { MatProgressBarModuleNgFactory as MatProgressBarModuleNgFactory };\nvar styles_MatProgressBar = [\".mat-progress-bar{display:block;height:4px;overflow:hidden;position:relative;transition:opacity 250ms linear;width:100%}._mat-animation-noopable.mat-progress-bar{transition:none;animation:none}.mat-progress-bar .mat-progress-bar-element,.mat-progress-bar .mat-progress-bar-fill::after{height:100%;position:absolute;width:100%}.mat-progress-bar .mat-progress-bar-background{width:calc(100% + 10px)}@media (-ms-high-contrast:active){.mat-progress-bar .mat-progress-bar-background{display:none}}.mat-progress-bar .mat-progress-bar-buffer{transform-origin:top left;transition:transform 250ms ease}@media (-ms-high-contrast:active){.mat-progress-bar .mat-progress-bar-buffer{border-top:solid 5px;opacity:.5}}.mat-progress-bar .mat-progress-bar-secondary{display:none}.mat-progress-bar .mat-progress-bar-fill{animation:none;transform-origin:top left;transition:transform 250ms ease}@media (-ms-high-contrast:active){.mat-progress-bar .mat-progress-bar-fill{border-top:solid 4px}}.mat-progress-bar .mat-progress-bar-fill::after{animation:none;content:'';display:inline-block;left:0}.mat-progress-bar[dir=rtl],[dir=rtl] .mat-progress-bar{transform:rotateY(180deg)}.mat-progress-bar[mode=query]{transform:rotateZ(180deg)}.mat-progress-bar[mode=query][dir=rtl],[dir=rtl] .mat-progress-bar[mode=query]{transform:rotateZ(180deg) rotateY(180deg)}.mat-progress-bar[mode=indeterminate] .mat-progress-bar-fill,.mat-progress-bar[mode=query] .mat-progress-bar-fill{transition:none}.mat-progress-bar[mode=indeterminate] .mat-progress-bar-primary,.mat-progress-bar[mode=query] .mat-progress-bar-primary{-webkit-backface-visibility:hidden;backface-visibility:hidden;animation:mat-progress-bar-primary-indeterminate-translate 2s infinite linear;left:-145.166611%}.mat-progress-bar[mode=indeterminate] .mat-progress-bar-primary.mat-progress-bar-fill::after,.mat-progress-bar[mode=query] .mat-progress-bar-primary.mat-progress-bar-fill::after{-webkit-backface-visibility:hidden;backface-visibility:hidden;animation:mat-progress-bar-primary-indeterminate-scale 2s infinite linear}.mat-progress-bar[mode=indeterminate] .mat-progress-bar-secondary,.mat-progress-bar[mode=query] .mat-progress-bar-secondary{-webkit-backface-visibility:hidden;backface-visibility:hidden;animation:mat-progress-bar-secondary-indeterminate-translate 2s infinite linear;left:-54.888891%;display:block}.mat-progress-bar[mode=indeterminate] .mat-progress-bar-secondary.mat-progress-bar-fill::after,.mat-progress-bar[mode=query] .mat-progress-bar-secondary.mat-progress-bar-fill::after{-webkit-backface-visibility:hidden;backface-visibility:hidden;animation:mat-progress-bar-secondary-indeterminate-scale 2s infinite linear}.mat-progress-bar[mode=buffer] .mat-progress-bar-background{-webkit-backface-visibility:hidden;backface-visibility:hidden;animation:mat-progress-bar-background-scroll 250ms infinite linear;display:block}.mat-progress-bar._mat-animation-noopable .mat-progress-bar-background,.mat-progress-bar._mat-animation-noopable .mat-progress-bar-buffer,.mat-progress-bar._mat-animation-noopable .mat-progress-bar-fill,.mat-progress-bar._mat-animation-noopable .mat-progress-bar-fill::after,.mat-progress-bar._mat-animation-noopable .mat-progress-bar-primary,.mat-progress-bar._mat-animation-noopable .mat-progress-bar-primary.mat-progress-bar-fill::after,.mat-progress-bar._mat-animation-noopable .mat-progress-bar-secondary,.mat-progress-bar._mat-animation-noopable .mat-progress-bar-secondary.mat-progress-bar-fill::after{animation:none;transition:none}@keyframes mat-progress-bar-primary-indeterminate-translate{0%{transform:translateX(0)}20%{animation-timing-function:cubic-bezier(.5,0,.70173,.49582);transform:translateX(0)}59.15%{animation-timing-function:cubic-bezier(.30244,.38135,.55,.95635);transform:translateX(83.67142%)}100%{transform:translateX(200.61106%)}}@keyframes mat-progress-bar-primary-indeterminate-scale{0%{transform:scaleX(.08)}36.65%{animation-timing-function:cubic-bezier(.33473,.12482,.78584,1);transform:scaleX(.08)}69.15%{animation-timing-function:cubic-bezier(.06,.11,.6,1);transform:scaleX(.66148)}100%{transform:scaleX(.08)}}@keyframes mat-progress-bar-secondary-indeterminate-translate{0%{animation-timing-function:cubic-bezier(.15,0,.51506,.40969);transform:translateX(0)}25%{animation-timing-function:cubic-bezier(.31033,.28406,.8,.73371);transform:translateX(37.65191%)}48.35%{animation-timing-function:cubic-bezier(.4,.62704,.6,.90203);transform:translateX(84.38617%)}100%{transform:translateX(160.27778%)}}@keyframes mat-progress-bar-secondary-indeterminate-scale{0%{animation-timing-function:cubic-bezier(.15,0,.51506,.40969);transform:scaleX(.08)}19.15%{animation-timing-function:cubic-bezier(.31033,.28406,.8,.73371);transform:scaleX(.4571)}44.15%{animation-timing-function:cubic-bezier(.4,.62704,.6,.90203);transform:scaleX(.72796)}100%{transform:scaleX(.08)}}@keyframes mat-progress-bar-background-scroll{to{transform:translateX(-8px)}}\"];\nvar RenderType_MatProgressBar = i0.ɵcrt({ encapsulation: 2, styles: styles_MatProgressBar, data: {} });\nexport { RenderType_MatProgressBar as RenderType_MatProgressBar };\nexport function View_MatProgressBar_0(_l) { return i0.ɵvid(2, [i0.ɵqud(671088640, 1, { _primaryValueBar: 0 }), (_l()(), i0.ɵeld(1, 0, null, null, 4, \":svg:svg\", [[\"class\", \"mat-progress-bar-background mat-progress-bar-element\"], [\"focusable\", \"false\"], [\"height\", \"4\"], [\"width\", \"100%\"]], null, null, null, null, null)), (_l()(), i0.ɵeld(2, 0, null, null, 2, \":svg:defs\", [], null, null, null, null, null)), (_l()(), i0.ɵeld(3, 0, null, null, 1, \":svg:pattern\", [[\"height\", \"4\"], [\"patternUnits\", \"userSpaceOnUse\"], [\"width\", \"8\"], [\"x\", \"4\"], [\"y\", \"0\"]], [[8, \"id\", 0]], null, null, null, null)), (_l()(), i0.ɵeld(4, 0, null, null, 0, \":svg:circle\", [[\"cx\", \"2\"], [\"cy\", \"2\"], [\"r\", \"2\"]], null, null, null, null, null)), (_l()(), i0.ɵeld(5, 0, null, null, 0, \":svg:rect\", [[\"height\", \"100%\"], [\"width\", \"100%\"]], [[1, \"fill\", 0]], null, null, null, null)), (_l()(), i0.ɵeld(6, 0, null, null, 2, \"div\", [[\"class\", \"mat-progress-bar-buffer mat-progress-bar-element\"]], null, null, null, null, null)), i0.ɵprd(512, null, i2.ɵNgStyleImpl, i2.ɵNgStyleR2Impl, [i0.ElementRef, i0.KeyValueDiffers, i0.Renderer2]), i0.ɵdid(8, 278528, null, 0, i2.NgStyle, [i2.ɵNgStyleImpl], { ngStyle: [0, \"ngStyle\"] }, null), (_l()(), i0.ɵeld(9, 0, [[1, 0], [\"primaryValueBar\", 1]], null, 2, \"div\", [[\"class\", \"mat-progress-bar-primary mat-progress-bar-fill mat-progress-bar-element\"]], null, null, null, null, null)), i0.ɵprd(512, null, i2.ɵNgStyleImpl, i2.ɵNgStyleR2Impl, [i0.ElementRef, i0.KeyValueDiffers, i0.Renderer2]), i0.ɵdid(11, 278528, null, 0, i2.NgStyle, [i2.ɵNgStyleImpl], { ngStyle: [0, \"ngStyle\"] }, null), (_l()(), i0.ɵeld(12, 0, null, null, 0, \"div\", [[\"class\", \"mat-progress-bar-secondary mat-progress-bar-fill mat-progress-bar-element\"]], null, null, null, null, null))], function (_ck, _v) { var _co = _v.component; var currVal_2 = _co._bufferTransform(); _ck(_v, 8, 0, currVal_2); var currVal_3 = _co._primaryTransform(); _ck(_v, 11, 0, currVal_3); }, function (_ck, _v) { var _co = _v.component; var currVal_0 = _co.progressbarId; _ck(_v, 3, 0, currVal_0); var currVal_1 = _co._rectangleFillValue; _ck(_v, 5, 0, currVal_1); }); }\nexport function View_MatProgressBar_Host_0(_l) { return i0.ɵvid(0, [(_l()(), i0.ɵeld(0, 0, null, null, 1, \"mat-progress-bar\", [[\"aria-valuemax\", \"100\"], [\"aria-valuemin\", \"0\"], [\"class\", \"mat-progress-bar\"], [\"role\", \"progressbar\"]], [[1, \"aria-valuenow\", 0], [1, \"mode\", 0], [2, \"_mat-animation-noopable\", null]], null, null, View_MatProgressBar_0, RenderType_MatProgressBar)), i0.ɵdid(1, 4374528, null, 0, i1.MatProgressBar, [i0.ElementRef, i0.NgZone, [2, i6.ANIMATION_MODULE_TYPE], [2, i1.MAT_PROGRESS_BAR_LOCATION]], null, null)], null, function (_ck, _v) { var currVal_0 = (((i0.ɵnov(_v, 1).mode === \"indeterminate\") || (i0.ɵnov(_v, 1).mode === \"query\")) ? null : i0.ɵnov(_v, 1).value); var currVal_1 = i0.ɵnov(_v, 1).mode; var currVal_2 = i0.ɵnov(_v, 1)._isNoopAnimation; _ck(_v, 0, 0, currVal_0, currVal_1, currVal_2); }); }\nvar MatProgressBarNgFactory = i0.ɵccf(\"mat-progress-bar\", i1.MatProgressBar, View_MatProgressBar_Host_0, { color: \"color\", value: \"value\", bufferValue: \"bufferValue\", mode: \"mode\" }, { animationEnd: \"animationEnd\" }, []);\nexport { MatProgressBarNgFactory as MatProgressBarNgFactory };\n","<svg width=\"100%\" height=\"4\" focusable=\"false\" class=\"mat-progress-bar-background mat-progress-bar-element\"><defs><pattern [id]=\"progressbarId\" x=\"4\" y=\"0\" width=\"8\" height=\"4\" patternUnits=\"userSpaceOnUse\"><circle cx=\"2\" cy=\"2\" r=\"2\"/></pattern></defs><rect [attr.fill]=\"_rectangleFillValue\" width=\"100%\" height=\"100%\"/></svg><div class=\"mat-progress-bar-buffer mat-progress-bar-element\" [ngStyle]=\"_bufferTransform()\"></div><div class=\"mat-progress-bar-primary mat-progress-bar-fill mat-progress-bar-element\" [ngStyle]=\"_primaryTransform()\" #primaryValueBar></div><div class=\"mat-progress-bar-secondary mat-progress-bar-fill mat-progress-bar-element\"></div>","import { Subscriber } from '../Subscriber';\nimport { async } from '../scheduler/async';\nexport function sampleTime(period, scheduler = async) {\n    return (source) => source.lift(new SampleTimeOperator(period, scheduler));\n}\nclass SampleTimeOperator {\n    constructor(period, scheduler) {\n        this.period = period;\n        this.scheduler = scheduler;\n    }\n    call(subscriber, source) {\n        return source.subscribe(new SampleTimeSubscriber(subscriber, this.period, this.scheduler));\n    }\n}\nclass SampleTimeSubscriber extends Subscriber {\n    constructor(destination, period, scheduler) {\n        super(destination);\n        this.period = period;\n        this.scheduler = scheduler;\n        this.hasValue = false;\n        this.add(scheduler.schedule(dispatchNotification, period, { subscriber: this, period }));\n    }\n    _next(value) {\n        this.lastValue = value;\n        this.hasValue = true;\n    }\n    notifyNext() {\n        if (this.hasValue) {\n            this.hasValue = false;\n            this.destination.next(this.lastValue);\n        }\n    }\n}\nfunction dispatchNotification(state) {\n    let { subscriber, period } = state;\n    subscriber.notifyNext();\n    this.schedule(state, period);\n}\n//# sourceMappingURL=sampleTime.js.map","import { Directive, ElementRef, EventEmitter, Input, NgModule, NgZone, Output } from '@angular/core';\nimport { fromEvent, of } from 'rxjs';\nimport { filter, map, mergeMap, sampleTime, tap } from 'rxjs/operators';\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes,extraRequire,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n/**\n * @param {?} selector\n * @param {?} scrollWindow\n * @param {?} defaultElement\n * @param {?} fromRoot\n * @return {?}\n */\nfunction resolveContainerElement(selector, scrollWindow, defaultElement, fromRoot) {\n    /** @type {?} */\n    const hasWindow = window && !!window.document && window.document.documentElement;\n    /** @type {?} */\n    let container = hasWindow && scrollWindow ? window : defaultElement;\n    if (selector) {\n        /** @type {?} */\n        const containerIsString = selector && hasWindow && typeof selector === 'string';\n        container = containerIsString\n            ? findElement(selector, defaultElement.nativeElement, fromRoot)\n            : selector;\n        if (!container) {\n            throw new Error('ngx-infinite-scroll {resolveContainerElement()}: selector for');\n        }\n    }\n    return container;\n}\n/**\n * @param {?} selector\n * @param {?} customRoot\n * @param {?} fromRoot\n * @return {?}\n */\nfunction findElement(selector, customRoot, fromRoot) {\n    /** @type {?} */\n    const rootEl = fromRoot ? window.document : customRoot;\n    return rootEl.querySelector(selector);\n}\n/**\n * @param {?} prop\n * @return {?}\n */\nfunction inputPropChanged(prop) {\n    return prop && !prop.firstChange;\n}\n/**\n * @return {?}\n */\nfunction hasWindowDefined() {\n    return typeof window !== 'undefined';\n}\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes,extraRequire,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n/** @type {?} */\nconst VerticalProps = {\n    clientHeight: \"clientHeight\",\n    offsetHeight: \"offsetHeight\",\n    scrollHeight: \"scrollHeight\",\n    pageYOffset: \"pageYOffset\",\n    offsetTop: \"offsetTop\",\n    scrollTop: \"scrollTop\",\n    top: \"top\"\n};\n/** @type {?} */\nconst HorizontalProps = {\n    clientHeight: \"clientWidth\",\n    offsetHeight: \"offsetWidth\",\n    scrollHeight: \"scrollWidth\",\n    pageYOffset: \"pageXOffset\",\n    offsetTop: \"offsetLeft\",\n    scrollTop: \"scrollLeft\",\n    top: \"left\"\n};\nclass AxisResolver {\n    /**\n     * @param {?=} vertical\n     */\n    constructor(vertical = true) {\n        this.vertical = vertical;\n        this.propsMap = vertical ? VerticalProps : HorizontalProps;\n    }\n    /**\n     * @return {?}\n     */\n    clientHeightKey() {\n        return this.propsMap.clientHeight;\n    }\n    /**\n     * @return {?}\n     */\n    offsetHeightKey() {\n        return this.propsMap.offsetHeight;\n    }\n    /**\n     * @return {?}\n     */\n    scrollHeightKey() {\n        return this.propsMap.scrollHeight;\n    }\n    /**\n     * @return {?}\n     */\n    pageYOffsetKey() {\n        return this.propsMap.pageYOffset;\n    }\n    /**\n     * @return {?}\n     */\n    offsetTopKey() {\n        return this.propsMap.offsetTop;\n    }\n    /**\n     * @return {?}\n     */\n    scrollTopKey() {\n        return this.propsMap.scrollTop;\n    }\n    /**\n     * @return {?}\n     */\n    topKey() {\n        return this.propsMap.top;\n    }\n}\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes,extraRequire,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n/**\n * @record\n */\n\n/**\n * @record\n */\n\n/**\n * @record\n */\n\n/**\n * @record\n */\n\n/**\n * @param {?} alwaysCallback\n * @param {?} shouldFireScrollEvent\n * @param {?} isTriggeredCurrentTotal\n * @return {?}\n */\nfunction shouldTriggerEvents(alwaysCallback, shouldFireScrollEvent, isTriggeredCurrentTotal) {\n    if (alwaysCallback && shouldFireScrollEvent) {\n        return true;\n    }\n    if (!isTriggeredCurrentTotal && shouldFireScrollEvent) {\n        return true;\n    }\n    return false;\n}\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes,extraRequire,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n/**\n * @param {?} __0\n * @return {?}\n */\nfunction createResolver({ windowElement, axis }) {\n    return createResolverWithContainer({ axis, isWindow: isElementWindow(windowElement) }, windowElement);\n}\n/**\n * @param {?} resolver\n * @param {?} windowElement\n * @return {?}\n */\nfunction createResolverWithContainer(resolver, windowElement) {\n    /** @type {?} */\n    const container = resolver.isWindow || (windowElement && !windowElement.nativeElement)\n        ? windowElement\n        : windowElement.nativeElement;\n    return Object.assign({}, resolver, { container });\n}\n/**\n * @param {?} windowElement\n * @return {?}\n */\nfunction isElementWindow(windowElement) {\n    /** @type {?} */\n    const isWindow = ['Window', 'global'].some((obj) => Object.prototype.toString.call(windowElement).includes(obj));\n    return isWindow;\n}\n/**\n * @param {?} isContainerWindow\n * @param {?} windowElement\n * @return {?}\n */\nfunction getDocumentElement(isContainerWindow, windowElement) {\n    return isContainerWindow ? windowElement.document.documentElement : null;\n}\n/**\n * @param {?} element\n * @param {?} resolver\n * @return {?}\n */\nfunction calculatePoints(element, resolver) {\n    /** @type {?} */\n    const height = extractHeightForElement(resolver);\n    return resolver.isWindow\n        ? calculatePointsForWindow(height, element, resolver)\n        : calculatePointsForElement(height, element, resolver);\n}\n/**\n * @param {?} height\n * @param {?} element\n * @param {?} resolver\n * @return {?}\n */\nfunction calculatePointsForWindow(height, element, resolver) {\n    const { axis, container, isWindow } = resolver;\n    const { offsetHeightKey, clientHeightKey } = extractHeightPropKeys(axis);\n    // scrolled until now / current y point\n    /** @type {?} */\n    const scrolled = height +\n        getElementPageYOffset(getDocumentElement(isWindow, container), axis, isWindow);\n    // total height / most bottom y point\n    /** @type {?} */\n    const nativeElementHeight = getElementHeight(element.nativeElement, isWindow, offsetHeightKey, clientHeightKey);\n    /** @type {?} */\n    const totalToScroll = getElementOffsetTop(element.nativeElement, axis, isWindow) +\n        nativeElementHeight;\n    return { height, scrolled, totalToScroll, isWindow };\n}\n/**\n * @param {?} height\n * @param {?} element\n * @param {?} resolver\n * @return {?}\n */\nfunction calculatePointsForElement(height, element, resolver) {\n    const { axis, container } = resolver;\n    // perhaps use container.offsetTop instead of 'scrollTop'\n    /** @type {?} */\n    const scrolled = container[axis.scrollTopKey()];\n    /** @type {?} */\n    const totalToScroll = container[axis.scrollHeightKey()];\n    return { height, scrolled, totalToScroll, isWindow: false };\n}\n/**\n * @param {?} axis\n * @return {?}\n */\nfunction extractHeightPropKeys(axis) {\n    return {\n        offsetHeightKey: axis.offsetHeightKey(),\n        clientHeightKey: axis.clientHeightKey()\n    };\n}\n/**\n * @param {?} __0\n * @return {?}\n */\nfunction extractHeightForElement({ container, isWindow, axis }) {\n    const { offsetHeightKey, clientHeightKey } = extractHeightPropKeys(axis);\n    return getElementHeight(container, isWindow, offsetHeightKey, clientHeightKey);\n}\n/**\n * @param {?} elem\n * @param {?} isWindow\n * @param {?} offsetHeightKey\n * @param {?} clientHeightKey\n * @return {?}\n */\nfunction getElementHeight(elem, isWindow, offsetHeightKey, clientHeightKey) {\n    if (isNaN(elem[offsetHeightKey])) {\n        /** @type {?} */\n        const docElem = getDocumentElement(isWindow, elem);\n        return docElem ? docElem[clientHeightKey] : 0;\n    }\n    else {\n        return elem[offsetHeightKey];\n    }\n}\n/**\n * @param {?} elem\n * @param {?} axis\n * @param {?} isWindow\n * @return {?}\n */\nfunction getElementOffsetTop(elem, axis, isWindow) {\n    /** @type {?} */\n    const topKey = axis.topKey();\n    // elem = elem.nativeElement;\n    if (!elem.getBoundingClientRect) {\n        // || elem.css('none')) {\n        return;\n    }\n    return (elem.getBoundingClientRect()[topKey] +\n        getElementPageYOffset(elem, axis, isWindow));\n}\n/**\n * @param {?} elem\n * @param {?} axis\n * @param {?} isWindow\n * @return {?}\n */\nfunction getElementPageYOffset(elem, axis, isWindow) {\n    /** @type {?} */\n    const pageYOffset = axis.pageYOffsetKey();\n    /** @type {?} */\n    const scrollTop = axis.scrollTopKey();\n    /** @type {?} */\n    const offsetTop = axis.offsetTopKey();\n    if (isNaN(window[pageYOffset])) {\n        return getDocumentElement(isWindow, elem)[scrollTop];\n    }\n    else if (elem.ownerDocument) {\n        return elem.ownerDocument.defaultView[pageYOffset];\n    }\n    else {\n        return elem[offsetTop];\n    }\n}\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes,extraRequire,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n/**\n * @param {?} container\n * @param {?} distance\n * @param {?} scrollingDown\n * @return {?}\n */\nfunction shouldFireScrollEvent(container, distance, scrollingDown) {\n    /** @type {?} */\n    let remaining;\n    /** @type {?} */\n    let containerBreakpoint;\n    if (container.totalToScroll <= 0) {\n        return false;\n    }\n    /** @type {?} */\n    const scrolledUntilNow = container.isWindow ? container.scrolled : container.height + container.scrolled;\n    if (scrollingDown) {\n        remaining =\n            (container.totalToScroll - scrolledUntilNow) / container.totalToScroll;\n        containerBreakpoint = distance.down / 10;\n    }\n    else {\n        /** @type {?} */\n        const totalHiddenContentHeight = container.scrolled + (container.totalToScroll - scrolledUntilNow);\n        remaining = container.scrolled / totalHiddenContentHeight;\n        containerBreakpoint = distance.up / 10;\n    }\n    /** @type {?} */\n    const shouldFireEvent = remaining <= containerBreakpoint;\n    return shouldFireEvent;\n}\n/**\n * @param {?} lastScrollPosition\n * @param {?} container\n * @return {?}\n */\nfunction isScrollingDownwards(lastScrollPosition, container) {\n    return lastScrollPosition < container.scrolled;\n}\n/**\n * @param {?} lastScrollPosition\n * @param {?} container\n * @param {?} distance\n * @return {?}\n */\nfunction getScrollStats(lastScrollPosition, container, distance) {\n    /** @type {?} */\n    const scrollDown = isScrollingDownwards(lastScrollPosition, container);\n    return {\n        fire: shouldFireScrollEvent(container, distance, scrollDown),\n        scrollDown\n    };\n}\n/**\n * @param {?} position\n * @param {?} scrollState\n * @return {?}\n */\n\n/**\n * @param {?} totalToScroll\n * @param {?} scrollState\n * @return {?}\n */\n\n/**\n * @param {?} scrollState\n * @return {?}\n */\n\n/**\n * @param {?} scroll\n * @param {?} scrollState\n * @param {?} triggered\n * @param {?} isScrollingDown\n * @return {?}\n */\n\n/**\n * @param {?} totalToScroll\n * @param {?} scrollState\n * @param {?} isScrollingDown\n * @return {?}\n */\n\n/**\n * @param {?} scrollState\n * @param {?} scrolledUntilNow\n * @param {?} totalToScroll\n * @return {?}\n */\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes,extraRequire,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\nclass ScrollState {\n    /**\n     * @param {?} __0\n     */\n    constructor({ totalToScroll }) {\n        this.lastScrollPosition = 0;\n        this.lastTotalToScroll = 0;\n        this.totalToScroll = 0;\n        this.triggered = {\n            down: 0,\n            up: 0\n        };\n        this.totalToScroll = totalToScroll;\n    }\n    /**\n     * @param {?} position\n     * @return {?}\n     */\n    updateScrollPosition(position) {\n        return (this.lastScrollPosition = position);\n    }\n    /**\n     * @param {?} totalToScroll\n     * @return {?}\n     */\n    updateTotalToScroll(totalToScroll) {\n        if (this.lastTotalToScroll !== totalToScroll) {\n            this.lastTotalToScroll = this.totalToScroll;\n            this.totalToScroll = totalToScroll;\n        }\n    }\n    /**\n     * @param {?} scrolledUntilNow\n     * @param {?} totalToScroll\n     * @return {?}\n     */\n    updateScroll(scrolledUntilNow, totalToScroll) {\n        this.updateScrollPosition(scrolledUntilNow);\n        this.updateTotalToScroll(totalToScroll);\n    }\n    /**\n     * @param {?} scroll\n     * @param {?} isScrollingDown\n     * @return {?}\n     */\n    updateTriggeredFlag(scroll, isScrollingDown) {\n        if (isScrollingDown) {\n            this.triggered.down = scroll;\n        }\n        else {\n            this.triggered.up = scroll;\n        }\n    }\n    /**\n     * @param {?} totalToScroll\n     * @param {?} isScrollingDown\n     * @return {?}\n     */\n    isTriggeredScroll(totalToScroll, isScrollingDown) {\n        return isScrollingDown\n            ? this.triggered.down === totalToScroll\n            : this.triggered.up === totalToScroll;\n    }\n}\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes,extraRequire,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n/**\n * @param {?} config\n * @return {?}\n */\nfunction createScroller(config) {\n    const { scrollContainer, scrollWindow, element, fromRoot } = config;\n    /** @type {?} */\n    const resolver = createResolver({\n        axis: new AxisResolver(!config.horizontal),\n        windowElement: resolveContainerElement(scrollContainer, scrollWindow, element, fromRoot)\n    });\n    /** @type {?} */\n    const scrollState = new ScrollState({\n        totalToScroll: calculatePoints(element, resolver)\n    });\n    /** @type {?} */\n    const options = {\n        container: resolver.container,\n        throttle: config.throttle\n    };\n    /** @type {?} */\n    const distance = {\n        up: config.upDistance,\n        down: config.downDistance\n    };\n    return attachScrollEvent(options).pipe(mergeMap(() => of(calculatePoints(element, resolver))), map((positionStats) => toInfiniteScrollParams(scrollState.lastScrollPosition, positionStats, distance)), tap(({ stats }) => scrollState.updateScroll(stats.scrolled, stats.totalToScroll)), filter(({ fire, scrollDown, stats: { totalToScroll } }) => shouldTriggerEvents(config.alwaysCallback, fire, scrollState.isTriggeredScroll(totalToScroll, scrollDown))), tap(({ scrollDown, stats: { totalToScroll } }) => {\n        scrollState.updateTriggeredFlag(totalToScroll, scrollDown);\n    }), map(toInfiniteScrollAction));\n}\n/**\n * @param {?} options\n * @return {?}\n */\nfunction attachScrollEvent(options) {\n    /** @type {?} */\n    let obs = fromEvent(options.container, 'scroll');\n    // For an unknown reason calling `sampleTime()` causes trouble for many users, even with `options.throttle = 0`.\n    // Let's avoid calling the function unless needed.\n    // See https://github.com/orizens/ngx-infinite-scroll/issues/198\n    if (options.throttle) {\n        obs = obs.pipe(sampleTime(options.throttle));\n    }\n    return obs;\n}\n/**\n * @param {?} lastScrollPosition\n * @param {?} stats\n * @param {?} distance\n * @return {?}\n */\nfunction toInfiniteScrollParams(lastScrollPosition, stats, distance) {\n    const { scrollDown, fire } = getScrollStats(lastScrollPosition, stats, distance);\n    return {\n        scrollDown,\n        fire,\n        stats\n    };\n}\n/** @type {?} */\nconst InfiniteScrollActions = {\n    DOWN: '[NGX_ISE] DOWN',\n    UP: '[NGX_ISE] UP'\n};\n/**\n * @param {?} response\n * @return {?}\n */\nfunction toInfiniteScrollAction(response) {\n    const { scrollDown, stats: { scrolled: currentScrollPosition } } = response;\n    return {\n        type: scrollDown ? InfiniteScrollActions.DOWN : InfiniteScrollActions.UP,\n        payload: {\n            currentScrollPosition\n        }\n    };\n}\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes,extraRequire,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\nclass InfiniteScrollDirective {\n    /**\n     * @param {?} element\n     * @param {?} zone\n     */\n    constructor(element, zone) {\n        this.element = element;\n        this.zone = zone;\n        this.scrolled = new EventEmitter();\n        this.scrolledUp = new EventEmitter();\n        this.infiniteScrollDistance = 2;\n        this.infiniteScrollUpDistance = 1.5;\n        this.infiniteScrollThrottle = 150;\n        this.infiniteScrollDisabled = false;\n        this.infiniteScrollContainer = null;\n        this.scrollWindow = true;\n        this.immediateCheck = false;\n        this.horizontal = false;\n        this.alwaysCallback = false;\n        this.fromRoot = false;\n    }\n    /**\n     * @return {?}\n     */\n    ngAfterViewInit() {\n        if (!this.infiniteScrollDisabled) {\n            this.setup();\n        }\n    }\n    /**\n     * @param {?} __0\n     * @return {?}\n     */\n    ngOnChanges({ infiniteScrollContainer, infiniteScrollDisabled, infiniteScrollDistance }) {\n        /** @type {?} */\n        const containerChanged = inputPropChanged(infiniteScrollContainer);\n        /** @type {?} */\n        const disabledChanged = inputPropChanged(infiniteScrollDisabled);\n        /** @type {?} */\n        const distanceChanged = inputPropChanged(infiniteScrollDistance);\n        /** @type {?} */\n        const shouldSetup = (!disabledChanged && !this.infiniteScrollDisabled) ||\n            (disabledChanged && !infiniteScrollDisabled.currentValue) || distanceChanged;\n        if (containerChanged || disabledChanged || distanceChanged) {\n            this.destroyScroller();\n            if (shouldSetup) {\n                this.setup();\n            }\n        }\n    }\n    /**\n     * @return {?}\n     */\n    setup() {\n        if (hasWindowDefined()) {\n            this.zone.runOutsideAngular(() => {\n                this.disposeScroller = createScroller({\n                    fromRoot: this.fromRoot,\n                    alwaysCallback: this.alwaysCallback,\n                    disable: this.infiniteScrollDisabled,\n                    downDistance: this.infiniteScrollDistance,\n                    element: this.element,\n                    horizontal: this.horizontal,\n                    scrollContainer: this.infiniteScrollContainer,\n                    scrollWindow: this.scrollWindow,\n                    throttle: this.infiniteScrollThrottle,\n                    upDistance: this.infiniteScrollUpDistance\n                }).subscribe((payload) => this.zone.run(() => this.handleOnScroll(payload)));\n            });\n        }\n    }\n    /**\n     * @param {?} __0\n     * @return {?}\n     */\n    handleOnScroll({ type, payload }) {\n        switch (type) {\n            case InfiniteScrollActions.DOWN:\n                return this.scrolled.emit(payload);\n            case InfiniteScrollActions.UP:\n                return this.scrolledUp.emit(payload);\n            default:\n                return;\n        }\n    }\n    /**\n     * @return {?}\n     */\n    ngOnDestroy() {\n        this.destroyScroller();\n    }\n    /**\n     * @return {?}\n     */\n    destroyScroller() {\n        if (this.disposeScroller) {\n            this.disposeScroller.unsubscribe();\n        }\n    }\n}\nInfiniteScrollDirective.decorators = [\n    { type: Directive, args: [{\n                selector: '[infiniteScroll], [infinite-scroll], [data-infinite-scroll]'\n            },] },\n];\n/** @nocollapse */\nInfiniteScrollDirective.ctorParameters = () => [\n    { type: ElementRef },\n    { type: NgZone }\n];\nInfiniteScrollDirective.propDecorators = {\n    scrolled: [{ type: Output }],\n    scrolledUp: [{ type: Output }],\n    infiniteScrollDistance: [{ type: Input }],\n    infiniteScrollUpDistance: [{ type: Input }],\n    infiniteScrollThrottle: [{ type: Input }],\n    infiniteScrollDisabled: [{ type: Input }],\n    infiniteScrollContainer: [{ type: Input }],\n    scrollWindow: [{ type: Input }],\n    immediateCheck: [{ type: Input }],\n    horizontal: [{ type: Input }],\n    alwaysCallback: [{ type: Input }],\n    fromRoot: [{ type: Input }]\n};\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes,extraRequire,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\nclass InfiniteScrollModule {\n}\nInfiniteScrollModule.decorators = [\n    { type: NgModule, args: [{\n                declarations: [InfiniteScrollDirective],\n                exports: [InfiniteScrollDirective],\n                imports: [],\n                providers: []\n            },] },\n];\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes,extraRequire,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes,extraRequire,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n/**\n * Angular library starter.\n * Build an Angular library compatible with AoT compilation & Tree shaking.\n * Written by Roberto Simonetti.\n * MIT license.\n * https://github.com/robisim74/angular-library-starter\n */\n/**\n * Entry point for all public APIs of the package.\n */\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes,extraRequire,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n/**\n * Generated bundle index. Do not edit.\n */\n\nexport { InfiniteScrollDirective, InfiniteScrollModule };\n//# sourceMappingURL=ngx-infinite-scroll.js.map\n","import {\n    AfterContentInit,\n    ChangeDetectorRef,\n    Component,\n    ElementRef,\n    ViewChild\n} from \"@angular/core\";\n\n@Component({\n    selector: \"jellyfin-slider\",\n    templateUrl: \"./slider.component.html\",\n    styleUrls: [\"./slider.component.scss\"]\n})\nexport class SliderComponent implements AfterContentInit {\n    @ViewChild(\"slider\", { static: true }) public slider: ElementRef<HTMLDivElement>;\n\n    constructor(private changeDetector: ChangeDetectorRef) {}\n\n    public ngAfterContentInit() {\n        this.slider.nativeElement.addEventListener(\"scroll\", () => {\n            this.changeDetector.detectChanges();\n        });\n    }\n\n    public more() {\n        console.log(\"load more\");\n    }\n\n    public left() {\n        const parentRect = (this.slider.nativeElement.getClientRects() as DOMRectList)[0];\n        for (const child of Array.from(this.slider.nativeElement.children).reverse()) {\n            const rect = (child.getClientRects() as DOMRectList)[0];\n            const beyondBorder = rect.right < parentRect.left;\n            if (beyondBorder) {\n                child.scrollIntoView({ behavior: \"smooth\", block: \"start\" });\n                break;\n            }\n        }\n    }\n\n    public right() {\n        const parentRect = (this.slider.nativeElement.getClientRects() as DOMRectList)[0];\n        for (const child of Array.from(this.slider.nativeElement.children)) {\n            const rect = (child.getClientRects() as DOMRectList)[0];\n            const beyondBorder = rect.left > parentRect.right;\n            if (beyondBorder) {\n                child.scrollIntoView({ behavior: \"smooth\", block: \"start\" });\n                break;\n            }\n        }\n    }\n\n    public get isLeft() {\n        const parentRect = (this.slider.nativeElement.getClientRects() as DOMRectList)[0];\n        const rect = (this.slider.nativeElement.children[1].getClientRects() as DOMRectList)[0];\n        return rect.left >= parentRect.left;\n    }\n\n    public get isRight() {\n        const parentRect = (this.slider.nativeElement.getClientRects() as DOMRectList)[0];\n        const rect = (this.slider.nativeElement.children[\n            this.slider.nativeElement.children.length - 2\n        ].getClientRects() as DOMRectList)[0];\n        return rect.right <= parentRect.right;\n    }\n}\n","/**\n * @fileoverview This file was generated by the Angular template compiler. Do not edit.\n *\n * @suppress {suspiciousCode,uselessCode,missingProperties,missingOverride,checkTypes}\n * tslint:disable\n */ \nimport * as i0 from \"./slider.component.scss.shim.ngstyle\";\nimport * as i1 from \"@angular/core\";\nimport * as i2 from \"../../../../node_modules/@angular/material/button/typings/index.ngfactory\";\nimport * as i3 from \"@angular/material/button\";\nimport * as i4 from \"@angular/cdk/a11y\";\nimport * as i5 from \"@angular/platform-browser/animations\";\nimport * as i6 from \"ngx-infinite-scroll\";\nimport * as i7 from \"./slider.component\";\nvar styles_SliderComponent = [i0.styles];\nvar RenderType_SliderComponent = i1.ɵcrt({ encapsulation: 0, styles: styles_SliderComponent, data: {} });\nexport { RenderType_SliderComponent as RenderType_SliderComponent };\nexport function View_SliderComponent_0(_l) { return i1.ɵvid(0, [i1.ɵqud(402653184, 1, { slider: 0 }), (_l()(), i1.ɵeld(1, 0, null, null, 11, \"div\", [[\"class\", \"wrapper\"]], null, null, null, null, null)), (_l()(), i1.ɵeld(2, 0, null, null, 2, \"button\", [[\"class\", \"scroll-fab left\"], [\"mat-fab\", \"\"]], [[1, \"disabled\", 0], [2, \"_mat-animation-noopable\", null]], [[null, \"click\"]], function (_v, en, $event) { var ad = true; var _co = _v.component; if ((\"click\" === en)) {\n        var pd_0 = (_co.left() !== false);\n        ad = (pd_0 && ad);\n    } return ad; }, i2.View_MatButton_0, i2.RenderType_MatButton)), i1.ɵdid(3, 180224, null, 0, i3.MatButton, [i1.ElementRef, i4.FocusMonitor, [2, i5.ANIMATION_MODULE_TYPE]], { disabled: [0, \"disabled\"] }, null), (_l()(), i1.ɵted(-1, 0, [\"<\"])), (_l()(), i1.ɵeld(5, 0, null, null, 2, \"button\", [[\"class\", \"scroll-fab right\"], [\"mat-fab\", \"\"]], [[1, \"disabled\", 0], [2, \"_mat-animation-noopable\", null]], [[null, \"click\"]], function (_v, en, $event) { var ad = true; var _co = _v.component; if ((\"click\" === en)) {\n        var pd_0 = (_co.right() !== false);\n        ad = (pd_0 && ad);\n    } return ad; }, i2.View_MatButton_0, i2.RenderType_MatButton)), i1.ɵdid(6, 180224, null, 0, i3.MatButton, [i1.ElementRef, i4.FocusMonitor, [2, i5.ANIMATION_MODULE_TYPE]], { disabled: [0, \"disabled\"] }, null), (_l()(), i1.ɵted(-1, 0, [\">\"])), (_l()(), i1.ɵeld(8, 0, [[1, 0], [\"slider\", 1]], null, 4, \"div\", [[\"class\", \"slider\"], [\"infinite-scroll\", \"\"]], null, [[null, \"scrolled\"]], function (_v, en, $event) { var ad = true; var _co = _v.component; if ((\"scrolled\" === en)) {\n        var pd_0 = (_co.more() !== false);\n        ad = (pd_0 && ad);\n    } return ad; }, null, null)), i1.ɵdid(9, 4866048, null, 0, i6.InfiniteScrollDirective, [i1.ElementRef, i1.NgZone], { infiniteScrollDistance: [0, \"infiniteScrollDistance\"], scrollWindow: [1, \"scrollWindow\"], immediateCheck: [2, \"immediateCheck\"], horizontal: [3, \"horizontal\"] }, { scrolled: \"scrolled\" }), (_l()(), i1.ɵeld(10, 0, null, null, 0, \"div\", [[\"class\", \"start\"]], null, null, null, null, null)), i1.ɵncd(null, 0), (_l()(), i1.ɵeld(12, 0, null, null, 0, \"div\", [[\"class\", \"end\"]], null, null, null, null, null))], function (_ck, _v) { var _co = _v.component; var currVal_2 = _co.isLeft; _ck(_v, 3, 0, currVal_2); var currVal_5 = _co.isRight; _ck(_v, 6, 0, currVal_5); var currVal_6 = 20; var currVal_7 = false; var currVal_8 = true; var currVal_9 = true; _ck(_v, 9, 0, currVal_6, currVal_7, currVal_8, currVal_9); }, function (_ck, _v) { var currVal_0 = (i1.ɵnov(_v, 3).disabled || null); var currVal_1 = (i1.ɵnov(_v, 3)._animationMode === \"NoopAnimations\"); _ck(_v, 2, 0, currVal_0, currVal_1); var currVal_3 = (i1.ɵnov(_v, 6).disabled || null); var currVal_4 = (i1.ɵnov(_v, 6)._animationMode === \"NoopAnimations\"); _ck(_v, 5, 0, currVal_3, currVal_4); }); }\nexport function View_SliderComponent_Host_0(_l) { return i1.ɵvid(0, [(_l()(), i1.ɵeld(0, 0, null, null, 1, \"jellyfin-slider\", [], null, null, null, View_SliderComponent_0, RenderType_SliderComponent)), i1.ɵdid(1, 1097728, null, 0, i7.SliderComponent, [i1.ChangeDetectorRef], null, null)], null, null); }\nvar SliderComponentNgFactory = i1.ɵccf(\"jellyfin-slider\", i7.SliderComponent, View_SliderComponent_Host_0, {}, {}, [\"*\"]);\nexport { SliderComponentNgFactory as SliderComponentNgFactory };\n","/**\n * @fileoverview This file was generated by the Angular template compiler. Do not edit.\n *\n * @suppress {suspiciousCode,uselessCode,missingProperties,missingOverride,checkTypes}\n * tslint:disable\n */ \nvar styles = [\".wrapper[_ngcontent-%COMP%]{position:relative}.slider[_ngcontent-%COMP%]{display:flex;flex-direction:row;overflow-x:auto;scroll-snap-type:x mandatory}.slider[_ngcontent-%COMP%] >   *{scroll-snap-align:start}.slider[_ngcontent-%COMP%]   .start[_ngcontent-%COMP%]{min-width:1px}.slider[_ngcontent-%COMP%]   .end[_ngcontent-%COMP%]{min-width:1px;scroll-snap-align:end}.scroll-fab[_ngcontent-%COMP%]{position:absolute;top:0;bottom:0;z-index:2;margin:auto;opacity:0;transition:opacity ease-in-out .25s}.scroll-fab.left[_ngcontent-%COMP%]{left:10px}.scroll-fab.right[_ngcontent-%COMP%]{right:10px}.wrapper[_ngcontent-%COMP%]:hover   .scroll-fab[_ngcontent-%COMP%]{opacity:1}.wrapper[_ngcontent-%COMP%]:hover   .scroll-fab[disabled][_ngcontent-%COMP%]{opacity:0;pointer-events:none}\"];\nexport { styles as styles };\n","<div class=\"wrapper\">\n    <button mat-fab class=\"scroll-fab left\" [disabled]=\"isLeft\" (click)=\"left()\">&lt;</button>\n    <button mat-fab class=\"scroll-fab right\" [disabled]=\"isRight\" (click)=\"right()\">&gt;</button>\n    <div\n        class=\"slider\"\n        #slider\n        infinite-scroll\n        [horizontal]=\"true\"\n        [infiniteScrollDistance]=\"20\"\n        [immediateCheck]=\"true\"\n        [scrollWindow]=\"false\"\n        (scrolled)=\"more()\"\n    >\n        <div class=\"start\"></div>\n        <ng-content></ng-content>\n        <div class=\"end\"></div>\n    </div>\n</div>\n","import { Component, OnInit } from \"@angular/core\";\nimport { Router, UrlTree } from \"@angular/router\";\nimport { map } from \"rxjs/operators\";\nimport { AuthService } from \"../../auth/auth.service\";\nimport { ApiService } from \"../../common/api/api.service\";\n\nexport interface Tile {\n    image?: string;\n    subtitle: string;\n}\n\nexport const enum ViewTypes {\n    MOVIES = \"movies\",\n    HOME_VIDEOS = \"homevideos\"\n}\n\nexport interface ViewTile extends Tile {\n    type: ViewTypes;\n}\n\nexport interface MovieTile extends Tile {\n    year?: string | number;\n    originalTitle: string | null;\n}\n\nexport interface ContinueTile extends MovieTile {\n    progress: number;\n}\n\n@Component({\n    selector: \"jellyfin-home\",\n    templateUrl: \"./home.component.html\",\n    styleUrls: [\"./home.component.scss\"]\n})\nexport class HomeComponent implements OnInit {\n    // All images are just random tmdb images, inserted as design stubs\n    public myMedia: ViewTile[] = [];\n    public continueWatching: ContinueTile[] = [];\n    public latestMovies: MovieTile[] = [];\n    public loaded = false;\n\n    constructor(\n        private apiService: ApiService,\n        private authService: AuthService,\n        private router: Router\n    ) {}\n\n    public ngOnInit() {\n        Promise.all([this.loadViews(), this.loadStarted(), this.loadLatest()]).then(() => {\n            this.loaded = true;\n        });\n    }\n\n    public viewUrl(type: ViewTypes): UrlTree {\n        switch (type) {\n            case ViewTypes.MOVIES: {\n                return this.router.createUrlTree([\"movies\"]);\n            }\n            case ViewTypes.HOME_VIDEOS: {\n                return this.router.createUrlTree([\"home_videos\"]);\n            }\n            default: {\n                // TODO: Implement more\n                // assertNever(type);\n            }\n        }\n    }\n\n    public viewIcon(type: ViewTypes): string {\n        switch (type) {\n            case ViewTypes.MOVIES: {\n                return \"movie\";\n            }\n            case ViewTypes.HOME_VIDEOS: {\n                return \"camera_alt\";\n            }\n            default: {\n                // TODO: Implement more\n                // assertNever(type);\n            }\n        }\n    }\n\n    private loadViews() {\n        return this.apiService\n            .get<any>(`/Users/${this.authService.userId}/Views`)\n            .pipe(\n                map(resp => {\n                    for (const item of resp.Items) {\n                        const tile: ViewTile = {\n                            subtitle: item.Name,\n                            type: item.CollectionType\n                        };\n                        if (item.ImageTags.Primary) {\n                            tile.image = this.apiService.assembleUrl(\n                                `/Items/${item.Id}/Images/Primary`,\n                                {\n                                    tag: item.ImageTags.Primary,\n                                    quality: \"90\",\n                                    maxWidth: \"400\",\n                                    maxHeight: \"400\"\n                                }\n                            );\n                        }\n                        this.myMedia.push(tile);\n                    }\n                })\n            )\n            .toPromise();\n    }\n\n    private loadStarted() {\n        return this.apiService\n            .get<any>(`/Users/${this.authService.userId}/Items/Resume`, {\n                query: {\n                    Limit: \"12\",\n                    Recursive: \"true\",\n                    ImageTypeLimit: \"1\",\n                    EnableImageTypes: \"Primary,Backdrop,Thumb\",\n                    EnableTotalRecordCount: \"false\",\n                    MediaTypes: \"Video\"\n                }\n            })\n            .pipe(\n                map(resp => {\n                    for (const item of resp.Items) {\n                        const [title, cut] = this.sliceTitle(item.Name);\n                        const tile: ContinueTile = {\n                            subtitle: title,\n                            year: new Date(item.PremiereDate).getFullYear(),\n                            originalTitle: cut ? item.Name : null,\n                            progress: item.UserData.PlayedPercentage\n                        };\n                        if (item.BackdropImageTags && item.BackdropImageTags.length > 0) {\n                            tile.image = this.apiService.assembleUrl(\n                                `/Items/${item.Id}/Images/Backdrop`,\n                                {\n                                    tag: item.BackdropImageTags[0],\n                                    quality: \"90\",\n                                    maxWidth: \"400\",\n                                    maxHeight: \"400\"\n                                }\n                            );\n                        } else if (item.ImageTags && Object.keys(item.ImageTags).length > 0) {\n                            const imageType = Object.keys(item.ImageTags)[0];\n                            tile.image = this.apiService.assembleUrl(\n                                `/Items/${item.Id}/Images/${imageType}`,\n                                {\n                                    tag: item.ImageTags[imageType],\n                                    quality: \"90\",\n                                    maxWidth: \"400\",\n                                    maxHeight: \"400\"\n                                }\n                            );\n                        }\n                        this.continueWatching.push(tile);\n                    }\n                })\n            )\n            .toPromise();\n    }\n\n    private loadLatest() {\n        return this.apiService\n            .get<any>(`/Users/${this.authService.userId}/Items/Latest`, {\n                query: {\n                    Limit: \"10\",\n                    EnableImageType: \"Primary\"\n                }\n            })\n            .pipe(\n                map(resp => {\n                    for (const item of resp) {\n                        const [title, cut] = this.sliceTitle(item.Name);\n                        const tile: MovieTile = {\n                            subtitle: title,\n                            year: new Date(item.PemiereDate).getFullYear(),\n                            originalTitle: cut ? item.Name : null\n                        };\n                        if (item.ImageTags.Primary) {\n                            tile.image = this.apiService.assembleUrl(\n                                `/Items/${item.Id}/Images/Primary`,\n                                {\n                                    tag: item.ImageTags.Primary,\n                                    quality: \"90\",\n                                    maxWidth: \"400\",\n                                    maxHeight: \"400\"\n                                }\n                            );\n                        }\n                        this.latestMovies.push(tile);\n                    }\n                })\n            )\n            .toPromise();\n    }\n\n    private sliceTitle(title) {\n        let cut = false;\n        if (title.length > 25) {\n            cut = true;\n            const space = title.slice(0, 26).lastIndexOf(\" \");\n            if (space > 15) {\n                title = `${title.slice(0, space)}...`;\n            } else {\n                title = `${title.slice(0, 26)}...`;\n            }\n        }\n        return [title, cut];\n    }\n}\n","/**\n * @fileoverview This file was generated by the Angular template compiler. Do not edit.\n *\n * @suppress {suspiciousCode,uselessCode,missingProperties,missingOverride,checkTypes}\n * tslint:disable\n */ \nimport * as i0 from \"./home.component.scss.shim.ngstyle\";\nimport * as i1 from \"@angular/core\";\nimport * as i2 from \"../../../../node_modules/@angular/material/icon/typings/index.ngfactory\";\nimport * as i3 from \"@angular/material/icon\";\nimport * as i4 from \"@angular/router\";\nimport * as i5 from \"@angular/common\";\nimport * as i6 from \"../../../../node_modules/@angular/material/card/typings/index.ngfactory\";\nimport * as i7 from \"@angular/material/card\";\nimport * as i8 from \"@angular/platform-browser/animations\";\nimport * as i9 from \"@angular/material/core\";\nimport * as i10 from \"@angular/cdk/platform\";\nimport * as i11 from \"@angular/material/tooltip\";\nimport * as i12 from \"@angular/cdk/overlay\";\nimport * as i13 from \"@angular/cdk/scrolling\";\nimport * as i14 from \"@angular/cdk/a11y\";\nimport * as i15 from \"@angular/cdk/bidi\";\nimport * as i16 from \"@angular/platform-browser\";\nimport * as i17 from \"../../../../node_modules/@angular/material/progress-bar/typings/index.ngfactory\";\nimport * as i18 from \"@angular/material/progress-bar\";\nimport * as i19 from \"../../common/slider/slider.component.ngfactory\";\nimport * as i20 from \"../../common/slider/slider.component\";\nimport * as i21 from \"../../../../node_modules/@angular/material/progress-spinner/typings/index.ngfactory\";\nimport * as i22 from \"@angular/material/progress-spinner\";\nimport * as i23 from \"./home.component\";\nimport * as i24 from \"../../common/api/api.service\";\nimport * as i25 from \"../../auth/auth.service\";\nvar styles_HomeComponent = [i0.styles];\nvar RenderType_HomeComponent = i1.ɵcrt({ encapsulation: 0, styles: styles_HomeComponent, data: {} });\nexport { RenderType_HomeComponent as RenderType_HomeComponent };\nfunction View_HomeComponent_4(_l) { return i1.ɵvid(0, [(_l()(), i1.ɵeld(0, 0, null, null, 1, \"div\", [[\"class\", \"img-wrapper\"]], null, null, null, null, null)), (_l()(), i1.ɵeld(1, 0, null, null, 0, \"img\", [[\"class\", \"inner-img\"]], [[8, \"src\", 4], [8, \"alt\", 0]], [[null, \"dragstart\"]], function (_v, en, $event) { var ad = true; if ((\"dragstart\" === en)) {\n        var pd_0 = ($event.preventDefault() !== false);\n        ad = (pd_0 && ad);\n    } return ad; }, null, null))], null, function (_ck, _v) { var currVal_0 = _v.parent.parent.context.$implicit.image; var currVal_1 = _v.parent.parent.context.$implicit.subtitle; _ck(_v, 1, 0, currVal_0, currVal_1); }); }\nfunction View_HomeComponent_5(_l) { return i1.ɵvid(0, [(_l()(), i1.ɵeld(0, 0, null, null, 3, \"div\", [[\"class\", \"no-image\"]], null, null, null, null, null)), (_l()(), i1.ɵeld(1, 0, null, null, 2, \"mat-icon\", [[\"class\", \"mat-icon notranslate\"], [\"role\", \"img\"]], [[2, \"mat-icon-inline\", null], [2, \"mat-icon-no-color\", null]], null, null, i2.View_MatIcon_0, i2.RenderType_MatIcon)), i1.ɵdid(2, 9158656, null, 0, i3.MatIcon, [i1.ElementRef, i3.MatIconRegistry, [8, null], [2, i3.MAT_ICON_LOCATION]], null, null), (_l()(), i1.ɵted(3, 0, [\"\", \"\"]))], function (_ck, _v) { _ck(_v, 2, 0); }, function (_ck, _v) { var _co = _v.component; var currVal_0 = i1.ɵnov(_v, 2).inline; var currVal_1 = (((i1.ɵnov(_v, 2).color !== \"primary\") && (i1.ɵnov(_v, 2).color !== \"accent\")) && (i1.ɵnov(_v, 2).color !== \"warn\")); _ck(_v, 1, 0, currVal_0, currVal_1); var currVal_2 = _co.viewIcon(_v.parent.parent.context.$implicit.type); _ck(_v, 3, 0, currVal_2); }); }\nfunction View_HomeComponent_3(_l) { return i1.ɵvid(0, [(_l()(), i1.ɵeld(0, 0, null, null, 14, \"div\", [[\"class\", \"tile landscape\"]], null, null, null, null, null)), (_l()(), i1.ɵeld(1, 0, null, null, 13, \"a\", [], [[1, \"target\", 0], [8, \"href\", 4]], [[null, \"click\"]], function (_v, en, $event) { var ad = true; if ((\"click\" === en)) {\n        var pd_0 = (i1.ɵnov(_v, 2).onClick($event.button, $event.ctrlKey, $event.metaKey, $event.shiftKey) !== false);\n        ad = (pd_0 && ad);\n    } return ad; }, null, null)), i1.ɵdid(2, 671744, null, 0, i4.RouterLinkWithHref, [i4.Router, i4.ActivatedRoute, i5.LocationStrategy], { routerLink: [0, \"routerLink\"] }, null), (_l()(), i1.ɵeld(3, 0, null, null, 11, \"mat-card\", [[\"class\", \"mat-card mat-ripple\"], [\"mat-ripple\", \"\"]], [[2, \"_mat-animation-noopable\", null], [2, \"mat-ripple-unbounded\", null]], null, null, i6.View_MatCard_0, i6.RenderType_MatCard)), i1.ɵdid(4, 49152, null, 0, i7.MatCard, [[2, i8.ANIMATION_MODULE_TYPE]], null, null), i1.ɵdid(5, 212992, null, 0, i9.MatRipple, [i1.ElementRef, i1.NgZone, i10.Platform, [2, i9.MAT_RIPPLE_GLOBAL_OPTIONS], [2, i8.ANIMATION_MODULE_TYPE]], null, null), (_l()(), i1.ɵeld(6, 0, null, 0, 5, \"div\", [[\"class\", \"mat-card-image\"], [\"mat-card-image\", \"\"]], null, null, null, null, null)), i1.ɵdid(7, 16384, null, 0, i7.MatCardImage, [], null, null), (_l()(), i1.ɵand(16777216, null, null, 1, null, View_HomeComponent_4)), i1.ɵdid(9, 16384, null, 0, i5.NgIf, [i1.ViewContainerRef, i1.TemplateRef], { ngIf: [0, \"ngIf\"] }, null), (_l()(), i1.ɵand(16777216, null, null, 1, null, View_HomeComponent_5)), i1.ɵdid(11, 16384, null, 0, i5.NgIf, [i1.ViewContainerRef, i1.TemplateRef], { ngIf: [0, \"ngIf\"] }, null), (_l()(), i1.ɵeld(12, 0, null, 0, 2, \"mat-card-subtitle\", [[\"class\", \"mat-card-subtitle\"]], null, null, null, null, null)), i1.ɵdid(13, 16384, null, 0, i7.MatCardSubtitle, [], null, null), (_l()(), i1.ɵted(14, null, [\" \", \" \"]))], function (_ck, _v) { var _co = _v.component; var currVal_2 = _co.viewUrl(_v.parent.context.$implicit.type).toString(); _ck(_v, 2, 0, currVal_2); _ck(_v, 5, 0); var currVal_5 = _v.parent.context.$implicit.image; _ck(_v, 9, 0, currVal_5); var currVal_6 = !_v.parent.context.$implicit.image; _ck(_v, 11, 0, currVal_6); }, function (_ck, _v) { var currVal_0 = i1.ɵnov(_v, 2).target; var currVal_1 = i1.ɵnov(_v, 2).href; _ck(_v, 1, 0, currVal_0, currVal_1); var currVal_3 = (i1.ɵnov(_v, 4)._animationMode === \"NoopAnimations\"); var currVal_4 = i1.ɵnov(_v, 5).unbounded; _ck(_v, 3, 0, currVal_3, currVal_4); var currVal_7 = _v.parent.context.$implicit.subtitle; _ck(_v, 14, 0, currVal_7); }); }\nfunction View_HomeComponent_2(_l) { return i1.ɵvid(0, [(_l()(), i1.ɵeld(0, 0, null, null, 2, null, null, null, null, null, null, null)), (_l()(), i1.ɵand(16777216, null, null, 1, null, View_HomeComponent_3)), i1.ɵdid(2, 16384, null, 0, i5.NgIf, [i1.ViewContainerRef, i1.TemplateRef], { ngIf: [0, \"ngIf\"] }, null), (_l()(), i1.ɵand(0, null, null, 0))], function (_ck, _v) { var currVal_0 = _v.context.$implicit.type; _ck(_v, 2, 0, currVal_0); }, null); }\nfunction View_HomeComponent_7(_l) { return i1.ɵvid(0, [(_l()(), i1.ɵeld(0, 0, null, null, 0, \"img\", [[\"class\", \"inner-img\"]], [[8, \"src\", 4], [8, \"alt\", 0]], [[null, \"dragstart\"]], function (_v, en, $event) { var ad = true; if ((\"dragstart\" === en)) {\n        var pd_0 = ($event.preventDefault() !== false);\n        ad = (pd_0 && ad);\n    } return ad; }, null, null))], null, function (_ck, _v) { var currVal_0 = _v.parent.context.$implicit.image; var currVal_1 = _v.parent.context.$implicit.subtitle; _ck(_v, 0, 0, currVal_0, currVal_1); }); }\nfunction View_HomeComponent_8(_l) { return i1.ɵvid(0, [(_l()(), i1.ɵeld(0, 0, null, null, 1, \"div\", [[\"class\", \"year\"]], null, null, null, null, null)), (_l()(), i1.ɵted(1, null, [\" \", \" \"]))], null, function (_ck, _v) { var currVal_0 = _v.parent.context.$implicit.year; _ck(_v, 1, 0, currVal_0); }); }\nfunction View_HomeComponent_6(_l) { return i1.ɵvid(0, [(_l()(), i1.ɵeld(0, 0, null, null, 16, \"div\", [[\"class\", \"tile landscape\"]], null, null, null, null, null)), (_l()(), i1.ɵeld(1, 16777216, null, null, 15, \"mat-card\", [[\"aria-label\", \"movie.originalTitle\"], [\"class\", \"mat-card mat-ripple\"], [\"mat-ripple\", \"\"], [\"matTooltipPosition\", \"below\"]], [[2, \"_mat-animation-noopable\", null], [2, \"mat-ripple-unbounded\", null]], [[null, \"longpress\"], [null, \"keydown\"], [null, \"touchend\"]], function (_v, en, $event) { var ad = true; if ((\"longpress\" === en)) {\n        var pd_0 = (i1.ɵnov(_v, 4).show() !== false);\n        ad = (pd_0 && ad);\n    } if ((\"keydown\" === en)) {\n        var pd_1 = (i1.ɵnov(_v, 4)._handleKeydown($event) !== false);\n        ad = (pd_1 && ad);\n    } if ((\"touchend\" === en)) {\n        var pd_2 = (i1.ɵnov(_v, 4)._handleTouchend() !== false);\n        ad = (pd_2 && ad);\n    } return ad; }, i6.View_MatCard_0, i6.RenderType_MatCard)), i1.ɵdid(2, 49152, null, 0, i7.MatCard, [[2, i8.ANIMATION_MODULE_TYPE]], null, null), i1.ɵdid(3, 212992, null, 0, i9.MatRipple, [i1.ElementRef, i1.NgZone, i10.Platform, [2, i9.MAT_RIPPLE_GLOBAL_OPTIONS], [2, i8.ANIMATION_MODULE_TYPE]], null, null), i1.ɵdid(4, 212992, null, 0, i11.MatTooltip, [i12.Overlay, i1.ElementRef, i13.ScrollDispatcher, i1.ViewContainerRef, i1.NgZone, i10.Platform, i14.AriaDescriber, i14.FocusMonitor, i11.MAT_TOOLTIP_SCROLL_STRATEGY, [2, i15.Directionality], [2, i11.MAT_TOOLTIP_DEFAULT_OPTIONS], [2, i16.HAMMER_LOADER]], { position: [0, \"position\"], message: [1, \"message\"] }, null), (_l()(), i1.ɵeld(5, 0, null, 0, 6, \"div\", [[\"class\", \"mat-card-image\"], [\"mat-card-image\", \"\"]], null, null, null, null, null)), i1.ɵdid(6, 16384, null, 0, i7.MatCardImage, [], null, null), (_l()(), i1.ɵeld(7, 0, null, null, 4, \"div\", [[\"class\", \"img-wrapper\"]], null, null, null, null, null)), (_l()(), i1.ɵand(16777216, null, null, 1, null, View_HomeComponent_7)), i1.ɵdid(9, 16384, null, 0, i5.NgIf, [i1.ViewContainerRef, i1.TemplateRef], { ngIf: [0, \"ngIf\"] }, null), (_l()(), i1.ɵeld(10, 0, null, null, 1, \"mat-progress-bar\", [[\"aria-valuemax\", \"100\"], [\"aria-valuemin\", \"0\"], [\"class\", \"mat-progress-bar\"], [\"color\", \"accent\"], [\"role\", \"progressbar\"]], [[1, \"aria-valuenow\", 0], [1, \"mode\", 0], [2, \"_mat-animation-noopable\", null]], null, null, i17.View_MatProgressBar_0, i17.RenderType_MatProgressBar)), i1.ɵdid(11, 4374528, null, 0, i18.MatProgressBar, [i1.ElementRef, i1.NgZone, [2, i8.ANIMATION_MODULE_TYPE], [2, i18.MAT_PROGRESS_BAR_LOCATION]], { color: [0, \"color\"], value: [1, \"value\"] }, null), (_l()(), i1.ɵeld(12, 0, null, 0, 4, \"mat-card-subtitle\", [[\"class\", \"mat-card-subtitle\"]], null, null, null, null, null)), i1.ɵdid(13, 16384, null, 0, i7.MatCardSubtitle, [], null, null), (_l()(), i1.ɵted(14, null, [\" \", \" \"])), (_l()(), i1.ɵand(16777216, null, null, 1, null, View_HomeComponent_8)), i1.ɵdid(16, 16384, null, 0, i5.NgIf, [i1.ViewContainerRef, i1.TemplateRef], { ngIf: [0, \"ngIf\"] }, null)], function (_ck, _v) { _ck(_v, 3, 0); var currVal_2 = \"below\"; var currVal_3 = _v.context.$implicit.originalTitle; _ck(_v, 4, 0, currVal_2, currVal_3); var currVal_4 = _v.context.$implicit.image; _ck(_v, 9, 0, currVal_4); var currVal_8 = \"accent\"; var currVal_9 = _v.context.$implicit.progress; _ck(_v, 11, 0, currVal_8, currVal_9); var currVal_11 = _v.context.$implicit.year; _ck(_v, 16, 0, currVal_11); }, function (_ck, _v) { var currVal_0 = (i1.ɵnov(_v, 2)._animationMode === \"NoopAnimations\"); var currVal_1 = i1.ɵnov(_v, 3).unbounded; _ck(_v, 1, 0, currVal_0, currVal_1); var currVal_5 = (((i1.ɵnov(_v, 11).mode === \"indeterminate\") || (i1.ɵnov(_v, 11).mode === \"query\")) ? null : i1.ɵnov(_v, 11).value); var currVal_6 = i1.ɵnov(_v, 11).mode; var currVal_7 = i1.ɵnov(_v, 11)._isNoopAnimation; _ck(_v, 10, 0, currVal_5, currVal_6, currVal_7); var currVal_10 = _v.context.$implicit.subtitle; _ck(_v, 14, 0, currVal_10); }); }\nfunction View_HomeComponent_10(_l) { return i1.ɵvid(0, [(_l()(), i1.ɵeld(0, 0, null, null, 0, \"img\", [[\"class\", \"inner-img\"]], [[8, \"src\", 4], [8, \"alt\", 0]], [[null, \"dragstart\"]], function (_v, en, $event) { var ad = true; if ((\"dragstart\" === en)) {\n        var pd_0 = ($event.preventDefault() !== false);\n        ad = (pd_0 && ad);\n    } return ad; }, null, null))], null, function (_ck, _v) { var currVal_0 = _v.parent.context.$implicit.image; var currVal_1 = _v.parent.context.$implicit.subtitle; _ck(_v, 0, 0, currVal_0, currVal_1); }); }\nfunction View_HomeComponent_11(_l) { return i1.ɵvid(0, [(_l()(), i1.ɵeld(0, 0, null, null, 1, \"div\", [[\"class\", \"year\"]], null, null, null, null, null)), (_l()(), i1.ɵted(1, null, [\" \", \" \"]))], null, function (_ck, _v) { var currVal_0 = _v.parent.context.$implicit.year; _ck(_v, 1, 0, currVal_0); }); }\nfunction View_HomeComponent_9(_l) { return i1.ɵvid(0, [(_l()(), i1.ɵeld(0, 0, null, null, 13, \"div\", [[\"class\", \"tile portrait\"]], null, null, null, null, null)), (_l()(), i1.ɵeld(1, 16777216, null, null, 12, \"mat-card\", [[\"aria-label\", \"movie.originalTitle\"], [\"class\", \"mat-card mat-ripple\"], [\"mat-ripple\", \"\"], [\"matTooltipPosition\", \"below\"]], [[2, \"_mat-animation-noopable\", null], [2, \"mat-ripple-unbounded\", null]], [[null, \"longpress\"], [null, \"keydown\"], [null, \"touchend\"]], function (_v, en, $event) { var ad = true; if ((\"longpress\" === en)) {\n        var pd_0 = (i1.ɵnov(_v, 4).show() !== false);\n        ad = (pd_0 && ad);\n    } if ((\"keydown\" === en)) {\n        var pd_1 = (i1.ɵnov(_v, 4)._handleKeydown($event) !== false);\n        ad = (pd_1 && ad);\n    } if ((\"touchend\" === en)) {\n        var pd_2 = (i1.ɵnov(_v, 4)._handleTouchend() !== false);\n        ad = (pd_2 && ad);\n    } return ad; }, i6.View_MatCard_0, i6.RenderType_MatCard)), i1.ɵdid(2, 49152, null, 0, i7.MatCard, [[2, i8.ANIMATION_MODULE_TYPE]], null, null), i1.ɵdid(3, 212992, null, 0, i9.MatRipple, [i1.ElementRef, i1.NgZone, i10.Platform, [2, i9.MAT_RIPPLE_GLOBAL_OPTIONS], [2, i8.ANIMATION_MODULE_TYPE]], null, null), i1.ɵdid(4, 212992, null, 0, i11.MatTooltip, [i12.Overlay, i1.ElementRef, i13.ScrollDispatcher, i1.ViewContainerRef, i1.NgZone, i10.Platform, i14.AriaDescriber, i14.FocusMonitor, i11.MAT_TOOLTIP_SCROLL_STRATEGY, [2, i15.Directionality], [2, i11.MAT_TOOLTIP_DEFAULT_OPTIONS], [2, i16.HAMMER_LOADER]], { position: [0, \"position\"], message: [1, \"message\"] }, null), (_l()(), i1.ɵeld(5, 0, null, 0, 3, \"div\", [[\"class\", \"mat-card-image\"], [\"mat-card-image\", \"\"]], null, null, null, null, null)), i1.ɵdid(6, 16384, null, 0, i7.MatCardImage, [], null, null), (_l()(), i1.ɵand(16777216, null, null, 1, null, View_HomeComponent_10)), i1.ɵdid(8, 16384, null, 0, i5.NgIf, [i1.ViewContainerRef, i1.TemplateRef], { ngIf: [0, \"ngIf\"] }, null), (_l()(), i1.ɵeld(9, 0, null, 0, 4, \"mat-card-subtitle\", [[\"class\", \"mat-card-subtitle\"]], null, null, null, null, null)), i1.ɵdid(10, 16384, null, 0, i7.MatCardSubtitle, [], null, null), (_l()(), i1.ɵted(11, null, [\" \", \" \"])), (_l()(), i1.ɵand(16777216, null, null, 1, null, View_HomeComponent_11)), i1.ɵdid(13, 16384, null, 0, i5.NgIf, [i1.ViewContainerRef, i1.TemplateRef], { ngIf: [0, \"ngIf\"] }, null)], function (_ck, _v) { _ck(_v, 3, 0); var currVal_2 = \"below\"; var currVal_3 = _v.context.$implicit.originalTitle; _ck(_v, 4, 0, currVal_2, currVal_3); var currVal_4 = _v.context.$implicit.image; _ck(_v, 8, 0, currVal_4); var currVal_6 = _v.context.$implicit.year; _ck(_v, 13, 0, currVal_6); }, function (_ck, _v) { var currVal_0 = (i1.ɵnov(_v, 2)._animationMode === \"NoopAnimations\"); var currVal_1 = i1.ɵnov(_v, 3).unbounded; _ck(_v, 1, 0, currVal_0, currVal_1); var currVal_5 = _v.context.$implicit.subtitle; _ck(_v, 11, 0, currVal_5); }); }\nfunction View_HomeComponent_1(_l) { return i1.ɵvid(0, [(_l()(), i1.ɵeld(0, 0, null, null, 25, null, null, null, null, null, null, null)), (_l()(), i1.ɵeld(1, 0, null, null, 6, \"section\", [], null, null, null, null, null)), (_l()(), i1.ɵeld(2, 0, null, null, 1, \"h2\", [], null, null, null, null, null)), (_l()(), i1.ɵted(-1, null, [\"My Media\"])), (_l()(), i1.ɵeld(4, 0, null, null, 3, \"jellyfin-slider\", [], null, null, null, i19.View_SliderComponent_0, i19.RenderType_SliderComponent)), i1.ɵdid(5, 1097728, null, 0, i20.SliderComponent, [i1.ChangeDetectorRef], null, null), (_l()(), i1.ɵand(16777216, null, 0, 1, null, View_HomeComponent_2)), i1.ɵdid(7, 278528, null, 0, i5.NgForOf, [i1.ViewContainerRef, i1.TemplateRef, i1.IterableDiffers], { ngForOf: [0, \"ngForOf\"] }, null), (_l()(), i1.ɵeld(8, 0, null, null, 10, \"section\", [], null, null, null, null, null)), (_l()(), i1.ɵeld(9, 0, null, null, 5, \"h2\", [[\"class\", \"details-heading\"]], null, null, null, null, null)), (_l()(), i1.ɵeld(10, 0, null, null, 4, \"a\", [[\"href\", \"#\"]], null, null, null, null, null)), (_l()(), i1.ɵeld(11, 0, null, null, 1, \"span\", [[\"class\", \"heading\"]], null, null, null, null, null)), (_l()(), i1.ɵted(-1, null, [\"Continue watching\"])), (_l()(), i1.ɵeld(13, 0, null, null, 1, \"span\", [[\"class\", \"arrow\"]], null, null, null, null, null)), (_l()(), i1.ɵted(-1, null, [\" >\"])), (_l()(), i1.ɵeld(15, 0, null, null, 3, \"jellyfin-slider\", [], null, null, null, i19.View_SliderComponent_0, i19.RenderType_SliderComponent)), i1.ɵdid(16, 1097728, null, 0, i20.SliderComponent, [i1.ChangeDetectorRef], null, null), (_l()(), i1.ɵand(16777216, null, 0, 1, null, View_HomeComponent_6)), i1.ɵdid(18, 278528, null, 0, i5.NgForOf, [i1.ViewContainerRef, i1.TemplateRef, i1.IterableDiffers], { ngForOf: [0, \"ngForOf\"] }, null), (_l()(), i1.ɵeld(19, 0, null, null, 6, \"section\", [], null, null, null, null, null)), (_l()(), i1.ɵeld(20, 0, null, null, 1, \"h2\", [], null, null, null, null, null)), (_l()(), i1.ɵted(-1, null, [\"Latest movies\"])), (_l()(), i1.ɵeld(22, 0, null, null, 3, \"jellyfin-slider\", [], null, null, null, i19.View_SliderComponent_0, i19.RenderType_SliderComponent)), i1.ɵdid(23, 1097728, null, 0, i20.SliderComponent, [i1.ChangeDetectorRef], null, null), (_l()(), i1.ɵand(16777216, null, 0, 1, null, View_HomeComponent_9)), i1.ɵdid(25, 278528, null, 0, i5.NgForOf, [i1.ViewContainerRef, i1.TemplateRef, i1.IterableDiffers], { ngForOf: [0, \"ngForOf\"] }, null)], function (_ck, _v) { var _co = _v.component; var currVal_0 = _co.myMedia; _ck(_v, 7, 0, currVal_0); var currVal_1 = _co.continueWatching; _ck(_v, 18, 0, currVal_1); var currVal_2 = _co.latestMovies; _ck(_v, 25, 0, currVal_2); }, null); }\nfunction View_HomeComponent_12(_l) { return i1.ɵvid(0, [(_l()(), i1.ɵeld(0, 0, null, null, 1, \"mat-spinner\", [[\"class\", \"mat-spinner mat-progress-spinner\"], [\"mode\", \"indeterminate\"], [\"role\", \"progressbar\"]], [[2, \"_mat-animation-noopable\", null], [4, \"width\", \"px\"], [4, \"height\", \"px\"]], null, null, i21.View_MatSpinner_0, i21.RenderType_MatSpinner)), i1.ɵdid(1, 114688, null, 0, i22.MatSpinner, [i1.ElementRef, i10.Platform, [2, i5.DOCUMENT], [2, i8.ANIMATION_MODULE_TYPE], i22.MAT_PROGRESS_SPINNER_DEFAULT_OPTIONS], null, null)], function (_ck, _v) { _ck(_v, 1, 0); }, function (_ck, _v) { var currVal_0 = i1.ɵnov(_v, 1)._noopAnimations; var currVal_1 = i1.ɵnov(_v, 1).diameter; var currVal_2 = i1.ɵnov(_v, 1).diameter; _ck(_v, 0, 0, currVal_0, currVal_1, currVal_2); }); }\nexport function View_HomeComponent_0(_l) { return i1.ɵvid(0, [(_l()(), i1.ɵand(16777216, null, null, 1, null, View_HomeComponent_1)), i1.ɵdid(1, 16384, null, 0, i5.NgIf, [i1.ViewContainerRef, i1.TemplateRef], { ngIf: [0, \"ngIf\"] }, null), (_l()(), i1.ɵand(16777216, null, null, 1, null, View_HomeComponent_12)), i1.ɵdid(3, 16384, null, 0, i5.NgIf, [i1.ViewContainerRef, i1.TemplateRef], { ngIf: [0, \"ngIf\"] }, null)], function (_ck, _v) { var _co = _v.component; var currVal_0 = _co.loaded; _ck(_v, 1, 0, currVal_0); var currVal_1 = !_co.loaded; _ck(_v, 3, 0, currVal_1); }, null); }\nexport function View_HomeComponent_Host_0(_l) { return i1.ɵvid(0, [(_l()(), i1.ɵeld(0, 0, null, null, 1, \"jellyfin-home\", [], null, null, null, View_HomeComponent_0, RenderType_HomeComponent)), i1.ɵdid(1, 114688, null, 0, i23.HomeComponent, [i24.ApiService, i25.AuthService, i4.Router], null, null)], function (_ck, _v) { _ck(_v, 1, 0); }, null); }\nvar HomeComponentNgFactory = i1.ɵccf(\"jellyfin-home\", i23.HomeComponent, View_HomeComponent_Host_0, {}, {}, []);\nexport { HomeComponentNgFactory as HomeComponentNgFactory };\n","/**\n * @fileoverview This file was generated by the Angular template compiler. Do not edit.\n *\n * @suppress {suspiciousCode,uselessCode,missingProperties,missingOverride,checkTypes}\n * tslint:disable\n */ \nvar styles = [\"[_nghost-%COMP%]{width:100%;min-height:100%;box-sizing:border-box;padding:5vmin;display:flex;flex-direction:column}.tile[_ngcontent-%COMP%]{padding:.5rem .5rem 1rem}.tile[_ngcontent-%COMP%]   a[_ngcontent-%COMP%]{text-decoration:none;outline:0}.tile.landscape[_ngcontent-%COMP%]{min-width:16rem}.tile.landscape[_ngcontent-%COMP%]   .img-wrapper[_ngcontent-%COMP%]{margin:0 auto}.tile.landscape[_ngcontent-%COMP%]   .img-wrapper[_ngcontent-%COMP%]   mat-progress-bar[_ngcontent-%COMP%]{margin-top:-5px}.tile.landscape[_ngcontent-%COMP%]   .inner-img[_ngcontent-%COMP%]{height:9rem}.tile.landscape[_ngcontent-%COMP%]   .no-image[_ngcontent-%COMP%]{height:9rem;min-width:16rem;flex-grow:1;display:flex}.tile.landscape[_ngcontent-%COMP%]   .no-image[_ngcontent-%COMP%]   mat-icon[_ngcontent-%COMP%]{margin:auto}.tile.portrait[_ngcontent-%COMP%]{width:9rem;min-width:9rem}mat-card[_ngcontent-%COMP%]{cursor:pointer;display:flex;flex-direction:column;height:calc(100% - 2rem)}mat-card[_ngcontent-%COMP%]   mat-card-subtitle[_ngcontent-%COMP%]{color:#fff;text-align:center;margin-top:16px;margin-bottom:-4px!important;overflow-wrap:break-word;overflow-wrap:anywhere;-webkit-hyphens:auto;hyphens:auto}mat-card[_ngcontent-%COMP%]   mat-card-subtitle[_ngcontent-%COMP%]   .year[_ngcontent-%COMP%]{color:#b9b9b9}mat-card[_ngcontent-%COMP%]   .inner-img[_ngcontent-%COMP%]{margin-bottom:auto;-webkit-user-select:none;-moz-user-select:none;user-select:none;width:100%}mat-card[_ngcontent-%COMP%]   .mat-card-image[_ngcontent-%COMP%]{margin-bottom:0;flex-grow:1;display:flex}mat-spinner[_ngcontent-%COMP%]{margin:auto}.details-heading[_ngcontent-%COMP%]{display:flex}.details-heading[_ngcontent-%COMP%] > a[_ngcontent-%COMP%]{color:currentColor;text-decoration:none;margin-right:auto;outline:0}.details-heading[_ngcontent-%COMP%] > a[_ngcontent-%COMP%] > .arrow[_ngcontent-%COMP%]{transition:margin-left .25s ease-out}.details-heading[_ngcontent-%COMP%] > a[_ngcontent-%COMP%]:hover > .heading[_ngcontent-%COMP%]{text-decoration:underline;text-decoration-width:.1em;text-decoration-thickness:.1em}.details-heading[_ngcontent-%COMP%] > a[_ngcontent-%COMP%]:hover > .arrow[_ngcontent-%COMP%]{margin-left:.5em}\"];\nexport { styles as styles };\n","<ng-container *ngIf=\"loaded\">\n    <section>\n        <h2>My Media</h2>\n        <jellyfin-slider>\n            <ng-container *ngFor=\"let view of myMedia\">\n                <div class=\"tile landscape\" *ngIf=\"view.type\">\n                    <a [routerLink]=\"viewUrl(view.type).toString()\">\n                        <mat-card mat-ripple>\n                            <div mat-card-image>\n                                <div class=\"img-wrapper\" *ngIf=\"view.image\">\n                                    <img\n                                        class=\"inner-img\"\n                                        [src]=\"view.image\"\n                                        [alt]=\"view.subtitle\"\n                                        (dragstart)=\"$event.preventDefault()\"\n                                    />\n                                </div>\n                                <div class=\"no-image\" *ngIf=\"!view.image\">\n                                    <mat-icon>{{ viewIcon(view.type) }}</mat-icon>\n                                </div>\n                            </div>\n                            <mat-card-subtitle>\n                                {{ view.subtitle }}\n                            </mat-card-subtitle>\n                        </mat-card>\n                    </a>\n                </div>\n            </ng-container>\n        </jellyfin-slider>\n    </section>\n    <section>\n        <h2 class=\"details-heading\">\n            <a href=\"#\">\n                <span class=\"heading\">Continue watching</span><span class=\"arrow\"> &gt;</span>\n            </a>\n        </h2>\n        <jellyfin-slider>\n            <div class=\"tile landscape\" *ngFor=\"let movie of continueWatching\">\n                <mat-card\n                    mat-ripple\n                    [matTooltip]=\"movie.originalTitle\"\n                    matTooltipPosition=\"below\"\n                    aria-label=\"movie.originalTitle\"\n                >\n                    <div mat-card-image>\n                        <div class=\"img-wrapper\">\n                            <img\n                                *ngIf=\"movie.image\"\n                                class=\"inner-img\"\n                                [src]=\"movie.image\"\n                                [alt]=\"movie.subtitle\"\n                                (dragstart)=\"$event.preventDefault()\"\n                            />\n                            <mat-progress-bar\n                                [value]=\"movie.progress\"\n                                color=\"accent\"\n                            ></mat-progress-bar>\n                        </div>\n                    </div>\n                    <mat-card-subtitle>\n                        {{ movie.subtitle }}\n                        <div *ngIf=\"movie.year\" class=\"year\">\n                            {{ movie.year }}\n                        </div>\n                    </mat-card-subtitle>\n                </mat-card>\n            </div>\n        </jellyfin-slider>\n    </section>\n    <section>\n        <h2>Latest movies</h2>\n        <jellyfin-slider>\n            <div class=\"tile portrait\" *ngFor=\"let movie of latestMovies\">\n                <mat-card\n                    mat-ripple\n                    [matTooltip]=\"movie.originalTitle\"\n                    matTooltipPosition=\"below\"\n                    aria-label=\"movie.originalTitle\"\n                >\n                    <div mat-card-image>\n                        <img\n                            *ngIf=\"movie.image\"\n                            class=\"inner-img\"\n                            [src]=\"movie.image\"\n                            [alt]=\"movie.subtitle\"\n                            (dragstart)=\"$event.preventDefault()\"\n                        />\n                    </div>\n                    <mat-card-subtitle>\n                        {{ movie.subtitle }}\n                        <div *ngIf=\"movie.year\" class=\"year\">\n                            {{ movie.year }}\n                        </div>\n                    </mat-card-subtitle>\n                </mat-card>\n            </div>\n        </jellyfin-slider>\n    </section>\n</ng-container>\n<mat-spinner *ngIf=\"!loaded\"></mat-spinner>\n","/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nimport { InjectionToken, Component, ViewEncapsulation, ElementRef, Input, Optional, ContentChildren, Directive, ChangeDetectionStrategy, Inject, NgModule } from '@angular/core';\nimport { MatLine, setLines, MatLineModule, MatCommonModule } from '@angular/material/core';\nimport { coerceNumberProperty } from '@angular/cdk/coercion';\nimport { Directionality } from '@angular/cdk/bidi';\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n/**\n * Injection token used to provide a grid list to a tile and to avoid circular imports.\n * \\@docs-private\n * @type {?}\n */\nconst MAT_GRID_LIST = new InjectionToken('MAT_GRID_LIST');\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\nclass MatGridTile {\n    /**\n     * @param {?} _element\n     * @param {?=} _gridList\n     */\n    constructor(_element, _gridList) {\n        this._element = _element;\n        this._gridList = _gridList;\n        this._rowspan = 1;\n        this._colspan = 1;\n    }\n    /**\n     * Amount of rows that the grid tile takes up.\n     * @return {?}\n     */\n    get rowspan() { return this._rowspan; }\n    /**\n     * @param {?} value\n     * @return {?}\n     */\n    set rowspan(value) { this._rowspan = Math.round(coerceNumberProperty(value)); }\n    /**\n     * Amount of columns that the grid tile takes up.\n     * @return {?}\n     */\n    get colspan() { return this._colspan; }\n    /**\n     * @param {?} value\n     * @return {?}\n     */\n    set colspan(value) { this._colspan = Math.round(coerceNumberProperty(value)); }\n    /**\n     * Sets the style of the grid-tile element.  Needs to be set manually to avoid\n     * \"Changed after checked\" errors that would occur with HostBinding.\n     * @param {?} property\n     * @param {?} value\n     * @return {?}\n     */\n    _setStyle(property, value) {\n        ((/** @type {?} */ (this._element.nativeElement.style)))[property] = value;\n    }\n}\nMatGridTile.decorators = [\n    { type: Component, args: [{selector: 'mat-grid-tile',\n                exportAs: 'matGridTile',\n                host: {\n                    'class': 'mat-grid-tile',\n                },\n                template: \"<figure class=\\\"mat-figure\\\"><ng-content></ng-content></figure>\",\n                styles: [\".mat-grid-list{display:block;position:relative}.mat-grid-tile{display:block;position:absolute;overflow:hidden}.mat-grid-tile .mat-figure{top:0;left:0;right:0;bottom:0;position:absolute;display:flex;align-items:center;justify-content:center;height:100%;padding:0;margin:0}.mat-grid-tile .mat-grid-tile-footer,.mat-grid-tile .mat-grid-tile-header{display:flex;align-items:center;height:48px;color:#fff;background:rgba(0,0,0,.38);overflow:hidden;padding:0 16px;position:absolute;left:0;right:0}.mat-grid-tile .mat-grid-tile-footer>*,.mat-grid-tile .mat-grid-tile-header>*{margin:0;padding:0;font-weight:400;font-size:inherit}.mat-grid-tile .mat-grid-tile-footer.mat-2-line,.mat-grid-tile .mat-grid-tile-header.mat-2-line{height:68px}.mat-grid-tile .mat-grid-list-text{display:flex;flex-direction:column;width:100%;box-sizing:border-box;overflow:hidden}.mat-grid-tile .mat-grid-list-text>*{margin:0;padding:0;font-weight:400;font-size:inherit}.mat-grid-tile .mat-grid-list-text:empty{display:none}.mat-grid-tile .mat-grid-tile-header{top:0}.mat-grid-tile .mat-grid-tile-footer{bottom:0}.mat-grid-tile .mat-grid-avatar{padding-right:16px}[dir=rtl] .mat-grid-tile .mat-grid-avatar{padding-right:0;padding-left:16px}.mat-grid-tile .mat-grid-avatar:empty{display:none}\"],\n                encapsulation: ViewEncapsulation.None,\n                changeDetection: ChangeDetectionStrategy.OnPush,\n            },] },\n];\n/** @nocollapse */\nMatGridTile.ctorParameters = () => [\n    { type: ElementRef },\n    { type: undefined, decorators: [{ type: Optional }, { type: Inject, args: [MAT_GRID_LIST,] }] }\n];\nMatGridTile.propDecorators = {\n    rowspan: [{ type: Input }],\n    colspan: [{ type: Input }]\n};\nclass MatGridTileText {\n    /**\n     * @param {?} _element\n     */\n    constructor(_element) {\n        this._element = _element;\n    }\n    /**\n     * @return {?}\n     */\n    ngAfterContentInit() {\n        setLines(this._lines, this._element);\n    }\n}\nMatGridTileText.decorators = [\n    { type: Component, args: [{selector: 'mat-grid-tile-header, mat-grid-tile-footer',\n                template: \"<ng-content select=\\\"[mat-grid-avatar], [matGridAvatar]\\\"></ng-content><div class=\\\"mat-grid-list-text\\\"><ng-content select=\\\"[mat-line], [matLine]\\\"></ng-content></div><ng-content></ng-content>\",\n                changeDetection: ChangeDetectionStrategy.OnPush,\n                encapsulation: ViewEncapsulation.None,\n            },] },\n];\n/** @nocollapse */\nMatGridTileText.ctorParameters = () => [\n    { type: ElementRef }\n];\nMatGridTileText.propDecorators = {\n    _lines: [{ type: ContentChildren, args: [MatLine,] }]\n};\n/**\n * Directive whose purpose is to add the mat- CSS styling to this selector.\n * \\@docs-private\n */\nclass MatGridAvatarCssMatStyler {\n}\nMatGridAvatarCssMatStyler.decorators = [\n    { type: Directive, args: [{\n                selector: '[mat-grid-avatar], [matGridAvatar]',\n                host: { 'class': 'mat-grid-avatar' }\n            },] },\n];\n/**\n * Directive whose purpose is to add the mat- CSS styling to this selector.\n * \\@docs-private\n */\nclass MatGridTileHeaderCssMatStyler {\n}\nMatGridTileHeaderCssMatStyler.decorators = [\n    { type: Directive, args: [{\n                selector: 'mat-grid-tile-header',\n                host: { 'class': 'mat-grid-tile-header' }\n            },] },\n];\n/**\n * Directive whose purpose is to add the mat- CSS styling to this selector.\n * \\@docs-private\n */\nclass MatGridTileFooterCssMatStyler {\n}\nMatGridTileFooterCssMatStyler.decorators = [\n    { type: Directive, args: [{\n                selector: 'mat-grid-tile-footer',\n                host: { 'class': 'mat-grid-tile-footer' }\n            },] },\n];\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n\n/**\n * Class for determining, from a list of tiles, the (row, col) position of each of those tiles\n * in the grid. This is necessary (rather than just rendering the tiles in normal document flow)\n * because the tiles can have a rowspan.\n *\n * The positioning algorithm greedily places each tile as soon as it encounters a gap in the grid\n * large enough to accommodate it so that the tiles still render in the same order in which they\n * are given.\n *\n * The basis of the algorithm is the use of an array to track the already placed tiles. Each\n * element of the array corresponds to a column, and the value indicates how many cells in that\n * column are already occupied; zero indicates an empty cell. Moving \"down\" to the next row\n * decrements each value in the tracking array (indicating that the column is one cell closer to\n * being free).\n *\n * \\@docs-private\n */\nclass TileCoordinator {\n    constructor() {\n        /**\n         * Index at which the search for the next gap will start.\n         */\n        this.columnIndex = 0;\n        /**\n         * The current row index.\n         */\n        this.rowIndex = 0;\n    }\n    /**\n     * Gets the total number of rows occupied by tiles\n     * @return {?}\n     */\n    get rowCount() { return this.rowIndex + 1; }\n    /**\n     * Gets the total span of rows occupied by tiles.\n     * Ex: A list with 1 row that contains a tile with rowspan 2 will have a total rowspan of 2.\n     * @return {?}\n     */\n    get rowspan() {\n        /** @type {?} */\n        const lastRowMax = Math.max(...this.tracker);\n        // if any of the tiles has a rowspan that pushes it beyond the total row count,\n        // add the difference to the rowcount\n        return lastRowMax > 1 ? this.rowCount + lastRowMax - 1 : this.rowCount;\n    }\n    /**\n     * Updates the tile positions.\n     * @param {?} numColumns Amount of columns in the grid.\n     * @param {?} tiles\n     * @return {?}\n     */\n    update(numColumns, tiles) {\n        this.columnIndex = 0;\n        this.rowIndex = 0;\n        this.tracker = new Array(numColumns);\n        this.tracker.fill(0, 0, this.tracker.length);\n        this.positions = tiles.map((/**\n         * @param {?} tile\n         * @return {?}\n         */\n        tile => this._trackTile(tile)));\n    }\n    /**\n     * Calculates the row and col position of a tile.\n     * @private\n     * @param {?} tile\n     * @return {?}\n     */\n    _trackTile(tile) {\n        // Find a gap large enough for this tile.\n        /** @type {?} */\n        const gapStartIndex = this._findMatchingGap(tile.colspan);\n        // Place tile in the resulting gap.\n        this._markTilePosition(gapStartIndex, tile);\n        // The next time we look for a gap, the search will start at columnIndex, which should be\n        // immediately after the tile that has just been placed.\n        this.columnIndex = gapStartIndex + tile.colspan;\n        return new TilePosition(this.rowIndex, gapStartIndex);\n    }\n    /**\n     * Finds the next available space large enough to fit the tile.\n     * @private\n     * @param {?} tileCols\n     * @return {?}\n     */\n    _findMatchingGap(tileCols) {\n        if (tileCols > this.tracker.length) {\n            throw Error(`mat-grid-list: tile with colspan ${tileCols} is wider than ` +\n                `grid with cols=\"${this.tracker.length}\".`);\n        }\n        // Start index is inclusive, end index is exclusive.\n        /** @type {?} */\n        let gapStartIndex = -1;\n        /** @type {?} */\n        let gapEndIndex = -1;\n        // Look for a gap large enough to fit the given tile. Empty spaces are marked with a zero.\n        do {\n            // If we've reached the end of the row, go to the next row.\n            if (this.columnIndex + tileCols > this.tracker.length) {\n                this._nextRow();\n                gapStartIndex = this.tracker.indexOf(0, this.columnIndex);\n                gapEndIndex = this._findGapEndIndex(gapStartIndex);\n                continue;\n            }\n            gapStartIndex = this.tracker.indexOf(0, this.columnIndex);\n            // If there are no more empty spaces in this row at all, move on to the next row.\n            if (gapStartIndex == -1) {\n                this._nextRow();\n                gapStartIndex = this.tracker.indexOf(0, this.columnIndex);\n                gapEndIndex = this._findGapEndIndex(gapStartIndex);\n                continue;\n            }\n            gapEndIndex = this._findGapEndIndex(gapStartIndex);\n            // If a gap large enough isn't found, we want to start looking immediately after the current\n            // gap on the next iteration.\n            this.columnIndex = gapStartIndex + 1;\n            // Continue iterating until we find a gap wide enough for this tile. Since gapEndIndex is\n            // exclusive, gapEndIndex is 0 means we didn't find a gap and should continue.\n        } while ((gapEndIndex - gapStartIndex < tileCols) || (gapEndIndex == 0));\n        // If we still didn't manage to find a gap, ensure that the index is\n        // at least zero so the tile doesn't get pulled out of the grid.\n        return Math.max(gapStartIndex, 0);\n    }\n    /**\n     * Move \"down\" to the next row.\n     * @private\n     * @return {?}\n     */\n    _nextRow() {\n        this.columnIndex = 0;\n        this.rowIndex++;\n        // Decrement all spaces by one to reflect moving down one row.\n        for (let i = 0; i < this.tracker.length; i++) {\n            this.tracker[i] = Math.max(0, this.tracker[i] - 1);\n        }\n    }\n    /**\n     * Finds the end index (exclusive) of a gap given the index from which to start looking.\n     * The gap ends when a non-zero value is found.\n     * @private\n     * @param {?} gapStartIndex\n     * @return {?}\n     */\n    _findGapEndIndex(gapStartIndex) {\n        for (let i = gapStartIndex + 1; i < this.tracker.length; i++) {\n            if (this.tracker[i] != 0) {\n                return i;\n            }\n        }\n        // The gap ends with the end of the row.\n        return this.tracker.length;\n    }\n    /**\n     * Update the tile tracker to account for the given tile in the given space.\n     * @private\n     * @param {?} start\n     * @param {?} tile\n     * @return {?}\n     */\n    _markTilePosition(start, tile) {\n        for (let i = 0; i < tile.colspan; i++) {\n            this.tracker[start + i] = tile.rowspan;\n        }\n    }\n}\n/**\n * Simple data structure for tile position (row, col).\n * \\@docs-private\n */\nclass TilePosition {\n    /**\n     * @param {?} row\n     * @param {?} col\n     */\n    constructor(row, col) {\n        this.row = row;\n        this.col = col;\n    }\n}\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n\n/**\n * RegExp that can be used to check whether a value will\n * be allowed inside a CSS `calc()` expression.\n * @type {?}\n */\nconst cssCalcAllowedValue = /^-?\\d+((\\.\\d+)?[A-Za-z%$]?)+$/;\n/**\n * Sets the style properties for an individual tile, given the position calculated by the\n * Tile Coordinator.\n * \\@docs-private\n * @abstract\n */\nclass TileStyler {\n    constructor() {\n        this._rows = 0;\n        this._rowspan = 0;\n    }\n    /**\n     * Adds grid-list layout info once it is available. Cannot be processed in the constructor\n     * because these properties haven't been calculated by that point.\n     *\n     * @param {?} gutterSize Size of the grid's gutter.\n     * @param {?} tracker Instance of the TileCoordinator.\n     * @param {?} cols Amount of columns in the grid.\n     * @param {?} direction Layout direction of the grid.\n     * @return {?}\n     */\n    init(gutterSize, tracker, cols, direction) {\n        this._gutterSize = normalizeUnits(gutterSize);\n        this._rows = tracker.rowCount;\n        this._rowspan = tracker.rowspan;\n        this._cols = cols;\n        this._direction = direction;\n    }\n    /**\n     * Computes the amount of space a single 1x1 tile would take up (width or height).\n     * Used as a basis for other calculations.\n     * @param {?} sizePercent Percent of the total grid-list space that one 1x1 tile would take up.\n     * @param {?} gutterFraction Fraction of the gutter size taken up by one 1x1 tile.\n     * @return {?} The size of a 1x1 tile as an expression that can be evaluated via CSS calc().\n     */\n    getBaseTileSize(sizePercent, gutterFraction) {\n        // Take the base size percent (as would be if evenly dividing the size between cells),\n        // and then subtracting the size of one gutter. However, since there are no gutters on the\n        // edges, each tile only uses a fraction (gutterShare = numGutters / numCells) of the gutter\n        // size. (Imagine having one gutter per tile, and then breaking up the extra gutter on the\n        // edge evenly among the cells).\n        return `(${sizePercent}% - (${this._gutterSize} * ${gutterFraction}))`;\n    }\n    /**\n     * Gets The horizontal or vertical position of a tile, e.g., the 'top' or 'left' property value.\n     * @param {?} baseSize Base size of a 1x1 tile (as computed in getBaseTileSize).\n     * @param {?} offset Number of tiles that have already been rendered in the row/column.\n     * @return {?} Position of the tile as a CSS calc() expression.\n     */\n    getTilePosition(baseSize, offset) {\n        // The position comes the size of a 1x1 tile plus gutter for each previous tile in the\n        // row/column (offset).\n        return offset === 0 ? '0' : calc(`(${baseSize} + ${this._gutterSize}) * ${offset}`);\n    }\n    /**\n     * Gets the actual size of a tile, e.g., width or height, taking rowspan or colspan into account.\n     * @param {?} baseSize Base size of a 1x1 tile (as computed in getBaseTileSize).\n     * @param {?} span The tile's rowspan or colspan.\n     * @return {?} Size of the tile as a CSS calc() expression.\n     */\n    getTileSize(baseSize, span) {\n        return `(${baseSize} * ${span}) + (${span - 1} * ${this._gutterSize})`;\n    }\n    /**\n     * Sets the style properties to be applied to a tile for the given row and column index.\n     * @param {?} tile Tile to which to apply the styling.\n     * @param {?} rowIndex Index of the tile's row.\n     * @param {?} colIndex Index of the tile's column.\n     * @return {?}\n     */\n    setStyle(tile, rowIndex, colIndex) {\n        // Percent of the available horizontal space that one column takes up.\n        /** @type {?} */\n        let percentWidthPerTile = 100 / this._cols;\n        // Fraction of the vertical gutter size that each column takes up.\n        // For example, if there are 5 columns, each column uses 4/5 = 0.8 times the gutter width.\n        /** @type {?} */\n        let gutterWidthFractionPerTile = (this._cols - 1) / this._cols;\n        this.setColStyles(tile, colIndex, percentWidthPerTile, gutterWidthFractionPerTile);\n        this.setRowStyles(tile, rowIndex, percentWidthPerTile, gutterWidthFractionPerTile);\n    }\n    /**\n     * Sets the horizontal placement of the tile in the list.\n     * @param {?} tile\n     * @param {?} colIndex\n     * @param {?} percentWidth\n     * @param {?} gutterWidth\n     * @return {?}\n     */\n    setColStyles(tile, colIndex, percentWidth, gutterWidth) {\n        // Base horizontal size of a column.\n        /** @type {?} */\n        let baseTileWidth = this.getBaseTileSize(percentWidth, gutterWidth);\n        // The width and horizontal position of each tile is always calculated the same way, but the\n        // height and vertical position depends on the rowMode.\n        /** @type {?} */\n        let side = this._direction === 'rtl' ? 'right' : 'left';\n        tile._setStyle(side, this.getTilePosition(baseTileWidth, colIndex));\n        tile._setStyle('width', calc(this.getTileSize(baseTileWidth, tile.colspan)));\n    }\n    /**\n     * Calculates the total size taken up by gutters across one axis of a list.\n     * @return {?}\n     */\n    getGutterSpan() {\n        return `${this._gutterSize} * (${this._rowspan} - 1)`;\n    }\n    /**\n     * Calculates the total size taken up by tiles across one axis of a list.\n     * @param {?} tileHeight Height of the tile.\n     * @return {?}\n     */\n    getTileSpan(tileHeight) {\n        return `${this._rowspan} * ${this.getTileSize(tileHeight, 1)}`;\n    }\n    /**\n     * Calculates the computed height and returns the correct style property to set.\n     * This method can be implemented by each type of TileStyler.\n     * \\@docs-private\n     * @return {?}\n     */\n    getComputedHeight() { return null; }\n}\n/**\n * This type of styler is instantiated when the user passes in a fixed row height.\n * Example `<mat-grid-list cols=\"3\" rowHeight=\"100px\">`\n * \\@docs-private\n */\nclass FixedTileStyler extends TileStyler {\n    /**\n     * @param {?} fixedRowHeight\n     */\n    constructor(fixedRowHeight) {\n        super();\n        this.fixedRowHeight = fixedRowHeight;\n    }\n    /**\n     * @param {?} gutterSize\n     * @param {?} tracker\n     * @param {?} cols\n     * @param {?} direction\n     * @return {?}\n     */\n    init(gutterSize, tracker, cols, direction) {\n        super.init(gutterSize, tracker, cols, direction);\n        this.fixedRowHeight = normalizeUnits(this.fixedRowHeight);\n        if (!cssCalcAllowedValue.test(this.fixedRowHeight)) {\n            throw Error(`Invalid value \"${this.fixedRowHeight}\" set as rowHeight.`);\n        }\n    }\n    /**\n     * @param {?} tile\n     * @param {?} rowIndex\n     * @return {?}\n     */\n    setRowStyles(tile, rowIndex) {\n        tile._setStyle('top', this.getTilePosition(this.fixedRowHeight, rowIndex));\n        tile._setStyle('height', calc(this.getTileSize(this.fixedRowHeight, tile.rowspan)));\n    }\n    /**\n     * @return {?}\n     */\n    getComputedHeight() {\n        return [\n            'height', calc(`${this.getTileSpan(this.fixedRowHeight)} + ${this.getGutterSpan()}`)\n        ];\n    }\n    /**\n     * @param {?} list\n     * @return {?}\n     */\n    reset(list) {\n        list._setListStyle(['height', null]);\n        if (list._tiles) {\n            list._tiles.forEach((/**\n             * @param {?} tile\n             * @return {?}\n             */\n            tile => {\n                tile._setStyle('top', null);\n                tile._setStyle('height', null);\n            }));\n        }\n    }\n}\n/**\n * This type of styler is instantiated when the user passes in a width:height ratio\n * for the row height.  Example `<mat-grid-list cols=\"3\" rowHeight=\"3:1\">`\n * \\@docs-private\n */\nclass RatioTileStyler extends TileStyler {\n    /**\n     * @param {?} value\n     */\n    constructor(value) {\n        super();\n        this._parseRatio(value);\n    }\n    /**\n     * @param {?} tile\n     * @param {?} rowIndex\n     * @param {?} percentWidth\n     * @param {?} gutterWidth\n     * @return {?}\n     */\n    setRowStyles(tile, rowIndex, percentWidth, gutterWidth) {\n        /** @type {?} */\n        let percentHeightPerTile = percentWidth / this.rowHeightRatio;\n        this.baseTileHeight = this.getBaseTileSize(percentHeightPerTile, gutterWidth);\n        // Use padding-top and margin-top to maintain the given aspect ratio, as\n        // a percentage-based value for these properties is applied versus the *width* of the\n        // containing block. See http://www.w3.org/TR/CSS2/box.html#margin-properties\n        tile._setStyle('marginTop', this.getTilePosition(this.baseTileHeight, rowIndex));\n        tile._setStyle('paddingTop', calc(this.getTileSize(this.baseTileHeight, tile.rowspan)));\n    }\n    /**\n     * @return {?}\n     */\n    getComputedHeight() {\n        return [\n            'paddingBottom', calc(`${this.getTileSpan(this.baseTileHeight)} + ${this.getGutterSpan()}`)\n        ];\n    }\n    /**\n     * @param {?} list\n     * @return {?}\n     */\n    reset(list) {\n        list._setListStyle(['paddingBottom', null]);\n        list._tiles.forEach((/**\n         * @param {?} tile\n         * @return {?}\n         */\n        tile => {\n            tile._setStyle('marginTop', null);\n            tile._setStyle('paddingTop', null);\n        }));\n    }\n    /**\n     * @private\n     * @param {?} value\n     * @return {?}\n     */\n    _parseRatio(value) {\n        /** @type {?} */\n        const ratioParts = value.split(':');\n        if (ratioParts.length !== 2) {\n            throw Error(`mat-grid-list: invalid ratio given for row-height: \"${value}\"`);\n        }\n        this.rowHeightRatio = parseFloat(ratioParts[0]) / parseFloat(ratioParts[1]);\n    }\n}\n/**\n * This type of styler is instantiated when the user selects a \"fit\" row height mode.\n * In other words, the row height will reflect the total height of the container divided\n * by the number of rows.  Example `<mat-grid-list cols=\"3\" rowHeight=\"fit\">`\n *\n * \\@docs-private\n */\nclass FitTileStyler extends TileStyler {\n    /**\n     * @param {?} tile\n     * @param {?} rowIndex\n     * @return {?}\n     */\n    setRowStyles(tile, rowIndex) {\n        // Percent of the available vertical space that one row takes up.\n        /** @type {?} */\n        let percentHeightPerTile = 100 / this._rowspan;\n        // Fraction of the horizontal gutter size that each column takes up.\n        /** @type {?} */\n        let gutterHeightPerTile = (this._rows - 1) / this._rows;\n        // Base vertical size of a column.\n        /** @type {?} */\n        let baseTileHeight = this.getBaseTileSize(percentHeightPerTile, gutterHeightPerTile);\n        tile._setStyle('top', this.getTilePosition(baseTileHeight, rowIndex));\n        tile._setStyle('height', calc(this.getTileSize(baseTileHeight, tile.rowspan)));\n    }\n    /**\n     * @param {?} list\n     * @return {?}\n     */\n    reset(list) {\n        if (list._tiles) {\n            list._tiles.forEach((/**\n             * @param {?} tile\n             * @return {?}\n             */\n            tile => {\n                tile._setStyle('top', null);\n                tile._setStyle('height', null);\n            }));\n        }\n    }\n}\n/**\n * Wraps a CSS string in a calc function\n * @param {?} exp\n * @return {?}\n */\nfunction calc(exp) {\n    return `calc(${exp})`;\n}\n/**\n * Appends pixels to a CSS string if no units are given.\n * @param {?} value\n * @return {?}\n */\nfunction normalizeUnits(value) {\n    return value.match(/([A-Za-z%]+)$/) ? value : `${value}px`;\n}\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n// TODO(kara): Conditional (responsive) column count / row size.\n// TODO(kara): Re-layout on window resize / media change (debounced).\n// TODO(kara): gridTileHeader and gridTileFooter.\n/** @type {?} */\nconst MAT_FIT_MODE = 'fit';\nclass MatGridList {\n    /**\n     * @param {?} _element\n     * @param {?} _dir\n     */\n    constructor(_element, _dir) {\n        this._element = _element;\n        this._dir = _dir;\n        /**\n         * The amount of space between tiles. This will be something like '5px' or '2em'.\n         */\n        this._gutter = '1px';\n    }\n    /**\n     * Amount of columns in the grid list.\n     * @return {?}\n     */\n    get cols() { return this._cols; }\n    /**\n     * @param {?} value\n     * @return {?}\n     */\n    set cols(value) {\n        this._cols = Math.max(1, Math.round(coerceNumberProperty(value)));\n    }\n    /**\n     * Size of the grid list's gutter in pixels.\n     * @return {?}\n     */\n    get gutterSize() { return this._gutter; }\n    /**\n     * @param {?} value\n     * @return {?}\n     */\n    set gutterSize(value) { this._gutter = `${value == null ? '' : value}`; }\n    /**\n     * Set internal representation of row height from the user-provided value.\n     * @return {?}\n     */\n    get rowHeight() { return this._rowHeight; }\n    /**\n     * @param {?} value\n     * @return {?}\n     */\n    set rowHeight(value) {\n        /** @type {?} */\n        const newValue = `${value == null ? '' : value}`;\n        if (newValue !== this._rowHeight) {\n            this._rowHeight = newValue;\n            this._setTileStyler(this._rowHeight);\n        }\n    }\n    /**\n     * @return {?}\n     */\n    ngOnInit() {\n        this._checkCols();\n        this._checkRowHeight();\n    }\n    /**\n     * The layout calculation is fairly cheap if nothing changes, so there's little cost\n     * to run it frequently.\n     * @return {?}\n     */\n    ngAfterContentChecked() {\n        this._layoutTiles();\n    }\n    /**\n     * Throw a friendly error if cols property is missing\n     * @private\n     * @return {?}\n     */\n    _checkCols() {\n        if (!this.cols) {\n            throw Error(`mat-grid-list: must pass in number of columns. ` +\n                `Example: <mat-grid-list cols=\"3\">`);\n        }\n    }\n    /**\n     * Default to equal width:height if rowHeight property is missing\n     * @private\n     * @return {?}\n     */\n    _checkRowHeight() {\n        if (!this._rowHeight) {\n            this._setTileStyler('1:1');\n        }\n    }\n    /**\n     * Creates correct Tile Styler subtype based on rowHeight passed in by user\n     * @private\n     * @param {?} rowHeight\n     * @return {?}\n     */\n    _setTileStyler(rowHeight) {\n        if (this._tileStyler) {\n            this._tileStyler.reset(this);\n        }\n        if (rowHeight === MAT_FIT_MODE) {\n            this._tileStyler = new FitTileStyler();\n        }\n        else if (rowHeight && rowHeight.indexOf(':') > -1) {\n            this._tileStyler = new RatioTileStyler(rowHeight);\n        }\n        else {\n            this._tileStyler = new FixedTileStyler(rowHeight);\n        }\n    }\n    /**\n     * Computes and applies the size and position for all children grid tiles.\n     * @private\n     * @return {?}\n     */\n    _layoutTiles() {\n        if (!this._tileCoordinator) {\n            this._tileCoordinator = new TileCoordinator();\n        }\n        /** @type {?} */\n        const tracker = this._tileCoordinator;\n        /** @type {?} */\n        const tiles = this._tiles.filter((/**\n         * @param {?} tile\n         * @return {?}\n         */\n        tile => !tile._gridList || tile._gridList === this));\n        /** @type {?} */\n        const direction = this._dir ? this._dir.value : 'ltr';\n        this._tileCoordinator.update(this.cols, tiles);\n        this._tileStyler.init(this.gutterSize, tracker, this.cols, direction);\n        tiles.forEach((/**\n         * @param {?} tile\n         * @param {?} index\n         * @return {?}\n         */\n        (tile, index) => {\n            /** @type {?} */\n            const pos = tracker.positions[index];\n            this._tileStyler.setStyle(tile, pos.row, pos.col);\n        }));\n        this._setListStyle(this._tileStyler.getComputedHeight());\n    }\n    /**\n     * Sets style on the main grid-list element, given the style name and value.\n     * @param {?} style\n     * @return {?}\n     */\n    _setListStyle(style) {\n        if (style) {\n            ((/** @type {?} */ (this._element.nativeElement.style)))[style[0]] = style[1];\n        }\n    }\n}\nMatGridList.decorators = [\n    { type: Component, args: [{selector: 'mat-grid-list',\n                exportAs: 'matGridList',\n                template: \"<div><ng-content></ng-content></div>\",\n                styles: [\".mat-grid-list{display:block;position:relative}.mat-grid-tile{display:block;position:absolute;overflow:hidden}.mat-grid-tile .mat-figure{top:0;left:0;right:0;bottom:0;position:absolute;display:flex;align-items:center;justify-content:center;height:100%;padding:0;margin:0}.mat-grid-tile .mat-grid-tile-footer,.mat-grid-tile .mat-grid-tile-header{display:flex;align-items:center;height:48px;color:#fff;background:rgba(0,0,0,.38);overflow:hidden;padding:0 16px;position:absolute;left:0;right:0}.mat-grid-tile .mat-grid-tile-footer>*,.mat-grid-tile .mat-grid-tile-header>*{margin:0;padding:0;font-weight:400;font-size:inherit}.mat-grid-tile .mat-grid-tile-footer.mat-2-line,.mat-grid-tile .mat-grid-tile-header.mat-2-line{height:68px}.mat-grid-tile .mat-grid-list-text{display:flex;flex-direction:column;width:100%;box-sizing:border-box;overflow:hidden}.mat-grid-tile .mat-grid-list-text>*{margin:0;padding:0;font-weight:400;font-size:inherit}.mat-grid-tile .mat-grid-list-text:empty{display:none}.mat-grid-tile .mat-grid-tile-header{top:0}.mat-grid-tile .mat-grid-tile-footer{bottom:0}.mat-grid-tile .mat-grid-avatar{padding-right:16px}[dir=rtl] .mat-grid-tile .mat-grid-avatar{padding-right:0;padding-left:16px}.mat-grid-tile .mat-grid-avatar:empty{display:none}\"],\n                host: {\n                    'class': 'mat-grid-list',\n                },\n                providers: [{\n                        provide: MAT_GRID_LIST,\n                        useExisting: MatGridList\n                    }],\n                changeDetection: ChangeDetectionStrategy.OnPush,\n                encapsulation: ViewEncapsulation.None,\n            },] },\n];\n/** @nocollapse */\nMatGridList.ctorParameters = () => [\n    { type: ElementRef },\n    { type: Directionality, decorators: [{ type: Optional }] }\n];\nMatGridList.propDecorators = {\n    _tiles: [{ type: ContentChildren, args: [MatGridTile, { descendants: true },] }],\n    cols: [{ type: Input }],\n    gutterSize: [{ type: Input }],\n    rowHeight: [{ type: Input }]\n};\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\nclass MatGridListModule {\n}\nMatGridListModule.decorators = [\n    { type: NgModule, args: [{\n                imports: [MatLineModule, MatCommonModule],\n                exports: [\n                    MatGridList,\n                    MatGridTile,\n                    MatGridTileText,\n                    MatLineModule,\n                    MatCommonModule,\n                    MatGridTileHeaderCssMatStyler,\n                    MatGridTileFooterCssMatStyler,\n                    MatGridAvatarCssMatStyler\n                ],\n                declarations: [\n                    MatGridList,\n                    MatGridTile,\n                    MatGridTileText,\n                    MatGridTileHeaderCssMatStyler,\n                    MatGridTileFooterCssMatStyler,\n                    MatGridAvatarCssMatStyler\n                ],\n            },] },\n];\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n\nexport { MatGridListModule, MatGridList, MatGridTile, MatGridTileText, MatGridAvatarCssMatStyler, MatGridTileHeaderCssMatStyler, MatGridTileFooterCssMatStyler, MAT_GRID_LIST as ɵa5 };\n//# sourceMappingURL=grid-list.js.map\n","/**\n * @fileoverview This file was generated by the Angular template compiler. Do not edit.\n *\n * @suppress {suspiciousCode,uselessCode,missingProperties,missingOverride,checkTypes}\n * tslint:disable\n */ \nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/material/grid-list\";\nimport * as i2 from \"@angular/cdk/bidi\";\nimport * as i3 from \"@angular/material/core\";\nimport * as i4 from \"@angular/platform-browser\";\nvar MatGridListModuleNgFactory = i0.ɵcmf(i1.MatGridListModule, [], function (_l) { return i0.ɵmod([i0.ɵmpd(512, i0.ComponentFactoryResolver, i0.ɵCodegenComponentFactoryResolver, [[8, []], [3, i0.ComponentFactoryResolver], i0.NgModuleRef]), i0.ɵmpd(1073742336, i2.BidiModule, i2.BidiModule, []), i0.ɵmpd(1073742336, i3.MatCommonModule, i3.MatCommonModule, [[2, i3.MATERIAL_SANITY_CHECKS], [2, i4.HAMMER_LOADER]]), i0.ɵmpd(1073742336, i3.MatLineModule, i3.MatLineModule, []), i0.ɵmpd(1073742336, i1.MatGridListModule, i1.MatGridListModule, [])]); });\nexport { MatGridListModuleNgFactory as MatGridListModuleNgFactory };\nvar styles_MatGridList = [\".mat-grid-list{display:block;position:relative}.mat-grid-tile{display:block;position:absolute;overflow:hidden}.mat-grid-tile .mat-figure{top:0;left:0;right:0;bottom:0;position:absolute;display:flex;align-items:center;justify-content:center;height:100%;padding:0;margin:0}.mat-grid-tile .mat-grid-tile-footer,.mat-grid-tile .mat-grid-tile-header{display:flex;align-items:center;height:48px;color:#fff;background:rgba(0,0,0,.38);overflow:hidden;padding:0 16px;position:absolute;left:0;right:0}.mat-grid-tile .mat-grid-tile-footer>*,.mat-grid-tile .mat-grid-tile-header>*{margin:0;padding:0;font-weight:400;font-size:inherit}.mat-grid-tile .mat-grid-tile-footer.mat-2-line,.mat-grid-tile .mat-grid-tile-header.mat-2-line{height:68px}.mat-grid-tile .mat-grid-list-text{display:flex;flex-direction:column;width:100%;box-sizing:border-box;overflow:hidden}.mat-grid-tile .mat-grid-list-text>*{margin:0;padding:0;font-weight:400;font-size:inherit}.mat-grid-tile .mat-grid-list-text:empty{display:none}.mat-grid-tile .mat-grid-tile-header{top:0}.mat-grid-tile .mat-grid-tile-footer{bottom:0}.mat-grid-tile .mat-grid-avatar{padding-right:16px}[dir=rtl] .mat-grid-tile .mat-grid-avatar{padding-right:0;padding-left:16px}.mat-grid-tile .mat-grid-avatar:empty{display:none}\"];\nvar RenderType_MatGridList = i0.ɵcrt({ encapsulation: 2, styles: styles_MatGridList, data: {} });\nexport { RenderType_MatGridList as RenderType_MatGridList };\nexport function View_MatGridList_0(_l) { return i0.ɵvid(2, [(_l()(), i0.ɵeld(0, 0, null, null, 1, \"div\", [], null, null, null, null, null)), i0.ɵncd(null, 0)], null, null); }\nexport function View_MatGridList_Host_0(_l) { return i0.ɵvid(0, [(_l()(), i0.ɵeld(0, 0, null, null, 3, \"mat-grid-list\", [[\"class\", \"mat-grid-list\"]], null, null, null, View_MatGridList_0, RenderType_MatGridList)), i0.ɵprd(6144, null, i1.ɵa5, null, [i1.MatGridList]), i0.ɵdid(2, 2211840, null, 1, i1.MatGridList, [i0.ElementRef, [2, i2.Directionality]], null, null), i0.ɵqud(603979776, 1, { _tiles: 1 })], function (_ck, _v) { _ck(_v, 2, 0); }, null); }\nvar MatGridListNgFactory = i0.ɵccf(\"mat-grid-list\", i1.MatGridList, View_MatGridList_Host_0, { cols: \"cols\", gutterSize: \"gutterSize\", rowHeight: \"rowHeight\" }, {}, [\"*\"]);\nexport { MatGridListNgFactory as MatGridListNgFactory };\nvar styles_MatGridTile = [\".mat-grid-list{display:block;position:relative}.mat-grid-tile{display:block;position:absolute;overflow:hidden}.mat-grid-tile .mat-figure{top:0;left:0;right:0;bottom:0;position:absolute;display:flex;align-items:center;justify-content:center;height:100%;padding:0;margin:0}.mat-grid-tile .mat-grid-tile-footer,.mat-grid-tile .mat-grid-tile-header{display:flex;align-items:center;height:48px;color:#fff;background:rgba(0,0,0,.38);overflow:hidden;padding:0 16px;position:absolute;left:0;right:0}.mat-grid-tile .mat-grid-tile-footer>*,.mat-grid-tile .mat-grid-tile-header>*{margin:0;padding:0;font-weight:400;font-size:inherit}.mat-grid-tile .mat-grid-tile-footer.mat-2-line,.mat-grid-tile .mat-grid-tile-header.mat-2-line{height:68px}.mat-grid-tile .mat-grid-list-text{display:flex;flex-direction:column;width:100%;box-sizing:border-box;overflow:hidden}.mat-grid-tile .mat-grid-list-text>*{margin:0;padding:0;font-weight:400;font-size:inherit}.mat-grid-tile .mat-grid-list-text:empty{display:none}.mat-grid-tile .mat-grid-tile-header{top:0}.mat-grid-tile .mat-grid-tile-footer{bottom:0}.mat-grid-tile .mat-grid-avatar{padding-right:16px}[dir=rtl] .mat-grid-tile .mat-grid-avatar{padding-right:0;padding-left:16px}.mat-grid-tile .mat-grid-avatar:empty{display:none}\"];\nvar RenderType_MatGridTile = i0.ɵcrt({ encapsulation: 2, styles: styles_MatGridTile, data: {} });\nexport { RenderType_MatGridTile as RenderType_MatGridTile };\nexport function View_MatGridTile_0(_l) { return i0.ɵvid(2, [(_l()(), i0.ɵeld(0, 0, null, null, 1, \"figure\", [[\"class\", \"mat-figure\"]], null, null, null, null, null)), i0.ɵncd(null, 0)], null, null); }\nexport function View_MatGridTile_Host_0(_l) { return i0.ɵvid(0, [(_l()(), i0.ɵeld(0, 0, null, null, 1, \"mat-grid-tile\", [[\"class\", \"mat-grid-tile\"]], null, null, null, View_MatGridTile_0, RenderType_MatGridTile)), i0.ɵdid(1, 49152, null, 0, i1.MatGridTile, [i0.ElementRef, [2, i1.ɵa5]], null, null)], null, null); }\nvar MatGridTileNgFactory = i0.ɵccf(\"mat-grid-tile\", i1.MatGridTile, View_MatGridTile_Host_0, { rowspan: \"rowspan\", colspan: \"colspan\" }, {}, [\"*\"]);\nexport { MatGridTileNgFactory as MatGridTileNgFactory };\nvar styles_MatGridTileText = [];\nvar RenderType_MatGridTileText = i0.ɵcrt({ encapsulation: 2, styles: styles_MatGridTileText, data: {} });\nexport { RenderType_MatGridTileText as RenderType_MatGridTileText };\nexport function View_MatGridTileText_0(_l) { return i0.ɵvid(2, [i0.ɵncd(null, 0), (_l()(), i0.ɵeld(1, 0, null, null, 1, \"div\", [[\"class\", \"mat-grid-list-text\"]], null, null, null, null, null)), i0.ɵncd(null, 1), i0.ɵncd(null, 2)], null, null); }\nexport function View_MatGridTileText_Host_0(_l) { return i0.ɵvid(0, [(_l()(), i0.ɵeld(0, 0, null, null, 2, \"mat-grid-tile-header\", [], null, null, null, View_MatGridTileText_0, RenderType_MatGridTileText)), i0.ɵdid(1, 1097728, null, 1, i1.MatGridTileText, [i0.ElementRef], null, null), i0.ɵqud(603979776, 1, { _lines: 1 })], null, null); }\nvar MatGridTileTextNgFactory = i0.ɵccf(\"mat-grid-tile-header, mat-grid-tile-footer\", i1.MatGridTileText, View_MatGridTileText_Host_0, {}, {}, [\"[mat-grid-avatar], [matGridAvatar]\", \"[mat-line], [matLine]\", \"*\"]);\nexport { MatGridTileTextNgFactory as MatGridTileTextNgFactory };\n","<div><ng-content></ng-content></div>","<figure class=\"mat-figure\"><ng-content></ng-content></figure>","export enum Order {\n    ASCENDING = \"Ascending\",\n    DESCENDING = \"Descending\"\n}\n\nexport enum SortAttributes {\n    SORT_NAME = \"SortName\"\n}\n","import { Component, OnInit } from \"@angular/core\";\nimport { AuthService } from \"../../auth/auth.service\";\nimport { ApiService } from \"../../common/api/api.service\";\nimport { Item } from \"../../common/api/item\";\nimport { ItemHelper } from \"../../utils/api-helpers\";\nimport { Order, SortAttributes } from \"../../utils/emums\";\n\ninterface MovieTile {\n    image?: string;\n}\n\n@Component({\n    selector: \"jellyfin-movies\",\n    templateUrl: \"./movies.component.html\",\n    styleUrls: [\"./movies.component.scss\"]\n})\nexport class MoviesComponent implements OnInit {\n    private sortAttr = SortAttributes.SORT_NAME;\n    private sortOrder = Order.ASCENDING;\n\n    public movies?: MovieTile[];\n\n    constructor(private apiService: ApiService, private authService: AuthService) {}\n\n    public ngOnInit() {\n        const imageTypes = [\"Primary\", \"Backdrop\", \"Banner\", \"Thumb\"];\n        this.apiService\n            .get<{ Items: Item[] }>(`/Users/${this.authService.userId}/Items`, {\n                query: {\n                    SortBy: this.sortAttr,\n                    SortOrder: this.sortOrder,\n                    IncludeItemTypes: \"Movie\",\n                    Recursive: \"true\",\n                    Fields: \"PrimaryImageAspectRatio,MediaSourceCount,BasicSyncInfo\",\n                    ImageTypeLimit: \"1\",\n                    EnableImageTypes: imageTypes.join(\",\"),\n                    StartIndex: \"0\",\n                    Limit: \"100\"\n                }\n            })\n            .subscribe(({ Items }) => {\n                this.movies = Items.map(\n                    (item): MovieTile => {\n                        const helper = new ItemHelper(item);\n\n                        return {\n                            image: helper.getFirstImageLocation(this.apiService.base, imageTypes)\n                        };\n                    }\n                );\n            });\n    }\n\n    public loadMore() {\n        console.log(\"load more\");\n    }\n}\n","/**\n * @fileoverview This file was generated by the Angular template compiler. Do not edit.\n *\n * @suppress {suspiciousCode,uselessCode,missingProperties,missingOverride,checkTypes}\n * tslint:disable\n */ \nimport * as i0 from \"./movies.component.scss.shim.ngstyle\";\nimport * as i1 from \"@angular/core\";\nimport * as i2 from \"@angular/material/card\";\nimport * as i3 from \"../../../../node_modules/@angular/material/grid-list/typings/index.ngfactory\";\nimport * as i4 from \"@angular/material/grid-list\";\nimport * as i5 from \"../../../../node_modules/@angular/material/card/typings/index.ngfactory\";\nimport * as i6 from \"@angular/platform-browser/animations\";\nimport * as i7 from \"@angular/material/core\";\nimport * as i8 from \"@angular/cdk/platform\";\nimport * as i9 from \"@angular/common\";\nimport * as i10 from \"ngx-infinite-scroll\";\nimport * as i11 from \"@angular/cdk/bidi\";\nimport * as i12 from \"./movies.component\";\nimport * as i13 from \"../../common/api/api.service\";\nimport * as i14 from \"../../auth/auth.service\";\nvar styles_MoviesComponent = [i0.styles];\nvar RenderType_MoviesComponent = i1.ɵcrt({ encapsulation: 0, styles: styles_MoviesComponent, data: {} });\nexport { RenderType_MoviesComponent as RenderType_MoviesComponent };\nfunction View_MoviesComponent_2(_l) { return i1.ɵvid(0, [(_l()(), i1.ɵeld(0, 0, null, null, 1, \"img\", [[\"class\", \"mat-card-image\"], [\"mat-card-image\", \"\"]], [[8, \"src\", 4]], null, null, null, null)), i1.ɵdid(1, 16384, null, 0, i2.MatCardImage, [], null, null)], null, function (_ck, _v) { var currVal_0 = _v.parent.context.$implicit.image; _ck(_v, 0, 0, currVal_0); }); }\nfunction View_MoviesComponent_1(_l) { return i1.ɵvid(0, [(_l()(), i1.ɵeld(0, 0, null, null, 6, \"mat-grid-tile\", [[\"class\", \"mat-grid-tile\"]], null, null, null, i3.View_MatGridTile_0, i3.RenderType_MatGridTile)), i1.ɵdid(1, 49152, [[1, 4]], 0, i4.MatGridTile, [i1.ElementRef, [2, i4.ɵa5]], null, null), (_l()(), i1.ɵeld(2, 0, null, 0, 4, \"mat-card\", [[\"class\", \"mat-card mat-ripple\"], [\"mat-ripple\", \"\"]], [[2, \"_mat-animation-noopable\", null], [2, \"mat-ripple-unbounded\", null]], null, null, i5.View_MatCard_0, i5.RenderType_MatCard)), i1.ɵdid(3, 49152, null, 0, i2.MatCard, [[2, i6.ANIMATION_MODULE_TYPE]], null, null), i1.ɵdid(4, 212992, null, 0, i7.MatRipple, [i1.ElementRef, i1.NgZone, i8.Platform, [2, i7.MAT_RIPPLE_GLOBAL_OPTIONS], [2, i6.ANIMATION_MODULE_TYPE]], null, null), (_l()(), i1.ɵand(16777216, null, 0, 1, null, View_MoviesComponent_2)), i1.ɵdid(6, 16384, null, 0, i9.NgIf, [i1.ViewContainerRef, i1.TemplateRef], { ngIf: [0, \"ngIf\"] }, null)], function (_ck, _v) { _ck(_v, 4, 0); var currVal_2 = _v.context.$implicit.image; _ck(_v, 6, 0, currVal_2); }, function (_ck, _v) { var currVal_0 = (i1.ɵnov(_v, 3)._animationMode === \"NoopAnimations\"); var currVal_1 = i1.ɵnov(_v, 4).unbounded; _ck(_v, 2, 0, currVal_0, currVal_1); }); }\nexport function View_MoviesComponent_0(_l) { return i1.ɵvid(0, [(_l()(), i1.ɵeld(0, 0, null, null, 7, \"div\", [[\"class\", \"list-wrapper\"], [\"infinite-scroll\", \"\"]], null, [[null, \"scrolled\"]], function (_v, en, $event) { var ad = true; var _co = _v.component; if ((\"scrolled\" === en)) {\n        var pd_0 = (_co.loadMore() !== false);\n        ad = (pd_0 && ad);\n    } return ad; }, null, null)), i1.ɵdid(1, 4866048, null, 0, i10.InfiniteScrollDirective, [i1.ElementRef, i1.NgZone], { infiniteScrollDistance: [0, \"infiniteScrollDistance\"], scrollWindow: [1, \"scrollWindow\"], immediateCheck: [2, \"immediateCheck\"], horizontal: [3, \"horizontal\"] }, { scrolled: \"scrolled\" }), (_l()(), i1.ɵeld(2, 0, null, null, 5, \"mat-grid-list\", [[\"class\", \"mat-grid-list\"], [\"cols\", \"7\"]], null, null, null, i3.View_MatGridList_0, i3.RenderType_MatGridList)), i1.ɵprd(6144, null, i4.ɵa5, null, [i4.MatGridList]), i1.ɵdid(4, 2211840, null, 1, i4.MatGridList, [i1.ElementRef, [2, i11.Directionality]], { cols: [0, \"cols\"] }, null), i1.ɵqud(603979776, 1, { _tiles: 1 }), (_l()(), i1.ɵand(16777216, null, 0, 1, null, View_MoviesComponent_1)), i1.ɵdid(7, 278528, null, 0, i9.NgForOf, [i1.ViewContainerRef, i1.TemplateRef, i1.IterableDiffers], { ngForOf: [0, \"ngForOf\"] }, null)], function (_ck, _v) { var _co = _v.component; var currVal_0 = 20; var currVal_1 = false; var currVal_2 = true; var currVal_3 = false; _ck(_v, 1, 0, currVal_0, currVal_1, currVal_2, currVal_3); var currVal_4 = \"7\"; _ck(_v, 4, 0, currVal_4); var currVal_5 = _co.movies; _ck(_v, 7, 0, currVal_5); }, null); }\nexport function View_MoviesComponent_Host_0(_l) { return i1.ɵvid(0, [(_l()(), i1.ɵeld(0, 0, null, null, 1, \"jellyfin-movies\", [], null, null, null, View_MoviesComponent_0, RenderType_MoviesComponent)), i1.ɵdid(1, 114688, null, 0, i12.MoviesComponent, [i13.ApiService, i14.AuthService], null, null)], function (_ck, _v) { _ck(_v, 1, 0); }, null); }\nvar MoviesComponentNgFactory = i1.ɵccf(\"jellyfin-movies\", i12.MoviesComponent, View_MoviesComponent_Host_0, {}, {}, []);\nexport { MoviesComponentNgFactory as MoviesComponentNgFactory };\n","/**\n * @fileoverview This file was generated by the Angular template compiler. Do not edit.\n *\n * @suppress {suspiciousCode,uselessCode,missingProperties,missingOverride,checkTypes}\n * tslint:disable\n */ \nvar styles = [\".list-wrapper[_ngcontent-%COMP%]{max-height:100%}\"];\nexport { styles as styles };\n","<div\n    class=\"list-wrapper\"\n    infinite-scroll\n    [scrollWindow]=\"false\"\n    [infiniteScrollDistance]=\"20\"\n    [immediateCheck]=\"true\"\n    [horizontal]=\"false\"\n    (scrolled)=\"loadMore()\"\n>\n    <mat-grid-list cols=\"7\">\n        <mat-grid-tile *ngFor=\"let movie of movies\">\n            <mat-card mat-ripple>\n                <img mat-card-image *ngIf=\"movie.image\" [src]=\"movie.image\" />\n            </mat-card>\n        </mat-grid-tile>\n    </mat-grid-list>\n</div>\n","/**\n * @fileoverview This file was generated by the Angular template compiler. Do not edit.\n *\n * @suppress {suspiciousCode,uselessCode,missingProperties,missingOverride,checkTypes}\n * tslint:disable\n */ \nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/material/tooltip\";\nimport * as i2 from \"@angular/common\";\nimport * as i3 from \"@angular/cdk/observers\";\nimport * as i4 from \"@angular/cdk/overlay\";\nimport * as i5 from \"@angular/cdk/bidi\";\nimport * as i6 from \"@angular/platform-browser\";\nimport * as i7 from \"@angular/material/core\";\nimport * as i8 from \"@angular/cdk/platform\";\nimport * as i9 from \"@angular/cdk/a11y\";\nimport * as i10 from \"@angular/cdk/portal\";\nimport * as i11 from \"@angular/cdk/scrolling\";\nimport * as i12 from \"@angular/cdk/layout\";\nvar MatTooltipModuleNgFactory = i0.ɵcmf(i1.MatTooltipModule, [], function (_l) { return i0.ɵmod([i0.ɵmpd(512, i0.ComponentFactoryResolver, i0.ɵCodegenComponentFactoryResolver, [[8, [TooltipComponentNgFactory]], [3, i0.ComponentFactoryResolver], i0.NgModuleRef]), i0.ɵmpd(4608, i2.NgLocalization, i2.NgLocaleLocalization, [i0.LOCALE_ID, [2, i2.ɵangular_packages_common_common_a]]), i0.ɵmpd(4608, i3.MutationObserverFactory, i3.MutationObserverFactory, []), i0.ɵmpd(4608, i4.Overlay, i4.Overlay, [i4.ScrollStrategyOptions, i4.OverlayContainer, i0.ComponentFactoryResolver, i4.OverlayPositionBuilder, i4.OverlayKeyboardDispatcher, i0.Injector, i0.NgZone, i2.DOCUMENT, i5.Directionality, [2, i2.Location]]), i0.ɵmpd(5120, i4.ɵc, i4.ɵd, [i4.Overlay]), i0.ɵmpd(5120, i1.MAT_TOOLTIP_SCROLL_STRATEGY, i1.MAT_TOOLTIP_SCROLL_STRATEGY_FACTORY, [i4.Overlay]), i0.ɵmpd(4608, i6.HAMMER_GESTURE_CONFIG, i7.GestureConfig, [[2, i7.MAT_HAMMER_OPTIONS], [2, i7.MatCommonModule]]), i0.ɵmpd(1073742336, i2.CommonModule, i2.CommonModule, []), i0.ɵmpd(1073742336, i8.PlatformModule, i8.PlatformModule, []), i0.ɵmpd(1073742336, i3.ObserversModule, i3.ObserversModule, []), i0.ɵmpd(1073742336, i9.A11yModule, i9.A11yModule, []), i0.ɵmpd(1073742336, i5.BidiModule, i5.BidiModule, []), i0.ɵmpd(1073742336, i10.PortalModule, i10.PortalModule, []), i0.ɵmpd(1073742336, i11.ScrollingModule, i11.ScrollingModule, []), i0.ɵmpd(1073742336, i4.OverlayModule, i4.OverlayModule, []), i0.ɵmpd(1073742336, i7.MatCommonModule, i7.MatCommonModule, [[2, i7.MATERIAL_SANITY_CHECKS], [2, i6.HAMMER_LOADER]]), i0.ɵmpd(1073742336, i1.MatTooltipModule, i1.MatTooltipModule, [])]); });\nexport { MatTooltipModuleNgFactory as MatTooltipModuleNgFactory };\nvar styles_TooltipComponent = [\".mat-tooltip-panel{pointer-events:none!important}.mat-tooltip{color:#fff;border-radius:4px;margin:14px;max-width:250px;padding-left:8px;padding-right:8px;overflow:hidden;text-overflow:ellipsis}@media (-ms-high-contrast:active){.mat-tooltip{outline:solid 1px}}.mat-tooltip-handset{margin:24px;padding-left:16px;padding-right:16px}\"];\nvar RenderType_TooltipComponent = i0.ɵcrt({ encapsulation: 2, styles: styles_TooltipComponent, data: { \"animation\": [{ type: 7, name: \"state\", definitions: [{ type: 0, name: \"initial, void, hidden\", styles: { type: 6, styles: { opacity: 0, transform: \"scale(0)\" }, offset: null }, options: undefined }, { type: 0, name: \"visible\", styles: { type: 6, styles: { transform: \"scale(1)\" }, offset: null }, options: undefined }, { type: 1, expr: \"* => visible\", animation: { type: 4, styles: { type: 5, steps: [{ type: 6, styles: { opacity: 0, transform: \"scale(0)\", offset: 0 }, offset: null }, { type: 6, styles: { opacity: 0.5, transform: \"scale(0.99)\", offset: 0.5 }, offset: null }, { type: 6, styles: { opacity: 1, transform: \"scale(1)\", offset: 1 }, offset: null }] }, timings: \"200ms cubic-bezier(0, 0, 0.2, 1)\" }, options: null }, { type: 1, expr: \"* => hidden\", animation: { type: 4, styles: { type: 6, styles: { opacity: 0 }, offset: null }, timings: \"100ms cubic-bezier(0, 0, 0.2, 1)\" }, options: null }], options: {} }] } });\nexport { RenderType_TooltipComponent as RenderType_TooltipComponent };\nexport function View_TooltipComponent_0(_l) { return i0.ɵvid(2, [(_l()(), i0.ɵeld(0, 0, null, null, 4, \"div\", [[\"class\", \"mat-tooltip\"]], [[2, \"mat-tooltip-handset\", null], [24, \"@state\", 0]], [[null, \"@state.start\"], [null, \"@state.done\"]], function (_v, en, $event) { var ad = true; var _co = _v.component; if ((\"@state.start\" === en)) {\n        var pd_0 = (_co._animationStart() !== false);\n        ad = (pd_0 && ad);\n    } if ((\"@state.done\" === en)) {\n        var pd_1 = (_co._animationDone($event) !== false);\n        ad = (pd_1 && ad);\n    } return ad; }, null, null)), i0.ɵprd(512, null, i2.ɵNgClassImpl, i2.ɵNgClassR2Impl, [i0.IterableDiffers, i0.KeyValueDiffers, i0.ElementRef, i0.Renderer2]), i0.ɵdid(2, 278528, null, 0, i2.NgClass, [i2.ɵNgClassImpl], { klass: [0, \"klass\"], ngClass: [1, \"ngClass\"] }, null), i0.ɵpid(131072, i2.AsyncPipe, [i0.ChangeDetectorRef]), (_l()(), i0.ɵted(4, null, [\"\", \"\"]))], function (_ck, _v) { var _co = _v.component; var currVal_2 = \"mat-tooltip\"; var currVal_3 = _co.tooltipClass; _ck(_v, 2, 0, currVal_2, currVal_3); }, function (_ck, _v) { var _co = _v.component; var tmp_0_0 = null; var currVal_0 = (((tmp_0_0 = i0.ɵunv(_v, 0, 0, i0.ɵnov(_v, 3).transform(_co._isHandset))) == null) ? null : tmp_0_0.matches); var currVal_1 = _co._visibility; _ck(_v, 0, 0, currVal_0, currVal_1); var currVal_4 = _co.message; _ck(_v, 4, 0, currVal_4); }); }\nexport function View_TooltipComponent_Host_0(_l) { return i0.ɵvid(0, [(_l()(), i0.ɵeld(0, 0, null, null, 1, \"mat-tooltip-component\", [[\"aria-hidden\", \"true\"]], [[4, \"zoom\", null]], [[\"body\", \"click\"]], function (_v, en, $event) { var ad = true; if ((\"body:click\" === en)) {\n        var pd_0 = (i0.ɵnov(_v, 1)._handleBodyInteraction() !== false);\n        ad = (pd_0 && ad);\n    } return ad; }, View_TooltipComponent_0, RenderType_TooltipComponent)), i0.ɵdid(1, 180224, null, 0, i1.TooltipComponent, [i0.ChangeDetectorRef, i12.BreakpointObserver], null, null)], null, function (_ck, _v) { var currVal_0 = ((i0.ɵnov(_v, 1)._visibility === \"visible\") ? 1 : null); _ck(_v, 0, 0, currVal_0); }); }\nvar TooltipComponentNgFactory = i0.ɵccf(\"mat-tooltip-component\", i1.TooltipComponent, View_TooltipComponent_Host_0, {}, {}, []);\nexport { TooltipComponentNgFactory as TooltipComponentNgFactory };\n","<div class=\"mat-tooltip\" [ngClass]=\"tooltipClass\" [class.mat-tooltip-handset]=\"(_isHandset | async)?.matches\" [@state]=\"_visibility\" (@state.start)=\"_animationStart()\" (@state.done)=\"_animationDone($event)\">{{message}}</div>","import { NgModule } from \"@angular/core\";\nimport { RouterModule, Routes } from \"@angular/router\";\nimport { HomeComponent } from \"../library/home/home.component\";\nimport { MoviesComponent } from \"../library/movies/movies.component\";\n\nconst routes: Routes = [\n    {\n        path: \"\",\n        component: HomeComponent\n    },\n    {\n        path: \"movies\",\n        component: MoviesComponent\n    }\n];\n\n@NgModule({\n    imports: [RouterModule.forChild(routes)],\n    exports: [RouterModule]\n})\nexport class ShellRoutingModule {}\n","/**\n * @fileoverview This file was generated by the Angular template compiler. Do not edit.\n *\n * @suppress {suspiciousCode,uselessCode,missingProperties,missingOverride,checkTypes}\n * tslint:disable\n */ \nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"./shell.module\";\nimport * as i2 from \"../../../node_modules/@angular/router/router.ngfactory\";\nimport * as i3 from \"../library/home/home.component.ngfactory\";\nimport * as i4 from \"../library/movies/movies.component.ngfactory\";\nimport * as i5 from \"../../../node_modules/@angular/material/tooltip/typings/index.ngfactory\";\nimport * as i6 from \"@angular/common\";\nimport * as i7 from \"@angular/cdk/observers\";\nimport * as i8 from \"@angular/cdk/overlay\";\nimport * as i9 from \"@angular/cdk/bidi\";\nimport * as i10 from \"@angular/material/tooltip\";\nimport * as i11 from \"@angular/platform-browser\";\nimport * as i12 from \"@angular/material/core\";\nimport * as i13 from \"@angular/router\";\nimport * as i14 from \"./shell-routing.module\";\nimport * as i15 from \"@angular/material/card\";\nimport * as i16 from \"@angular/cdk/platform\";\nimport * as i17 from \"@angular/material/button\";\nimport * as i18 from \"@angular/material/progress-spinner\";\nimport * as i19 from \"ngx-infinite-scroll\";\nimport * as i20 from \"@angular/cdk/a11y\";\nimport * as i21 from \"@angular/cdk/portal\";\nimport * as i22 from \"@angular/cdk/scrolling\";\nimport * as i23 from \"@angular/material/progress-bar\";\nimport * as i24 from \"@angular/material/icon\";\nimport * as i25 from \"@angular/material/grid-list\";\nimport * as i26 from \"../library/home/home.component\";\nimport * as i27 from \"../library/movies/movies.component\";\nvar ShellModuleNgFactory = i0.ɵcmf(i1.ShellModule, [], function (_l) { return i0.ɵmod([i0.ɵmpd(512, i0.ComponentFactoryResolver, i0.ɵCodegenComponentFactoryResolver, [[8, [i2.ɵangular_packages_router_router_lNgFactory, i3.HomeComponentNgFactory, i4.MoviesComponentNgFactory, i5.TooltipComponentNgFactory]], [3, i0.ComponentFactoryResolver], i0.NgModuleRef]), i0.ɵmpd(4608, i6.NgLocalization, i6.NgLocaleLocalization, [i0.LOCALE_ID, [2, i6.ɵangular_packages_common_common_a]]), i0.ɵmpd(4608, i7.MutationObserverFactory, i7.MutationObserverFactory, []), i0.ɵmpd(4608, i8.Overlay, i8.Overlay, [i8.ScrollStrategyOptions, i8.OverlayContainer, i0.ComponentFactoryResolver, i8.OverlayPositionBuilder, i8.OverlayKeyboardDispatcher, i0.Injector, i0.NgZone, i6.DOCUMENT, i9.Directionality, [2, i6.Location]]), i0.ɵmpd(5120, i8.ɵc, i8.ɵd, [i8.Overlay]), i0.ɵmpd(5120, i10.MAT_TOOLTIP_SCROLL_STRATEGY, i10.MAT_TOOLTIP_SCROLL_STRATEGY_FACTORY, [i8.Overlay]), i0.ɵmpd(4608, i11.HAMMER_GESTURE_CONFIG, i12.GestureConfig, [[2, i12.MAT_HAMMER_OPTIONS], [2, i12.MatCommonModule]]), i0.ɵmpd(1073742336, i6.CommonModule, i6.CommonModule, []), i0.ɵmpd(1073742336, i13.RouterModule, i13.RouterModule, [[2, i13.ɵangular_packages_router_router_a], [2, i13.Router]]), i0.ɵmpd(1073742336, i14.ShellRoutingModule, i14.ShellRoutingModule, []), i0.ɵmpd(1073742336, i9.BidiModule, i9.BidiModule, []), i0.ɵmpd(1073742336, i12.MatCommonModule, i12.MatCommonModule, [[2, i12.MATERIAL_SANITY_CHECKS], [2, i11.HAMMER_LOADER]]), i0.ɵmpd(1073742336, i15.MatCardModule, i15.MatCardModule, []), i0.ɵmpd(1073742336, i16.PlatformModule, i16.PlatformModule, []), i0.ɵmpd(1073742336, i12.MatRippleModule, i12.MatRippleModule, []), i0.ɵmpd(1073742336, i17.MatButtonModule, i17.MatButtonModule, []), i0.ɵmpd(1073742336, i18.MatProgressSpinnerModule, i18.MatProgressSpinnerModule, []), i0.ɵmpd(1073742336, i19.InfiniteScrollModule, i19.InfiniteScrollModule, []), i0.ɵmpd(1073742336, i7.ObserversModule, i7.ObserversModule, []), i0.ɵmpd(1073742336, i20.A11yModule, i20.A11yModule, []), i0.ɵmpd(1073742336, i21.PortalModule, i21.PortalModule, []), i0.ɵmpd(1073742336, i22.ScrollingModule, i22.ScrollingModule, []), i0.ɵmpd(1073742336, i8.OverlayModule, i8.OverlayModule, []), i0.ɵmpd(1073742336, i10.MatTooltipModule, i10.MatTooltipModule, []), i0.ɵmpd(1073742336, i23.MatProgressBarModule, i23.MatProgressBarModule, []), i0.ɵmpd(1073742336, i24.MatIconModule, i24.MatIconModule, []), i0.ɵmpd(1073742336, i12.MatLineModule, i12.MatLineModule, []), i0.ɵmpd(1073742336, i25.MatGridListModule, i25.MatGridListModule, []), i0.ɵmpd(1073742336, i1.ShellModule, i1.ShellModule, []), i0.ɵmpd(1024, i13.ROUTES, function () { return [[{ path: \"\", component: i26.HomeComponent }, { path: \"movies\", component: i27.MoviesComponent }]]; }, [])]); });\nexport { ShellModuleNgFactory as ShellModuleNgFactory };\n"],"sourceRoot":"webpack:///"}